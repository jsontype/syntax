[Cors Error 회피 커맨드]

1. Cors Error 회피 커맨드란?
  CORS(Cross-Origin Resource Sharing) 에러 회피 커맨드는,
  브라우저의 동일 출처 정책(Same-Origin Policy)을 무시하고 다른 출처(도메인)의 리소스에 접근할 수 있도록 하는 명령어이다.
  * 동일 출처 정책 : 브라우저가 보안 상의 안전을 이유로 스크립트가 다른 출처의 리소스를 로드할 때 제약을 가하는 정책이다.
  이를 통해 개발자는 개발 단계에서 발생할 수 있는 CORS 관련 문제를 임시로 해결하고, 다른 출처(도메인)의 API나 리소스를 테스트할 수 있다.

1. Cors Error 회피 커맨드를 현장에서 사용하는 경우의 원인
  CORS 에러는 웹 애플리케이션에서 다른 출처의 리소스를 요청할 때 발생하는데, 
  개발 과정에서는 종종 로컬 환경에서 개발 중인 프론트엔드가 다른 출처(예: 로컬 백엔드 서버, 외부 API 등)의 데이터를 요청해야 하는 경우가 많다.
  이때, 개발자는 CORS 에러를 회피하기 위해 특정 커맨드를 사용해 브라우저의 보안 정책을 우회할 수 있다.

1. Cors Error 회피 방법
  아래의 커맨드는 Chrome을 웹 보안 기능이 비활성화된 새로운 사용자 프로필로 실행시키며, 
  이를 통해 개발자는 CORS 정책에 의해 발생하는 제약 없이 API 요청을 테스트할 수 있다.
  $ open -na "Google Chrome" --args --user-data-dir=/tmp/dev_chrome_profile --disable-web-security
  이후 새로운 크롬 창이 열리면 여기에서 localhost에 들어가 "백엔드 호출을 포함한" 테스트를 진행하면 된다.

1. 추가 유의사항
  이 방법은 개발 환경에서 임시적인 해결책으로 사용되어야 하며, 실제 프로덕션 환경에서는 보안 상의 이유로 사용해서는 안 된다.
  실제 배포 전에는 서버 측에서 적절한 CORS 정책을 설정하여, 필요한 출처에서의 접근만을 허용하도록 해야 한다.
  다른 브라우저(Firefox, Safari 등)에서는 명령어와 옵션이 다를 수 있다.
