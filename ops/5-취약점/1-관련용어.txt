[라이브러리의 취약점 대응에 대해서]

1. 관련 용어
  - EOS(End of Support)
    공식적인 지원이 종료되었지만, 아직 생애는 끝나지 않은 상태.
    EOS 이후 새로운 보안 업데이트도, 버전도 제공되지 않기 때문에, 결국 EOL이 되므로 사용을 피하자.
  - EOL(End of Life)
    EOL은 라이브러리의 공식적인 생애 주기가 끝난 상태
    EOL이 지난 라이브러리를 사용하는 것은 보안 취약점에 노출될 수 있다.
    따라서 반드시 다른 라이브러리로 변경해야 한다.
  - Vulnerability(취약점)
    라이브러리의 취약점은 보안 약점을 의미한다.
    취약점이 있는 라이브러리는 해커의 공격 포인트가 될 수 있다.
    심각도(Severity)는 "Critical, High, Medium, Low" 나뉘어지는데, 어디까지 대응할지는 현장마다 다르다.
    일반적으로는 "Critical ~ High"까지 대응하는 현장들이 많다.
    또, 현장을 불문하고 "Critical"은 반드시 대응하는 것이 좋다.
  - CVSS(Common Vulnerability Scoring System)에 따른 취약점 심각도(Severity) 분류
    Critical 심각도: 시스템 침투, 데이터 유출 등 심각한 피해를 야기. 즉각적 업그레이드 필요
    High 심각도: 시스템 손상, 데이터 훼손 등의 피해를 야기. 가능한 빠른 업그레이드 필요
    Medium 심각도: 보통 피해를 야기하지 않으나, 상황에 따라서 업그레이드가 필요할 수 있음
    Low 심각도: 거의 피해를 야기하지 않으나, 지속적인 관찰이 필요

1. 라이브러리 취약점 대응이란?
  취약점 대응은 취약점이 있는 라이브러리를 업그레이드하거나 패치하는 것을 의미한다.
  이 대응은 보안 취약점을 해결하고, 시스템을 보호하기 위한 것이다.
