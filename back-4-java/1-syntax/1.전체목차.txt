기존 자바 목차

1장 프로그램의 발전 과정
1.1 클라이언트 PC 기반 프로그램
1.2 클라이언트-서버 기반 프로그램 동작 방식
1.3 웹 기반 프로그램 동작 방식

2장 웹 프로그래밍과 JSP
2.1 웹 프로그래밍의 기본
2.2 정적 웹 프로그래밍
2.3 동적 웹 프로그래밍
2.4 JSP 프로그램의 특징

3장 개발 환경 설정하기
3.1 JDK 설치하기
3.2 JDK 환경 변수 설정하기
3.3 톰캣 컨테이너 설치하기
3.4 이클립스 IDE 설치하기
3.5 Java EE API 문서 즐겨찾기에 추가하기
3.6 비주얼 스튜디오 코드 설치하기
3.7 Oracle DBMS 설치하기
3.8 SQL Developer 설치하기
3.9 exERD 설치하기

4장 웹 애플리케이션 이해하기
4.1 웹 애플리케이션
4.2 웹 애플리케이션의 기본 구조
4.3 컨테이너에서 웹 애플리케이션 실행하기
4.4 이클립스에서 웹 애플리케이션 실습하기
4.5 웹 애플리케이션 서비스하기

5장 서블릿 이해하기
5.1 서블릿이란?
5.2 서블릿 API 계층 구조와 기능
5.3 서블릿의 생명주기 메서드
5.4 FirstServlet을 이용한 실습
5.5 서블릿 동작 과정
5.6 애너테이션을 이용한 서블릿 매핑

6장 서블릿 기초
6.1 서블릿의 세 가지 기본 기능
6.1.1 서블릿 기본 기능 수행 과정
6.2 [form] 태그 이용해 서블릿에 요청하기
6.3 서블릿에서 클라이언트의 요청을 얻는 방법
6.4 서블릿의 응답 처리 방법
6.5 웹 브라우저에서 서블릿으로 데이터 전송하기
6.6 GET 방식과 POST 방식 요청 동시에 처리하기
6.7 자바스크립트로 서블릿에 요청하기
6.8 서블릿을 이용한 여러 가지 실습 예제

7장 서블릿 비즈니스 로직 처리
7.1 서블릿의 비즈니스 로직 처리 방법
7.2 서블릿의 데이터베이스 연동하기
7.3 DataSource 이용해 데이터베이스 연동하기
7.4 DataSource 이용해 회원 정보 등록하기
7.5 회원 정보 삭제하기

8장 서블릿 확장 API 사용하기
8.1 서블릿 포워드 기능 사용하기
8.2 서블릿의 여러 가지 포워드 방법
8.3 dispatch를 이용한 포워드 방법
8.4 바인딩
8.5 ServletContext와 ServletConfig 사용법
8.6 load-on-startup 기능 사용하기

9장 쿠키와 세션 알아보기
9.1 웹 페이지 연결 기능
9.2 [hidden] 태그와 URL Rewriting 이용해 웹 페이지 연동하기
9.3 쿠키를 이용한 웹 페이지 연동 기능
9.4 세션을 이용한 웹 페이지 연동 기능
9.5 encodeURL( ) 사용법
9.6 세션을 이용한 로그인 예제

10장 서블릿의 필터와 리스너 기능
10.1 서블릿 속성과 스코프
10.2 서블릿의 여러 가지 URL 패턴
10.3 Filter API
10.4 여러 가지 서블릿 관련 Listener API

11장 JSP 정의와 구성 요소
11.1 JSP 등장 배경
11.2 JSP의 3단계 작업 과정
11.3 JSP 페이지 구성 요소
11.4 디렉티브 태그

12장 JSP 스크립트 요소 기능
12.1 JSP 스크립트 요소
12.2 선언문 사용하기
12.3 스크립트릿 사용하기
12.4 표현식 사용하기
12.5 JSP 주석문 사용하기
12.6 스크립트 요소 이용해 실습하기
12.7 내장 객체(내장 변수) 기능
12.8 JSP 페이지 예외 처리하기
12.9 JSP welcome 파일 지정하기
12.10 스크립트 요소 이용해 회원 정보 조회하기

13장 자바 코드를 없애는 액션 태그
13.1 인클루드 액션 태그 사용하기
13.2 포워드 액션 태그 사용하기
13.3 useBean, setProperty, getProperty 액션 태그 사용하기

14장 표현 언어와 JSTL
14.1 표현 언어란?
14.2 표현 언어 내장 객체(내장 변수)
14.3 표현 언어로 바인딩 속성 출력하기
14.4 커스텀 태그
14.5 JSTL 표준 태그 라이브러리(JSTL)
14.6 Core 태그 라이브러리 사용하기
14.7 Core 태그 라이브러리 실습 예제
14.8 다국어 태그 라이브러리 사용하기
14.9 한글을 아스키 코드로 변환하기
14.10 포매팅 태그 라이브러리 사용하기
14.11 문자열 처리 함수 사용하기
14.12 표현 언어와 JSTL을 이용한 회원 관리 실습

15장 JSP 페이지를 풍부하게 하는 오픈 소스 기능
15.1 JSP에서 파일 업로드
15.2 JSP에서 파일 다운로드

16장 HTML5와 제이쿼리
16.1 HTML5 주요 개념
16.2 HTML5 시맨틱 웹을 위한 구성 요소
16.3 제이쿼리 주요 개념
16.4 제이쿼리의 여러 가지 기능
16.5 제이쿼리 Ajax 기능
16.6 제이쿼리에서 JSON 사용하기

17장 모델2 방식으로 효율적으로 개발하기
17.1 웹 애플리케이션 모델
17.2 MVC 디자인 패턴
17.3 MVC를 이용한 회원 관리
17.4 모델2로 답변형 게시판 구현하기

18장 스프링 프레임워크 시작하기
18.1 프레임워크란?
18.2 스프링 프레임워크 환경 설정하기

19장 스프링 의존성 주입과 제어 역전 기능
19.1 의존성 주입하기
19.2 의존성 주입 실습하기
19.3 회원 기능 이용해 DI 실습하기

20장 스프링 AOP 기능
20.1 관점 지향 프로그래밍의 등장
20.2 스프링에서 AOP 기능 사용하기

21장 스프링 MVC 기능
21.1 스프링 프레임워크 MVC의 특징
21.2 SimpleUrlController 이용해 스프링 MVC 실습하기
21.3 MultiActionController 이용해 스프링 MVC 실습하기
21.4 MultiActionController 이용해 회원 정보 표시하기
21.5 요청명과 동일한 JSP 이름 표시하기

22장 스프링 JDBC 기능
22.1 스프링 JDBC로 데이터베이스와의 연동 설정하기
22.2 JdbcTemplate 클래스 이용해 회원 정보 조회하기

23장 마이바티스 프레임워크 사용하기
23.1 마이바티스란?
23.2 마이바티스 설치하기
23.3 마이바티스 이용해 회원 기능 실습하기
23.4 마이바티스 이용해 회원 정보 CRUD 실습하기
23.5 마이바티스의 동적 SQL문 사용하기

24장 스프링과 마이바티스 연동하기
24.1 스프링-마이바티스 연동 관련 XML 파일 설정하기
24.2 마이바티스 관련 XML 파일 설정하기
24.3 자바 클래스와 JSP 파일 구현하기

25장 스프링 트랜잭션 기능 사용하기
25.1 트랜잭션 기능
25.2 은행 계좌 이체를 통한 트랜잭션 기능
25.3 스프링의 트랜잭션 속성 알아보기
25.4 스프링 트랜잭션 기능 적용해 계좌 이체 실습하기

26장 스프링 애너테이션 기능
26.1 스프링 애너테이션이란?
26.2 스프링 애너테이션 이용해 URL 요청 실습하기
26.3 스프링 애너테이션 이용해 로그인 기능 구현하기
26.4 @Autowired 애너테이션 이용해 빈 주입하기

27장 메이븐과 스프링 STS 사용법
27.1 메이븐 설치하기
27.2 메이븐 환경 변수 설정하기
27.3 STS 설치하기
27.4 메이븐 프로젝트의 구조 및 구성 요소 살펴보기
27.5 스프링 프로젝트 만들기
27.6 STS 프로젝트 실행하기
27.7 STS 환경에서 마이바티스 실습하기
27.8 log4j 알아보기 9
27.9 타일즈 기능 살펴보기
27.10 JSP 페이지에 타일즈 적용하기
27.11 페이지 본문에 회원 목록창 나타내기
27.12 로그인 기능 구현하기

28장 스프링에서 지원하는 여러 가지 기능
28.1 다중 파일 업로드하기
28.2 썸네일 이미지 사용하기
28.3 스프링 이메일 사용하기
28.4 HTML 형식 메일 보내기
28.5 스프링 인터셉터 사용하기

28.6 인터셉터 사용해 요청명에서 뷰이름 가져오기

29장 스프링 REST API 사용하기
29.1 REST란?
29.2 @RestController 사용하기
29.3 @PathVariable 사용하기
29.4 @RequestBody와 @ResponseBody 사용하기
29.5 REST 방식으로 URI 표현하기

30장 스프링으로 답변형 게시판 만들기
30.1 기존 소스 코드 변경하기
30.2 마이바티스 관련 XML 파일 설정하기
30.3 타일즈 설정하기
30.4 게시판 목록 표시하기
30.5 새 글 추가하기
30.6 글상세창 구현하기
30.7 글 수정하기
30.8 글 삭제하기
30.9 새 글 추가 시 여러 이미지 파일 첨부하기
30.10 글상세창에 여러 이미지 표시하기

31장 도서 쇼핑몰 만들기
31.1 쇼핑몰 애플리케이션 설치하기
31.2 도서 쇼핑몰 기능 알아보기
31.3 메인 페이지 구현하기
31.4 상품 상세 구현하기
31.5 Ajax 이용해 검색 자동 완성 기능 구현하기
31.6 로그인과 회원 가입하기
31.7 장바구니 기능 구현하기
31.8 주문 기능 구현하기
31.9 마이페이지 기능 구현하기
31.10 상품 관리 기능 구현하기
31.11 주문 관리 기능 구현하기

32장 스프링 부트 사용하기
32.1 스프링 부트란?
32.2 스프링 부트 전용 STS 설치하기
32.3 스프링 부트 프로젝트 생성하기
32.4 스프링 부트 프로젝트 실행하기
32.5 스프링 부트 웹 페이지 만들기
32.6 그레이들 이용해 스프링 부트 실습하기
32.7 마이바티스 사용하기
32.8 타일즈 사용하기
32.9 인터셉터 사용하기


























자바8, 9, 10, 11 목차

[ PART I 기초 ]

CHAPTER 1 자바 8, 9, 10, 11 : 무슨 일이 일어나고 있는가?
1.1 역사의 흐름은 무엇인가?
1.2 왜 아직도 자바는 변화하는가?
1.3 자바 함수
1.4 스트림
1.5 디폴트 메서드와 자바 모듈
1.6 함수형 프로그래밍에서 가져온 다른 유용한 아이디어
1.7 마치며

CHAPTER 2 동작 파라미터화 코드 전달하기
2.1 변화하는 요구사항에 대응하기
2.2 동작 파라미터화
2.3 복잡한 과정 간소화
2.4 실전 예제
2.5 마치며

CHAPTER 3 람다 표현식
3.1 람다란 무엇인가?
3.2 어디에, 어떻게 람다를 사용할까?
3.3 람다 활용 : 실행 어라운드 패턴
3.4 함수형 인터페이스 사용
3.5 형식 검사, 형식 추론, 제약
3.6 메서드 참조
3.7 람다, 메서드 참조 활용하기
3.8 람다 표현식을 조합할 수 있는 유용한 메서드
3.9 비슷한 수학적 개념
3.10 마치며

[ PART II 함수형 데이터 처리 ]

CHAPTER 4 스트림 소개
4.1 스트림이란 무엇인가?
4.2 스트림 시작하기
4.3 스트림과 컬렉션
4.4 스트림 연산
4.5 로드맵
4.6 마치며

CHAPTER 5 스트림 활용
5.1 필터링
5.2 스트림 슬라이싱
5.3 매핑
5.4 검색과 매칭
5.5 리듀싱
5.6 실전 연습
5.7 숫자형 스트림
5.8 스트림 만들기
5.9 마치며

CHAPTER 6 스트림으로 데이터 수집
6.1 컬렉터란 무엇인가?
6.2 리듀싱과 요약
6.3 그룹화
6.4 분할
6.5 Collector 인터페이스
6.6 커스텀 컬렉터를 구현해서 성능 개선하기
6.7 마치며

CHAPTER 7 병렬 데이터 처리와 성능
7.1 병렬 스트림
7.2 포크/조인 프레임워크
7.3 Spliterator 인터페이스
7.4 마치며

[ PART III 스트림과 람다를 이용한 효과적 프로그래밍 ]

CHAPTER 8 컬렉션 API 개선
8.1 컬렉션 팩토리
8.2 리스트와 집합 처리
8.3 맵 처리
8.4 개선된 ConcurrentHashMap
8.5 마치며

CHAPTER 9 리팩터링, 테스팅, 디버깅
9.1 가독성과 유연성을 개선하는 리팩터링
9.2 람다로 객체지향 디자인 패턴 리팩터링하기
9.3 람다 테스팅
9.4 디버깅
9.5 마치며

CHAPTER 10 람다를 이용한 도메인 전용 언어
10.1 도메인 전용 언어
10.2 최신 자바 API의 작은 DSL
10.3 자바로 DSL을 만드는 패턴과 기법
10.4 실생활의 자바 8 DSL
10.5 마치며

[ PART IV 매일 자바와 함께 ]

CHAPTER 11 null 대신 Optional 클래스
11.1 값이 없는 상황을 어떻게 처리할까?
11.2 Optional 클래스 소개
11.3 Optional 적용 패턴
11.4 Optional을 사용한 실용 예제
11.5 마치며

CHAPTER 12 새로운 날짜와 시간 API
12.1 LocalDate, LocalTime, Instant, Duration, Period 클래스
12.2 날짜 조정, 파싱, 포매팅
12.3 다양한 시간대와 캘린더 활용 방법
12.4 마치며

CHAPTER 13 디폴트 메서드
13.1 변화하는 API
13.2 디폴트 메서드란 무엇인가?
13.3 디폴트 메서드 활용 패턴
13.4 해석 규칙
13.5 마치며

CHAPTER 14 자바 모듈 시스템
14.1 압력 : 소프트웨어 유추
14.2 자바 모듈 시스템을 설계한 이유
14.3 자바 모듈 : 큰 그림
14.4 자바 모듈 시스템으로 애플리케이션 개발하기
14.5 여러 모듈 활용하기
14.6 컴파일과 패키징
14.7 자동 모듈
14.8 모듈 정의와 구문들
14.9 더 큰 예제 그리고 더 배울 수 있는 방법
14.10 마치며

[ PART V 개선된 자바 동시성 ]

CHAPTER 15 CompletableFuture와 리액티브 프로그래밍 컨셉의 기초
15.1 동시성을 구현하는 자바 지원의 진화
15.2 동기 API와 비동기 API
15.3 박스와 채널 모델
15.4 CompletableFuture와 콤비네이터를 이용한 동시성
15.5 발행-구독 그리고 리액티브 프로그래밍
15.6 리액티브 시스템 vs 리액티브 프로그래밍
15.7 마치며

CHAPTER 16 CompletableFuture : 안정적 비동기 프로그래밍
16.1 Future의 단순 활용
16.2 비동기 API 구현
16.3 비블록 코드 만들기
16.4 비동기 작업 파이프라인 만들기
16.5 CompletableFuture의 종료에 대응하는 방법
16.6 로드맵
16.7 마치며

CHAPTER 17 리액티브 프로그래밍
17.1 리액티브 매니패스토
17.2 리액티브 스트림과 플로 API
17.3 리액티브 라이브러리 RxJava 사용하기
17.4 마치며

PART VI 함수형 프로그래밍과 자바 진화의 미래

CHAPTER 18 함수형 관점으로 생각하기
18.1 시스템 구현과 유지보수
18.2 함수형 프로그래밍이란 무엇인가?
18.3 재귀와 반복
18.4 마치며

CHAPTER 19 함수형 프로그래밍 기법
19.1 함수는 모든 곳에 존재한다
19.2 영속 자료구조
19.3 스트림과 게으른 평가
19.4 패턴 매칭
19.5 기타 정보
19.6 마치며

CHAPTER 20 OOP와 FP의 조화 : 자바와 스칼라 비교
20.1 스칼라 소개
20.2 함수
20.3 클래스와 트레이트
20.4 마치며

CHAPTER 21 결론 그리고 자바의 미래
21.1 자바 8의 기능 리뷰
21.2 자바 9 모듈 시스템
21.3 자바 10 지역 변수형 추론
21.4 자바의 미래
21.5 더 빠르게 발전하는 자바
21.6 결론

부록
_APPENDIX A 기타 언어 업데이트
_APPENDIX B 기타 라이브러리 업데이트
_APPENDIX C 스트림에 여러 연산 병렬로 실행하기
_APPENDIX D 람다와 JVM 바이트코드

