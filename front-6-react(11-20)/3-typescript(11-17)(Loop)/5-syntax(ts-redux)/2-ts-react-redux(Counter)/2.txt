5. TypeScript 에서 리덕스 프로처럼 사용하기
이번 튜토리얼에서는 TypeScript 에서 리덕스를 프로처럼 사용하는 방법을 배워보도록 하겠습니다. 왜 제목이 "프로처럼" 이냐! 사실 조금 주관적입니다. 이 튜토리얼에서는 제가 여러 형태의 구조를 삽질을 거듭한 끝의 결과물을 소개시켜드릴건데요, 이 튜토리얼에서 사용하는 구조가 무조건 정답은 아닙니다. 다만, 충분히 괜찮고, 쓸만하다고 생각합니다.

근데 프로처럼 사용해보기 전에는 당연히 기초부터 알아보아야겠죠. 먼저, 진짜 기본적인 방법을 알아보고, "프로처럼" 사용하는것도 해보겠습니다.

우리는 리덕스를 적용한 리액트 프로젝트를 만들어볼건데요, 우리가 이전 리덕스 튜토리얼에서 만들어봤었던 카운터와, 할 일 목록을 구현할것입니다. 리덕스를 잘 모르신다면 해당 튜토리얼을 먼저 보시고 이 튜토리얼을 읽어주시길 바랍니다.

프로젝트 만들고, 준비하기
새 프로젝트를 만들고 리덕스를 설치하겠습니다.

$ npx create-react-app ts-react-redux-tutorial --typescript
$ cd ts-react-redux-tutorial
$ yarn add redux react-redux @types/react-redux

redux 의 경우엔 자체적으로 타입스크립트 지원이 됩니다. 하지만 react-redux는 그렇지 않은데요, 이렇게 라이브러리에 자체적으로 타입스크립트 지원이 되지 않는 경우엔 @types/ 를 앞에 붙여서 설치하면 됩니다.

라이브러리에서 공식 타입스크립트 지원이 되는지 되지 않는지 확인 할 때에는 직접 설치해서 불러와서 확인을 해보셔도 되고, GitHub 레포를 열어서 index.d.ts 라는 파일이 있는지 확인해보셔도 됩니다 (리덕스의 index.d.ts).

@types는 라이브러리에 타입스크립트 지원을 할 수 있도록 추가된 써드파티 라이브러리입니다. 라이브러리에 써드 파티 타입스크립트 지원이 되는지 확인해보시려면 npm 에서 @types/라이브러리명 을 입력해보셔도 되고 TypeSearch 에서 라이브러리명을 검색해보셔도 됩니다.


1. src/modules/counter.ts

1. src/modules/index.ts

1. src/components/Counter.tsx

1. src/containers/CounterContainer.tsx

1. src/App.tsx

