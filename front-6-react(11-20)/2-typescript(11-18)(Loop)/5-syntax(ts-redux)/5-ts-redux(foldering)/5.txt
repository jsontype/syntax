<메소드 체이닝 생략!!!!!!!!!!!>

[todos 리덕스 모듈 여러파일로 분리하기]

todos 리덕스 모듈 여러파일로 분리하기
현재 todos 리덕스 모듈은 주석을 제외하면 53줄 정도 됩니다. 지금은 코드가 그렇게 긴 것은 아니지만, 현재 이 파일에서 액션 type, 액션 생성 함수, 액션 객체들의 타입, 상태의 타입, 리듀서를 선언하고 있기 때문에 나중에 액션의 수가 더 많아지면 코드가 너무 길어지게 될 텐데요, 그러면 개발 할 때 찾고자 하는 것을 찾기 위하여 스크롤을 많이 해야 돼서 생산성을 저하시킬 수 있습니다.

그렇다고 해서 src 디렉터리안에서 actions 디렉터리, reducers 디렉터리를 따로 분류해서 하는 것은 서로 너무 멀리 떨어져있기 때문에 오히려 더 불편해질수도 있다는 단점이 있습니다.

다음과 같은 구조를 한번 상상해보세요.
actions
  A
  B
  C
  D
  E
components
  ...
containers
  ...
lib
  ...
styles
  ...
reducers
  A
  B
  C
  D
  E

위와 같은 형식으로 분리시키는 것 대신에, 제가 추천드리는 분리 방식은 todos 라는 디렉터리를 만들어서 그안에 여러 개의 파일을 작성하는 것 입니다.
modules
  todos
    actions.ts
    index.ts
    reducer.ts
    types.td
  counter.ts # 파일이 그렇게 길지 않은 경우 그냥 파일 하나로 작성

이런 구조로 작성하면 꽤나 편하답니다. 한번 직접 파일을 분리해볼까요?
modules 디렉터리에 todos 디렉터리를 만들고, 먼저 actions.ts 부터 작성을 해주세요.

1. src/modules/todos/actions.ts
1. src/modules/todos/types.ts : 그 다음에는 액션객체들의 타입과 상태의 타입들을 선언 할 types.ts 를 todos 디렉터리에 다음과 같이 작성해보세요.
1. src/modules/todos/reducer.ts : 타입들을 모두 정의하셨으면, 리듀서를 reducer.ts 에 작성해줍시다.
기존 todos.ts 파일에서 리듀서 관련 코드를 복사해오고, import가 필요한 곳에서는 키워드 뒤에 텍스트 커서를 둔 뒤 Ctrl + Enter 를 하시면 쉽게 불러올 수 있습니다.
1. src/modules/todos/index.ts
여기까지 다 작성하셨으면 todos 디렉터리에 index.ts 를 만들어주세요. 이 파일의 용도는 기존에 todos.ts 를 불러와서 사용하던 코드들이 (컨테이너 및 루트 리듀서) 별도의 import 경로 수정 없이 제대로 동작하게 하기 위함입니다.

이 파일을 다 작성하셨으면 기존의 modules/todos.ts 를 지워주시고, 개발서버를 종료 후 다시 실행해주세요. 그러면 이제 modules 의 todos 디렉터리가 기존의 todos.ts를 완벽히 대체하게 됩니다.

브라우저 상에서 잘 작동하는지 확인도 해보세요!

앞으로 리덕스 코드를 작성하게 될 때 만약 처리하는 액션의 수가 그렇게 많지 않다면 파일 하나로도 충분 할 수 있겠지만, 처리 할 액션의 수가 많아진다면 이렇게 여러개의 파일로 분리해서 작성하는 것을 권장드립니다.

다음 섹션에서는 리덕스 미들웨어 redux-thunk 와 redux-saga 를 사용 할 때 타입스크립트를 어떻게 활용 할 수 있는지 다뤄보도록 하겠습니다.



1. 테스트
    $ cd app1
    $ npm start
