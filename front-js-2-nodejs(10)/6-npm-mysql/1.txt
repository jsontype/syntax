[Node.js를 이용해서, MySQL에 연동]

1. xampp에서 apache, mysql 설치 후 실행

1. mysql admin에서 `mydb` 데이터베이스 생성

1. mysql admin에서 다음 sql 입력
    -- 유저 테이블 생성
    CREATE TABLE `user` (
    `no` int(15) NOT NULL,
    `id` char(15) NOT NULL,
    `pw` char(255) NOT NULL,
    `username` char(15) NOT NULL,
    `nickname` char(15) NOT NULL,
    `birth` char(8) NOT NULL,
    `gender` char(6) NOT NULL,
    `tel` char(15) NOT NULL,
    `email` char(30) NOT NULL,
    `addr` char(100) NOT NULL,
    `regdate` date DEFAULT current_timestamp()
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

    -- 덤프데이터 입력 
    INSERT INTO `user` (`no`, `id`, `pw`, `username`, `nickname`, `birth`, `gender`, `tel`, `email`, `addr`, `regdate`) VALUES
    (26, 'admin', '21232f297a57a5a743894a0e4a801fc3', '아즈마', '관리자', '19860226', '남자', '12341234', 'testtest@test.com', 'South Korea, Seoul', '2019-09-23'),
    (34, 'testbrbr', '098f6bcd4621d373cade4e832627b4f6', 'test&lt;br&gt;', 'test&lt;br&gt;', '', '남자', '', 'test@test.com', 'test&lt;br&gt;', '2019-09-23'),
    (35, 'testbr', '453061fbb6190dc2a6be7ac8e7523fb5', '양동화&lt;br&gt;', '테스트&lt;br&gt;', '', '남자', '', 'test@test.com', '테스트&lt;br&gt;', '2019-09-25'),
    (36, 'testbr1', '453061fbb6190dc2a6be7ac8e7523fb5', 'test명&lt;br&gt;', 'test닉&lt;br&gt;', '', '남자', '', 'test@test.com', '테스트주소&lt;br&gt;', '2019-09-25');

    -- 덤프된 테이블의 인덱스 `user`
    ALTER TABLE `user`
    ADD PRIMARY KEY (`no`),
    ADD UNIQUE KEY `id` (`id`);

    -- 덤프된 테이블의 AUTO_INCREMENT
    ALTER TABLE `user`
    MODIFY `no` int(15) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=37;
    COMMIT;



1. src/main.js 생성
    // 1. $ npm i mysql



    // 2. 먼저 DB 연동을 한다.
    const mysql = require('mysql') // mysql 모듈 로드
    const conn = { // mysql 접속 설정
        host: '127.0.0.1',
        port: '3306',
        user: 'root',
        password: '',
        database: 'mydb'
    }



    // 3. 연동한 뒤, DB에 접속해서 DB를 조작한다.
    let connection = mysql.createConnection(conn) // DB 커넥션 생성
    connection.connect() // DB 접속
    let sql = "" // SQL문을 담을 변수 선언

    // 삽입
    sql = "INSERT INTO `user` VALUES (9, 'test9@test.com', 'test9', 'sadlkewfj', 'sdflkwejaf', null, null)" // 삽입 SQL문 : INSERT INTO [TABLE] VALUES (?, ?, ?)
    connection.query(sql, function (err, results, fields) { // SQL문을 실행 : DB를 조작
        if (err) { console.log(err) }
        console.log(results)
    })

    // 삭제
    sql = "DELETE FROM user WHERE no = 9" // 삭제 SQL문 : DELETE FROM [TABLE] WHERE [조건]
    connection.query(sql, function (err, results, fields) { // SQL문을 실행 : DB를 조작
        if (err) { console.log(err) }
        console.log(results)
    })

    // 수정
    let name = '헬로우' // 수정할 내용을 변수에 담는다.
    sql = `UPDATE user SET name = '${name}' WHERE no = 8` // 수정 SQL문 : UPDATE [TABLE] SET 컬럼 = 수정값1[, 컬럼2 = 수정값2 ...] WHERE [조건]
    connection.query(sql, function (err, results, fields) { // SQL문을 실행 : DB를 조작
        if (err) { console.log(err) }
        console.log(results)
    })

    // 조회
    sql = "SELECT * FROM user" // 조회 SQL문 : SELECT * FROM [TABLE]
    connection.query(sql, function (err, results, fields) { // SQL문을 실행 : DB를 조작
        if (err) { console.log(err) }
        console.log(results)
    })



    // 4. DB 접속 종료
    connection.end()
