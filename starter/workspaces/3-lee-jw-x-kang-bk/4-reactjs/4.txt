[리액트 Hooks - useEffect]
참조 : https://ko.reactjs.org/docs/hooks-effect.html

1. useEffect Hook
    effect, useEffect이란?
        effect는 렌더링 이후 실행할 함수를 말한다.
            * vue의 updated, mounted 라이프사이클 훅과 비슷하다.
        useEffect는 컴포넌트가 렌더링될 때 실행하는 hook이다.
            클래스형 컴포넌트에서의 life cycle method 즉, 
            componentDidMount & componentDidUpdate를 합친 것과 같다.



1. useEffect 구현
    src/App.js 내용을 전부 삭제한 뒤 전부 아래 내용으로 수정한다.

        import React, { useState, useEffect } from 'react'

        function App() {
        // 초기값 설정
        const [count1, setCount1] = useState(0)
        const [count2, setCount2] = useState(0)

        useEffect(() => {
            console.log('count1: ', count1)
            console.log('count2: ', count2)
        }, [count1, count2]) // [count1, count2] 이 부분은 watch 대상 state. 안에 state명이 있으면 [state]가 updated 될때만 실행. []로 두면 created 될때만 실행.

        useEffect(() => {
            console.log('최초 렌더링 때만 실행')
        }, []) // watch 대상 state를 []로 비워두면, 최초 렌더링 때만 실행된다.
        
        const addCount1 = () => {
            setCount1(count1 + 1)
        }

        return (
            <div className='App'>
            <h1>useEffect</h1>
            {/* useEffect 훅으로 처리하는 것은, 
                이벤트에 사전에 만든 함수를 넣거나, 
                직접 만들어 넣는 경우 두가지로 구현가능하다. */}
            <button onClick={addCount1}>Click1</button> 
            <button onClick={() => setCount2(count2 + 1)}>Click2</button>
            </div>
        );
        }

        export default App;



1. ★★useEffect들의 맨 끝의 []에 대해서 잘 기억해두자. 
    팁: Effect를 건너뛰어 성능 최적화하기
        맨 끝의 [] 부분은 watch 대상 state이다.
        안에 state명이 있으면 [state]가 updated 될때만 실행. []로 두면 created (최초 렌더링) 될때만 실행.



1. 리액트 실행
    npm run start
    localhost:3000에 가본다.
