[SELECT문: 비교/집합 연산자]
참조: https://stricky.tistory.com/205

1. 절차
A5M2에서 mysql에 접속한 뒤, Query-1 탭을 클릭
SQL 입력 (★ A5M2에 입력할 때는 마지막 구분자 ;를 쓰지 않는다.)
커런트스키마에서 ctrl + F5로 커밋결과 리프레쉬

1. 수업준비 (순서대로)
CREATE TABLE table_3rd(name varchar(50), math int(10), english int(10), korean int(10)) character set utf8

INSERT INTO table_3rd(name, math, english, korean) VALUES ('호날두', 98, 65, 56)
,('메시', 87, 76, 87)
,('치차리토', 76, 87, 75)
,('살라', 78, 88, 55)
,('라모스', 56, 90, 89)
,('모드리치', 90, 95, 78)
,('케인', 99, 82, 83)

select * from table_3rd

1. 데이터조회하기
1) 산술 연산자 사용해보기
select name, math, english, korean, math + english + korean as total from table_3rd
select name, math, english, korean, (math + english + korean)/3 as avg from table_3rd

2) where절에 비교 연산자를 사용해 보기
select name, math, english, korean from table_3rd where korean >= 80
select name, math, english, korean from table_3rd where (math+english+korean)/3 >= 80

비교연산자종류 / 설명
= / 같은 조건을 검색
!=, <> / 같지 않은 조건을 검색
> / 큰 조건을 검색
>= / 크거나 같은 조건을 검색
< / 작은 조건을 검색
<= / 작거나 같은 조건을 검색
BETWEEN a AND b / a 와 b 사이에 있는 값을 검색
IN(a,b,c) / a,b,c 중 어느 하나 인 것을 검색
like / 특정 패턴을 가지고 있는 조건을 검색
is Null, is Not Null / NULL 인 값이나 NULL이 아닌 값을 검색
a AND b / a, b 두 조건 모두를 만족하는 값을 검색
a OR b / a 나 b 중 하나의 조건을 만족하는 값을 검색
NOT a / a 가 아닌 모든 값을 검색
위에 있는 다양한 비교 연산자들을 이용해서 실습을 진행하시길 바랍니다.

3) order by 절을 사용 하여 정렬하여 출력 하기
order by / 오름차순 정렬
desc / 내림차순 정렬
select * from table_3rd order by math desc
select * from table_3rd order by (math+english+korean)/3 desc
select * from table_3rd order by 3 # 3번째 컬럼 기준으로 정렬

4) 집합 연산자 사용하기
우선 table_3rd_2 라는 테이블을 만들어 집합 연산자를 사용하기 위한 준비를 해둡니다.
create table table_3rd_2 ( name varchar(50), math int(10), english int(10), korean int(10) ) character set utf8

데이타도 넣어줍니다.
INSERT INTO table_3rd_2 (name, math, english, korean) VALUES ('차범근', 78, 90, 78)
,('서정원', 68, 99, 68)
,('고종수', 84, 96, 98)
,('박지성', 67, 68, 75)
,('최순호', 88, 93, 68)
,('메시', 87, 76, 87)
,('치차리토', 76, 87, 75)

집합 연산자는 다음과 같은 것들이 있습니다.
UNION / 두 집합을 더해서 결과를 출력한다. 중복 값 제거하고 정렬을 수행한다.
UNION ALL / 두 집합을 더해서 결과를 출력한다. 중복 제거와 정렬을 하지 않는다.
INTERSECT / 두 집합의 교집합 결과를 정렬하여 출력한다.
MINUS / 두 집합의 차집합 결과를 령렬하고 출력한다. SQL의 순서가 중요하다.

우선 UNION으로 SQL을 실행하는 예제를 보겠습니다.
UNION을 이용해서 두 select 결과 (집합)을 합칠 수 있습니다. 중복을 제거합니다. ("값이 같은" 메시, 치차리토는 하나씩 존재. 값이 다르면 메시, 치차리토는 중복으로 안봐서 둘씩 존재가 됨)
select * from table_3rd union select * from table_3rd_2

다음은 UNION과 UNION ALL의 차이점도 한번 확인해보겠습니다. 중복을 제거하지 않습니다. ("모든" 메시, 치차리토 둘씩 존재)
select * from table_3rd union all select * from table_3rd_2

다음은 인터섹트와 마이너스 함수를 사용해보기 위해 테이블을 준비하겠습니다.
create table math_student ( name varchar(50), student_no varchar(10))

create table korean_student ( name varchar(50), student_no varchar(10))

INSERT INTO math_student (name, student_no) VALUES ('조단', '111')
,('호나우두', '112')
,('나달', '113')
,('조코비치', '114')

INSERT INTO korean_student (name, student_no) VALUES ('조단', '111')
,('호나우두', '112')
,('조현우', '201')
,('루이스', '202')

인터섹트는 두 테이블의 중복값(교집합)만을 출력합니다.
(* MySQL 5.7 이하에서는 지원하지 않습니다.)
select * from math_student intersect select * from korean_student

마이너스는 첫번째 테이블에서 두번째 테이블의 중복값을 제거한(차집합) 결과만을 출력합니다. 
(* MySQL에서 지원하지 않습니다.)
select * from math_student minus select * from korean_student

3.png에서 결과값을 그래프로 표현한 것을 확인하십시오.