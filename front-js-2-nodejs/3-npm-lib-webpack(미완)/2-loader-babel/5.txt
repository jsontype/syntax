[바벨]

1. 바벨이란?
    바벨은 "트랜스 컴파일러" 라이브러리이다.
    바벨은 웹팩에 도입하는 로더 모듈중 하나로, "트랜스파일링으로 브라우저에 JS 버전 최적화"를 해주는 모듈이다.
    (* 자바스크립트는 인터프리터 언어이기 때문에 실제로는 컴파일하지 않는 언어이다. 그래서 바벨같은 형태는 트랜스 컴파일링이라고 부르게 되었다.)
    (* 자주 쓰는 웹팩 로더중에 Sass-loader도 있으나 이는 SSR FW인 NextJS에서 배울 예정이다.)

1. 바벨의 기능 : 트랜스파일링(Transpiling)
    브라우저의 ES6 지원상황은 계속 변한다.
        참조(브라우저별 ECMAScript 호환성 표) : http://kangax.github.io/compat-table/es6/
    바벨은, 최근 브라우저에 맞게 트랜스파일링을 해준다.
        트랜스파일링 : 코드의 ES 버전을 브라우저 호환성에 맞춰서 변경해주는 것

1. 바벨 설치 순서
    webpack 폴더내의 app1을 그대로 복붙해 온다.
    npm i
    npm i babel-loader
    npm audit fix
    npm i babel-preset-env --save-dev
    webpack.config.js의 rules 키에 추가
        rules: [{
            test: /\.js$/,
            include: path.resolve(__dirname, 'src'),
            use: {
                loader: 'babel-loader',
                options: {
                    presets: [
                        ['env', {
                            'targets': {
                                'browsers': ["last 2 versions", "ie 9", "ios 15"]
                            },
                            'debug': true
                        }]
                    ]
                }
            }
        }]
    npm run build
        "last 2 versions" : 실행된 디버깅 로그에서 Using targets를 확인하면, 브라우저별 최신 2 버전들을 채용하는 것을 알 수 있다.
        "ie 9", "ios 15" : 추가 옵션 설정으로, ie 옵션이 9, ios 옵션이 15로 수동으로 지원 버전을 설정하는 것을 볼 수 있다.
        이것으로 각 브라우저에서 구동시 해당 버전까지 트랜스파일링을 지원해달라는 명령을 주는 것이고, 
        이후 알아서 바벨이 트랜스파일링에 필요한 플러그인을 찾아서 설정을 해준다.

* 여기까지 라이브러리이고, 이 다음으로 배우는 express, typescript, react, next, vue, nuxt 등은 다 프레임워크이다.
