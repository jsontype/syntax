[백엔드용어 모음]

1. 프론트가 알아야만 하는 백엔드 관련 툴
  Postman: GET(SELECT), POST(SELECT, INSERT, UPDATE, DELETE) 중에서, POST를 테스트할 수 있는 툴
  BFF: Backend For Frontend의 약자로, 프론트엔드 개발자가 필요한 API를 제공하는 서버를 의미한다.
  GraphQL: REST(get, set, create, insert, select, delete 등의 API 함수명...) API 대신 사용할 수 있는 쿼리 언어로, 클라이언트가 필요한 데이터를 요청할 수 있다.
  Swagger: API 문서를 자동으로 생성해주는 툴 (BFF)

1. MVC 패턴: Model, View, Controller의 약자로, 소프트웨어 엔지니어링에서 사용되는 디자인 패턴 중 하나이다.
  Model: 데이터를 처리하는 부분
  View: 사용자에게 보여지는 부분
  Controller: Model과 View를 연결하는 부분
  DAO: Data Access Object의 약자로, 데이터베이스에 접근하는 객체를 의미한다.
  DTO: Data Transfer Object의 약자로, 데이터를 전송하는 객체를 의미한다.
  REST API: Representational State Transfer의 약자로, HTTP 프로토콜을 이용하여 서버의 자원을 처리하는 방법을 의미한다.
  ORM: Object Relational Mapping의 약자로, 객체와 관계형 데이터베이스의 데이터를 자동으로 매핑해주는 도구를 의미한다.

1. 인증, 보안관련 약어
  JWT: JSON Web Token의 약자로, 웹 표준으로 정의된 JSON 객체를 사용하여 정보를 안전하게 전달하는 방식을 의미한다.
  CORS: Cross-Origin Resource Sharing의 약자로, 다른 도메인 간에 자원을 공유할 수 있도록 하는 방식을 의미한다.
  Cookie: 클라이언트의 상태 정보를 저장하는 방식으로, 클라이언트의 요청에 대한 응답에 쿠키를 전송하여 상태 정보를 저장한다.
  Session: 서버에 클라이언트의 상태 정보를 저장하는 방식으로, 클라이언트의 요청에 대한 응답에 세션 ID를 전송하여 상태 정보를 저장한다.

1. 서버
  Nginx: 웹 서버 소프트웨어로, Apache보다 가벼우면서 높은 성능을 제공한다.
  Apache: 웹 서버 소프트웨어로, Nginx보다 무겁지만 다양한 모듈을 지원한다.
  Docker: 컨테이너 기반 가상화 플랫폼으로, 애플리케이션을 컨테이너로 묶어 배포하고 실행할 수 있다.
  Kubernetes: 컨테이너 오케스트레이션 툴로, 여러 대의 서버에 컨테이너를 배포하고 관리할 수 있다.
  CI/CD: Continuous Integration/Continuous Deployment의 약자로, 지속적 통합과 지속적 배포를 의미한다.
  TDD: Test-Driven Development의 약자로, 테스트 주도 개발 방법론으로, 테스트를 먼저 작성하고 개발하는 방식을 의미한다.
  BDD: Behavior-Driven Development의 약자로, 행위 주도 개발 방법론으로, 사용자의 행위를 중심으로 개발하는 방식을 의미한다.
  DDD: Domain-Driven Design의 약자로, 도메인 주도 설계 방법론으로, 도메인을 중심으로 설계하는 방식을 의미한다.

1. 개발원칙 관련 약어
  SOLID: 객체지향 프로그래밍의 다섯 가지 설계 원칙으로, SRP, OCP, LSP, ISP, DIP로 구성되어 있다.
  SRP: Single Responsibility Principle의 약자로, 단일 책임 원칙으로, 클래스는 하나의 책임만 가져야 한다.
  OCP: Open/Closed Principle의 약자로, 개방/폐쇄 원칙으로, 확장에는 열려있고 수정에는 닫혀 있어야 한다.
  LSP: Liskov Substitution Principle의 약자로, 리스코프 치환 원칙으로, 하위 클래스는 상위 클래스로 대체 가능해야 한다.
  ISP: Interface Segregation Principle의 약자로, 인터페이스 분리 원칙으로, 클라이언트는 사용하지 않는 메서드에 의존하면 안 된다.
  DIP: Dependency Inversion Principle의 약자로, 의존 역전 원칙으로, 고수준 모듈은 저수준 모듈에 의존하면 안 된다.
  KISS: Keep It Simple, Stupid의 약자로, 간단하게 유지하라는 원칙을 의미한다.
  YAGNI: You Aren't Gonna Need It의 약자로, 필요할 때 추가하라는 원칙을 의미한다.
  DRY: Don't Repeat Yourself의 약자로, 중복을 제거하라는 원칙을 의미한다.

