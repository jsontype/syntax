import sys
from PyQt5.QtWidgets import *

# 코드 실행의 흐름 : 주석을 보면서 이해해봅시다.

# 1. 컨트롤러 부분 : QApplication 클래스에 대한 인스턴스를 생성하고 이를 app이라는 변수로 바인딩
app = QApplication(sys.argv) 

# 2. UI구성부분 : QLabel 클래스의 인스턴스를 만들고 해당 인스턴스의 show 메서드를 호출함으로써 화면에 Qlabel 위젯을 출력 
# "이벤트 루프"가 실행되기 전에 윈도우 창을 구성하는 코드를 만들어둠.
label = QLabel("Hello, PyQt")
label.show()

# 3. 이벤트 루프 실행
print("Before event loop")
app.exec_() # 3. app을 통해 exec_ 메서드를 호출하면 프로그램은 이벤트 루프(event loop)에 진입
print("After event loop")

# 이벤트 루프란 무한 반복하면서 이벤트를 처리하는 상태를 의미합니다. 
# 파이썬 코드는 위에서 밑으로 순서대로 실행된 후 프로그램이 종료됩니다.
# 따라서 코드가 실행되면 "Hello, PyQt"가 화면에 계속 출력됩니다.
# 앞에서 작성한 대부분의 TUI(터미널기반) 프로그램은 프로그램이 실행된 후 종료됐지만
# GUI 프로그램은 사용자가 윈도우를 닫기 전까지는 계속 실행된 상태로 남아 있습니다.
# 이처럼 프로그램이 종료되지 않고 실행 상태로 계속 남아 있을 수 있는 이유가 바로 이벤트 루프 때문입니다.
# 이벤트 루프는 기본적으로 무한 루프 구조이며, 무한 루프 상태에서 사용자가 발생한 이벤트를 그때그때 처리해줍니다. 
# 예를 들어, 사용자가 윈도우를 클릭하면 ‘클릭 이벤트’가 발생하는데 이때 이벤트 루프에서 ‘클릭 이벤트’를 처리 해주는 것입니다.