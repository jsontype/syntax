[워터폴(Waterfall) 모델 요약]

1. 워터폴 모델이란?
  - 소프트웨어 개발 방법론 중 하나로, 각 단계가 폭포수처럼 위에서 아래로 순차적으로 진행되는 모델
  - 장기적 관점에서 계획을 정교하게 세우고 사전에 단계별로 정해놓은 기준에 충족하지 않으면 다음으로 넘어가지 않는 방식
  - 예: 1년 개발 프로젝트라면 반년은 개발, 반년은 테스트해서 완료 (제품 단위로 릴리즈)

1. 워터폴 모델의 특징
  - 각 단계가 명확히 구분되며 이전 단계가 완전히 완료된 후에 다음 단계로 진행
  - 계획과 절차를 중시하는 접근 방식
  - 요구사항이 초기에 명확하게 정의되는 프로젝트에 적합
  - 문서화가 철저하게 이루어짐
  - 대규모 프로젝트나 안전성이 중요한 시스템에서 자주 사용됨

1. 워터폴 모델의 단계
  - 요구사항 분석 (Requirements Analysis)
  - 설계 (Design)
  - 구현 (Implementation/Coding)
  - 테스트 (Testing/Verification)
  - 유지보수 (Maintenance)

1. 워터폴 모델의 장점
  - 명확한 단계와 일정으로 계획 수립이 용이
  - 각 단계별 산출물이 명확함
  - 프로젝트 진행 상황을 쉽게 파악할 수 있음
  - 대규모 팀에서도 적용 가능

1. 워터폴 모델의 단점
  - 지나치게 계획과 절차에 의존하여 시간과 비용의 낭비가 증가할 수 있음
  - 요구사항 변경에 대응하기 어려움
  - 고객의 피드백을 반영하기 어려운 구조
  - 실제 작동하는 소프트웨어를 보는 시점이 프로젝트 후반부로 늦춰짐
  - 위험 요소가 늦게 발견될 가능성이 높음

1. 워터폴 vs 애자일
  - 워터폴: 제품 단위로 릴리즈, 계획 중심, 변경에 유연하지 못함
  - 애자일: 기능 단위로 릴리즈, 적응 중심, 변화에 유연하게 대응
  - 워터폴은 안정성과 예측 가능성이 중요한 프로젝트에 적합, 애자일은 빠른 변화와 고객 피드백이 중요한 프로젝트에 적합
