디버깅은 정말 중요합니다.

    프로그램 제대로 잘 동작하는 지 확인하는 방법
    디버깅은 개발시 개발툴을 사용하는 중요한 이유중 하나입니다.
    Create a launch.json file 을 통해서 실행준비를 해봅시다.

    사용환경

        1. 언어 : python
        1. 툴 : vscode

    실행준비

        1. 화면 왼쪽 탭에서 디버그모드를 선택
        1. create a launch.json file을 선택
        1. python - python file을 선택
        1. 새탭에 생성된 launch.json이 .vscode폴더에 설치가 됨
        1. 실행준비 완료!

    실행

        1. 디버그모드에서 익스플로러 상단에 run버튼 실행 or F5버튼 누름
        1. 해당 py 파일이 실행되는 것을 확인

    조작법요약

        1. F9: 브레이크포인트(Breakpoint) 지정
        1. F10: 한 단계식 실행
        1. F5: 전체 실행 (다음 브레이크 포인트까지)
        1. Variables: 실제 (변수의) 값 확인





지금부터는 디버깅절차를 앱별로 설명해볼게요.

    간단한 계산 프로그램 디버깅(app1.py)

        1. 이 조작으로 디버깅을 시작해요.
            1. 코드 첫번째줄에 F9 찍어보기
            1. F5을 눌러 실행

        2. 이 조작으로 어디에서 문제가 발생하는지를 확인해요.
            2. 디버그모드를 보면 Variables의 Locals(현재 파일)과 Globals(전체 프로그램)가 있음
            2. Locals을 열면 special variables가 있고, 그 밑에 실제 변수값이 들어감
            2. F10을 두 번 눌러 한줄씩 돌려보면서, a, b, c에 각각 실제값이 들어가는 것을 확인                

        3. 디버깅을 하다보면 값을 좀 바꿔보고 싶은 경우도 있습니다. 그때는 조작값을 바꿔서 확인하는 것도 가능해요.
            3. a, b값 확인 단계에서 Varaiables안의 a, b값을 바꾸면 계산되는 c값도 변경이 됨

        4. 문제 위치 확인 후 이 조작으로 마무리합니다.
            4. F5: 나머지 실행
            4. 빨간 점 풀기

        5. 브레이크포인트를 두개 찍었을 때는 F5가 다음 브레이크포인트까지의 실행이 됩니다.
            5. app1.py의 두번째, 네번째 행에 브레이크포인트를 찍는다.
            5. F5를 두번 누르며 실행해보기.

        6. 큰 프로젝트의 경우 변수가 너무 많아 Locals 상에서 값을 찾기 힘들 때
            Locals는 메모리상의 변수입니다. 
            즉 Local에서는 메모리상의 실제값을 변경해볼 수 있는 겁니다.   

            그러나 큰 프로젝트의 경우에는,
            변수가 너무 많아 Locals 상에서 값을 찾기 힘들 때가 많이 있습니다.
            그 때는 watch탭에서 확인하면 됩니다. + 버튼을 누르고 a, b, c를 직접 쳐서 볼 수 있습니다.
            watch에서는 변수값을 b-a 이런식으로 연산을 바꿔서 해볼 수도 있습니다.     
            watch에서는 메모리의 값을 참조하지 않으므로, 
            변수를 더블클릭하더라도 찾는 변수명만 바꿀뿐,
            변수의 실제값을 바꿔볼 수는 없지만,
            찾기 원하는 변수의 값을 쉽게 찾을 수 있고,
            b-a 처럼 상황에 따라 변수 여러개를 조합해보거나 할 수도 있습니다.





마무리

    앞으로, 큰 프로젝트를 참여하게 될 거고, 복잡한 코드들을 보게 될텐데,
    이때, 작업중 문제가 발생한다던지 값이 이상하다던지 할 경우에 
    그 예상위치에 브레이크포인트를 찍어서 하나하나 찾아가는 과정을 "많이" 겪으시게 될 겁니다.

    왜냐면 이 디버깅 모드를 잘 활용하면,
    자신이 짠 코드를 프로그램이 제대로 동작하는지 안하는지를 확인할 수 있고,
    때론 다른 코드가 어떻게 동작하는지를 이해하는데 도움이 되기 때문입니다.
