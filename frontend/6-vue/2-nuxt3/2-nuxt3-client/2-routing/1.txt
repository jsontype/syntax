[라우팅 만들기]

1. 사전준비 : 프로젝트를 새로 깔지 않고, 이전 챕터에서의 코드를 그대로 카피해서 가지고 온다.

1. Next에서 라우팅 만들기 
  Next에서는 리다이렉팅 소스코드 짤 필요 없다.
  src/app 폴더 안에 폴더, 파일 하나 만들면 라우팅 끝이다.

1. layouts/default.vue 작성 : 헤더, 푸터 작성
  <template>
    <div>
      <header>
        <nuxt-link class="navItem" to="/">홈</nuxt-link>
        <nuxt-link class="navItem" to="/list">상품목록</nuxt-link>
      </header>
      <NuxtPage />
      <footer>
        <div>
          Copyright © 모든 권리 보유. 이 웹사이트의 콘텐츠는 저작권법에 의해 보호됩니다. 무단 전재, 복사, 배포 금지.
        </div>
      </footer>
    </div>
  </template>

  <style>
  body {
    margin: 20px;
  }

  header {
    position: relative;
  }

  .navItem {
    color: gray;
    text-decoration: none;
    margin-right: 10px;
  }

  .navItem:hover {
    color: pink;
  }

  .nuxt-page {
    margin: 20px;
  }

  footer {
    position: relative;
    top: 100px;
  }
  </style>

1. pages/index.vue 작성 : 홈 화면 작성
  <template>
    <div>
      <h2 class="title">홈 화면</h2>
    </div>
  </template>

  <style>
  .title {
    color: gray;
  }
  </style>

1. pages/list.vue 작성 : 상품목록 화면 작성
  <template>
    <div>
      <h2 class="title">상품목록</h2>
      <div>
        <div class="item">상품1 $40</div>
        <div class="item">상품2 $40</div>
      </div>
    </div>
  </template>

  <style>
  .title {
    color: gray;
  }

  .item {
    color: gray;
    font-size: 14px;
  }

  .item:hover {
    color: pink;
  }
  </style>

1. app.vue 수정 : NuxtLayout을 엔트리 페이지에 연동하여 첫 화면에서 레이아웃이 표시되도록 한다.
  <template>
    <div>
      <NuxtRouteAnnouncer />
      <!-- layouts 폴더에 연동해서 페이지를 쓸 경우 -->
      <NuxtLayout />
      <!-- layouts 폴더 없이 page 폴더만 쓸 경우 -->
      <!-- <NuxtPage /> -->
    </div>
  </template>

1. 테스트
  $ cd app1
  $ npm run dev
  http://localhost:3000
  메뉴를 각각 눌러서 라우팅이 잘 되는지 확인
