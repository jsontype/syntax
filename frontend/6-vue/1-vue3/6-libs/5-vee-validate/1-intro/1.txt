[vee-validate 4.x: 인풋의 발리데이션(유효성검사) 처리를 해주는 라이브러리]

1. 배경 : 발리데이션(유효성검사)이란?
  발리데이션(유효성 검사)는 입력된 데이터가 정해진 규칙이나 조건에 부합하는지 확인하는 과정이다.
  웹 개발에서는 사용자가 폼에 입력한 데이터가 올바른지, 안전한지, 기대하는 형식에 맞는지를 검사하는 데 주로 사용된다.
  예를 들어, 이메일 주소가 올바른 형식인지, 비밀번호가 충분히 복잡한지, 필수 입력 항목이 비어 있지 않은지 등을 확인한다.
  유효성 검사는 다음과 같은 이유로 중요하다.
    데이터 무결성: 올바른 형식과 데이터만 시스템에 저장되도록 하여 데이터의 정확성과 신뢰성을 유지한다.
    사용자 경험 개선: 잘못된 입력을 사전에 알려주어 사용자가 올바른 데이터를 입력할 수 있도록 돕는다.
    보안: 잘못된 데이터 입력을 통한 보안 취약점을 방지한다.
  발리데이션은 클라이언트 사이드(브라우저)와 서버 사이드 모두에서 수행될 수 있으며, 각각의 장단점이 있다. 
    클라이언트 사이드 발리데이션은 사용자 경험을 개선하는 데 도움이 되지만, 보안에 취약할 수 있다.
    서버 사이드 발리데이션은 보안을 강화하지만, 사용자 경험을 저하시킬 수 있다.
    보안과 사용자 경험을 모두 고려하여 클라이언트 사이드와 서버 사이드 발리데이션을 함께 사용하는 것이 좋다.
  VeeValidate를 이용해서 발리데이션 처리를 구현하는 데에는 다음의 두가지 방법이 있다.
    - 컴포넌트 Field, Form을 사용하는 방법
    - Composable Function (useField, useForm)을 사용하는 방법
    일반적으로 컴포넌트를 커스토마이징할 수 없다는 점에서, 전자보다는 후자의 경우를 채용한다.
