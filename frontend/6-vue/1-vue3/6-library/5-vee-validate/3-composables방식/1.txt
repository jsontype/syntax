[vee-validate 4.x: Composable Function(useField, useForm)을 사용하는 방법]
참조URL: https://vee-validate.logaretm.com/v4/examples/custom-inputs
참조URL: https://vee-validate.logaretm.com/v4/guide/validation#validation-schemas-with-yup

1. 사전준비 : init 앱을 가지고 온다.

1. 사전준비 : src/components/HelloWorld.vue 삭제

1. 라이브러리 설치
  $ npm i vee-validate (= yarn add vee-validate) // 발리데이션 처리하는 라이브러리
  $ npm i yup (= yarn add yup) // 발리데이션 스키마(룰)를 정의하는 라이브러리

1. src/components/Input.vue 생성 : Input을 담은 Atoms를 만든다.
  ```
    <template>
      <div>
        <input v-model="value" :type="type || 'text'" />
        <div class="errorText">{{ errorMessage }}</div>
      </div>
    </template>

    <script setup>
    import { useField } from 'vee-validate';

    const props = defineProps({
      name: String,
      type: String,
    });

    // 기능에서 '이름'이 반환되는 이유는 반응성을 유지하기 위해서이다. 이름이 바뀌면 useField를 선택할 수 있다.
    const { value, errorMessage } = useField(() => props.name);
    </script>

    <style scoped>
    .errorText {
      color: red;
    }
    </style>
  ```

1. src/components/Form.vue 생성 : Input을 사용하는 Form 모르큘러스를 만든다.
  ```
    <template>
      <form @submit="onSubmit">
        <div>
          <div>Email</div>
          <Input name="email" type="email" />
          <div>PW</div>
          <Input name="password" type="password" />
          <div>PW Confirm</div>
          <Input name="passwordConfirm" type="password" />
        </div>
        <button>Submit</button>
      </form>
    </template>

    <script setup>
    import { useForm } from 'vee-validate';
    import * as yup from 'yup';
    import Input from './Input.vue';

    const { handleSubmit } = useForm({
      validationSchema: yup.object({
        email: yup.string().required().email(),
        password: yup.string().required().min(6),
        passwordConfirm: yup
          .string()
          .required()
          .min(6)
          .oneOf([yup.ref('password')]),
      }),
    });

    const onSubmit = handleSubmit(values => {
      alert(JSON.stringify(values, null, 2));
    });
    </script>
  ```

1. src/App.vue 수정 : 컴포넌트를 호출한다.
  ```
    <template>
      <Form />
    </template>

    <script setup lang="ts">
    import Form from '@/components/Form.vue'
    </script>

    <style scoped>
    </style>
  ```

1. 테스트 : Validation 처리가 잘 되는지 확인한다.
  $ cd app1
  $ npm run dev
