[TailWindCSS]

1. 사전준비 : init 앱을 가지고 온다.

1. 사전준비 : src/components/HelloWorld.vue 삭제

1. 라이브러리 설치
  $ npm i tailwindcss postcss autoprefixer
  - postcss autoprefixer란?
    Autoprefixer는 css를 postcss로 변환해주는 라이브러리이다. 예를 들면, 
    우리가 css를 사용할 때는 아래처럼 간단하게 하지만,
    ```
      .example {
        display: flex;
        transition: all 0.3s;
      }
    ```
    사실 아래가 진짜 브라우저에서 동작하는 코드(PostCSS, 후처리된 CSS)이다. 
    그래서 이런 작업을 해주는 것이다.
    ```
      .example {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-transition: all 0.3s;
        transition: all 0.3s;
      }
    ```

1. tailwind.config.js 생성
  $ npx tailwindcss init

1. tailwind.config.js 수정
  ```
    /** @type {import('tailwindcss').Config} */
    export default {
      // tailwind를 사용할 html 파일과 vue 파일을 지정
      content: [
        './index.html',
        './src/**/*.{vue,js,ts,jsx,tsx}'
      ],
      theme: {
        extend: {
          // tailwind를 사용할 css 클래스 중 컬러 클래스들을 커스터마이징: 아래처럼 정의하면, 나중에, bg-primary-50 이런 식으로 사용 가능
          colors: {
            primary: {
              50: '#335FFF',
              60: '#637CFF',
              70: '#939DFF',
            },
            secondary: {
              50: '#FC325E',
              60: '#FE627B',
              70: '#FF929D',
            }
          }
        },
      },
      plugins: [],
    }
  ```

1. postcss.config.js 생성 : TailwindCSS를 호환되도록 하기 위해서 필요한 postcss 처리를 위한 설정 파일
  ```
    export const plugins = {
      tailwindcss: {},
      autoprefixer: {},
    };
  ```

1. vite.config.ts 수정 : TailwindCSS를 모든 앱에 연결한다.
  ```
    import { defineConfig } from 'vite'
    import vue from '@vitejs/plugin-vue'
    import path from 'path'

    // postcss 관련 플러그인 임포트
    import postcssImport from 'postcss-import';
    import tailwindcss from 'tailwindcss';
    import autoprefixer from 'autoprefixer';

    export default defineConfig({
      plugins: [vue()],
      resolve: {
        alias: {
          '@': path.resolve(__dirname, 'src'),
        },
      },
      css: {
        postcss: {
          plugins: [postcssImport, tailwindcss, autoprefixer],
        },
      },  
    })
  ```

1. src/assets/styles/tailwind.css 생성 : TailwindCSS를 임포트한 파일
  ```
  @tailwind base;
  @tailwind components;
  @tailwind utilities;
  ```

1. src/main.ts 수정 : TailwindCSS를 모든 앱에 연결한다.
  ```
    import { createApp } from 'vue'
    import App from './App.vue'
    import './assets/styles/tailwind.css'

    const app = createApp(App)

    app.mount('#app')
  ```

1. src/HelloTailWindCSS.vue 생성 : TailwindCSS를 적용한다.
  ```
    <template>
      <h1 class="text-[50px]">Hello TailWindCSS !</h1>
      <h1 class="bg-primary-50 text-white">Hello TailWindCSS !</h1>
      <h1 class="text-primary-50">Hello TailWindCSS !</h1>
      <h1 class="text-secondary-50">Hello TailWindCSS !</h1>
    </template>

    <script setup>
    </script>

    <style scoped>
    </style>
  ```

1. src/App.vue 수정 : TailwindCSS를 적용한다.
  ```
    <template>
      <HelloTailWindCSS />
    </template>

    <script setup lang="ts">
    import HelloTailWindCSS from '@/components/HelloTailWindCSS.vue'
    </script>

    <style scoped>
    </style>
  ```

1. 테스트
  $ cd app1
  $ npm run dev
