[ref]

1. 사전준비 : JS의 "메모리 참조 변수, 값 참조 변수"의 차이를 먼저 알아둘 것.

1. 사전준비 : 프로젝트를 새로 깔지 않고, 이전 챕터에서의 코드를 그대로 카피해서 가지고 온다.

1. ref란?
  Vue 프레임워크는 웹 애플리케이션의 데이터가 변경될 때
  자동으로 인터페이스를 업데이트하는 기능을 갖고 있다.
  그것을 가능하게 하는 게 바로 ref 함수이다.
  "ref"는 웹 애플리케이션에서 데이터의 변화를 감지하고,
  이를 통해 사용자 인터페이스를 자동으로 업데이트하는 데 필요한 도구이다. 
  사용하는 이유는, 웹 애플리케이션의 반응성과 사용자 경험을 크게 향상시키기 때문이다.

  "Vue에서 primitive type(string, number, boolean, symbol, null, undefined)
  으로 된 변수를 정의할 때, ref 함수를 사용한다."

1. src/App.vue 수정
  ```
    <template>
      <HelloWorld msg="Hello" />
      <GlobalHelloWorld msg="Vue3" />
      <NoRef />
      <Ref />
    </template>

    <script setup lang="ts">
    import HelloWorld from '@/components/HelloWorld.vue'
    import NoRef from '@/components/reactive/NoRef.vue'
    import Ref from '@/components/reactive/Ref.vue'
    </script>

    <style scoped>
    </style>
  ```

1. src/components/reactive/NoRef.vue 생성
  ```
    <template>
      <div>
        {{ text }}
        <button @click="onClick">Click me</button>
      </div>
    </template>

    <script setup>
    import { ref } from 'vue'

    // 뷰에서는 아래처럼 변수를 정의하고 변경하면, 변화를 인식할 수 없다.
    let text = 'Hello World'
    const onClick = () => {
      text = 'Hello Vue 3'
    }
    </script>

    <style lang="scss" scoped>
    </style>
  ```

1. src/components/reactive/Ref.vue 생성
  ```
    <template>
      <div>
        {{ text }}
        <button @click="onClick">Click me</button>
      </div>
    </template>

    <script setup>
    import { ref } from 'vue'

    // 뷰에서는 아래처럼 ref 함수로 감싸서 변수를 정의하고, .value로 변경을 해야 
    // "변화를 인식하고 이에 반응해서" DOM을 변경할 수 있다.
    const text = ref('Hello World')
    const onClick = () => {
      text.value = 'Hello Vue 3'
    }
    </script>

    <style lang="scss" scoped>
    </style>
  ```

1. 테스트
  $ cd app1
  $ npm run dev
