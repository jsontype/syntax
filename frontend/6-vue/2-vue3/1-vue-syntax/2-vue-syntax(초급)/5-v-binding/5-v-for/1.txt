[v-for]

1. 사전준비 : 프로젝트를 새로 깔지 않고, 이전 챕터에서의 코드를 그대로 카피해서 가지고 온다.

1. src/components/VFor.vue 생성
  ```
    <script setup>
    import { reactive } from 'vue';

    // 객체
    const arr = reactive([ 1, 2, 3 ]);

    // 오브젝트
    const obj = reactive({
      id: 'tester',
      pw: 'test1234',
      email: 'test@test.com',
    });
    </script>

    <template>
      <div>
        <h2>배열 아이템 반복</h2>
        <ul>
          <div v-for="(item, index) in arr" :key="item.id">
            <div>arr[{{ index }}]: {{ item }}</div>
          </div>
        </ul>
        <h2>객체 아이템 반복</h2>
        <ul>
          <div v-for="(value, key) in obj" :key="key">
            <div>{{ key }}: {{ value }}</div>
          </div>
        </ul>
      </div>
    </template>

    <style scoped>
    </style>
  ```

1. src/App.vue 수정 : VFor 컴포넌트를 호출한다.
  ```
    <template>
      <VBind />
      <VBindProps 
        :string1="str1" 
        :string2="str2" 
        :number1="num1" 
        :boolean1="bool1"
        :on-click="showAlert"
      />
      <hr />
      <VOn />
      <hr />
      <VIf />
      <VElse />
      <VElseIf1 />
      <VElseIf2 />
      <VShow />
      <hr />
      <VFor />
    </template>

    <script setup lang="ts">
    import VBind from '@/components/VBind.vue'
    import VBindProps from '@/components/VBindProps.vue'
    import VOn from '@/components/VOn.vue'
    import VIf from '@/components/VIf.vue'
    import VElse from '@/components/VElse.vue'
    import VElseIf1 from '@/components/VElseIf1.vue'
    import VElseIf2 from '@/components/VElseIf2.vue'
    import VShow from '@/components/VShow.vue'
    import VFor from '@/components/VFor.vue'

    const str1 = 'String 1'
    const str2 = 'String 2'
    const num1 = 9999
    const bool1 = num1 > 9998
    const showAlert = () => {
      alert('clicked')
    }
    </script>

    <style scoped>
    </style>
  ```

1. 테스트
  $ cd app1
  $ npm run dev
