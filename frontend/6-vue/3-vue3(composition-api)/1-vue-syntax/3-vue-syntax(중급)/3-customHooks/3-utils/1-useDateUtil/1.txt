[Utils: useDateUtil]

1. Utils 폴더를 따로 나누는 이유
  composables에 모두 몰아서 넣으면 로직이 헷갈리므로, 공통에서 쓰는 커스텀훅은 utils에 넣고 쓰기도 한다.

1. 사전준비: 프로젝트를 새로 깔지 않고, 이전 챕터에서의 코드를 그대로 카피해서 가지고 온다.

1. src/utils/useDateUtil.js 작성 : 날짜 포맷을 다루는 유틸리티 커스텀 훅
  ```
    import { ref } from "vue"

    export function useDateUtil() {
      const currentDate = ref(new Date())
    
      const formatDate = (date, format = "YYYY-MM-DD") => {
        // date 객체로부터 연도를 가져와 YYYY 변수에 저장
        const YYYY = date.getFullYear() // 예: 2024
        // date 객체로부터 월을 가져와 MM 변수에 저장 (1월은 0이므로 +1을 해줌), padStart(2, "0")는 두 자리로 맞추기 위해 한 자리 숫자 앞에 0을 추가
        const MM = String(date.getMonth() + 1).padStart(2, "0") // 예: 05
        // date 객체로부터 일을 가져와 DD 변수에 저장, padStart(2, "0")는 두 자리로 맞추기 위해 한 자리 숫자 앞에 0을 추가
        const DD = String(date.getDate()).padStart(2, "0") // 예: 26
        // ... 다른 포맷도 필요시 여기에 추가 가능
    
        if (format === "YYYY-MM-DD") {
          return `${YYYY}-${MM}-${DD}`
        }
        if (format === "YYYY/MM/DD") {
          return `${YYYY}/${MM}/${DD}`
        }
        // ... 다른 포맷도 필요시 여기에 추가 가능
        return `${YYYY}-${MM}-${DD}`
      }
    
      return {
        currentDate,
        formatDate,
      }
    }
  ```

1. src/views/Home.vue 수정 : useDateUtil를 import하고 사용해보기
  ```
    <template>
      <div>
        <h1>Home</h1>
        <p>현재 날짜: {{ formattedDate }}</p>
      </div>
    </template>

    <script setup>
    import { ref, onMounted } from "vue"
    import { useDateUtil } from "@/utils/useDateUtil"

    const { currentDate, formatDate } = useDateUtil()
    const formattedDate = ref("")

    onMounted(() => {
      formattedDate.value = formatDate(currentDate.value)
    })
    </script>
  ```

1. 테스트
  $ cd app1
  $ npm run dev
