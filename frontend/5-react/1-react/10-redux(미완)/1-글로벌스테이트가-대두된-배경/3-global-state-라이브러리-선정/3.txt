[글로벌스테이트 관리 라이브러리 선정하기]

1. React Context: 비동기처리가 없고, 안 복잡하고, 최적화가 중요하지 않은 프로젝트
  장점: 별도 라이브러리 없이 사용 가능하다.
  단점: 최적화가 부족하고, 대규모 앱의 복잡한 상태 관리에는 적합하지 않다.
1. Redux: 비동기처리가 있고, 대규모의 복잡한 프로젝트
  장점: 쓰는 사람이 많고, 미들웨어로 비동기 처리가 용이하다.
  단점: 액션, 리듀서, 스토어 등 초기 설정과 코드량이 많고 복잡하다.
1. Recoil: 비동기처리가 없고, 안 복잡하고, 최적화가 중요한 프로젝트
  장점: 간단한 API로 사용이 쉽고, 최적화가 잘 되어 있다.
  단점: 비동기 처리가 필요한 경우, 별도의 라이브러리가 필요하다.
1. MobX: 비동기처리와 최적화가 많은 프로젝트
  장점: 코드량이 적고, 자동 최적화와 비동기 처리가 용이하다.
  단점: 쓰는 사람이 적고, 설정이 복잡하다.
