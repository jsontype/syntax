[TypeScript type alias 사용하기]

1. TypeScript type alias 사용하기
  type alias은 특정 타입에 별칭을 붙이는 것이다. (그냥 type이라고도 한다.)
  주로 객체에 타입 지정을 묶어서 해줄 때 사용한다.
  interface는 클래스와 관련된 타입의 경우에 많이 사용하고,
  type은 객체의 타입의 경우에 더 많이 사용한다.


    
1. src/practice.ts 수정
  /* Type Alias(별칭) 지정 */

  // Person 객체 Type 지정 : 새 타입은 이렇게 지정한다.
  type Person = {
    name: string
    age?: number // 옵셔널 체이닝 : 물음표가 들어갔다는 것은, 설정을 해도 되고 안해도 되는 값이라는 것을 의미한다.
  }

  // Developer 객체 Type 지정 : &을 이용해, 기존 타입(Person)을 extends 받아서, 새로운 타입(Developer)을 지정할 수도 있다.
  type Developer = Person & { // &는 Intersection으로, 두개 이상의 타입들을 합쳐준다.
    skills: string[]
  }

  // People 배열 Type 지정 : Person[]을 People이라는 타입으로 사용 할 수 있다.
  type People = Person[]

  // Color 문자열 Type 지정 : 아래와 같이 데이터유효성을 설정할 수도 있다.
  type Color = 'red' | 'orange' | 'yellow'



  /* Type 사용 */

  // Person Type 사용
  const person: Person = {
    name: '김사람'
  }

  // Developer Type 사용
  const expert: Developer = {
    name: '김개발',
    skills: ['javascript', 'react']
  }

  // Person Type 사용
  const people: People = [person, expert]

  // Color Type 사용1
  const color: Color = 'red'

  // Color Type 사용2 : 타입을 Color[]로 지정하면, Color 타입들로 이뤄진 배열을 타입으로 지정한다.
  const colors: Color[] = ['red', 'orange']



1. 테스트
  $ cd app1
  $ tsc
  app1/dist/practice.js에서 컴파일 확인
  $ node dist/practice    
