[Jotai: Todos]
참조: https://jotai.org

1. 사전준비 : 프로젝트를 새로 깔지 않고, 이전 챕터에서의 코드를 그대로 카피해서 가지고 온다.

1. src/connectors/index.js 수정 : Todos의 경우도 src/connectors/index.js를 통해서, 최초 서버로부터 get을 한다. 그걸 store 데이터에 저장한다.
  export const fetchMovies = async () => {
    const response = await fetch("https://yts.mx/api/v2/list_movies.json")
    const data = await response.json()
    return data.data.movies
  }

  export const fetchTodos = async () => {
    const response = await fetch("https://jsonplaceholder.typicode.com/todos")
    const data = await response.json()
    return data.filter((item) => item.userId === 1)
  }

1. src/stores/index.js 수정 : todosAtom을 좀 더 세분화하기
  // atom: jotai의 상태를 정의하는 함수
  import { atom } from "jotai"

  export const store = {
    countAtom: atom(0),
    moviesAtom: atom([]),
    todosAtom: {
      todos: atom([]),
      todosKey: atom(0),
    },
    newsAtom: atom([]),
  }

1. src/pages/Todos.js 수정 : jotai의 useAtom을 사용하여 스테이트를 정의하고 사용한다.
  import React, { useState, useEffect } from "react"
  import Checkbox from "@mui/material/Checkbox"
  import IconButton from "@mui/material/IconButton"
  import DeleteIcon from "@mui/icons-material/Delete"
  import TextField from "@mui/material/TextField"
  import Label from "../../components/Atoms/Label"
  import NormalButton from "../../components/Atoms/NormalButton"
  // Jotai: store, useAtom, 데이터 fetch 함수를 import
  import { store } from "../../stores"
  import { useAtom } from "jotai"
  // Connector 함수를 import
  import { fetchTodos } from "../../connectors"

  export default function Todos() {
    // Jotai: useState를 useAtom으로 수정
    const [todos, setTodos] = useAtom(store.todosAtom.todos)
    const [todoKey, setTodoKey] = useAtom(store.todosAtom.todosKey)
    const [inputText, setInputText] = useState("")

    // Mounted: fetch를 받아오도록 수정
    useEffect(() => {
      fetchTodos().then((todos) => {
        setTodos(todos)
        setTodoKey(todos.length + 1)
      })
    }, [setTodoKey, setTodos])

    const render = todos.map((todo) => {
      return (
        <div key={todo.id}>
          <div>
            <span
              className={
                todo.completed ? "text-gray-500 line-through" : "font-bold"
              }
              onClick={() => modTodo(todo.id)}
            >
              #{todo.id} / {todo.title}
            </span>
            <Checkbox
              checked={todo.completed}
              onChange={() => modTodo(todo.id)}
            />
            <IconButton aria-label="delete" onClick={() => delTodo(todo.id)}>
              <DeleteIcon />
            </IconButton>
          </div>
        </div>
      )
    })

    // Insert
    const addTodo = (inputText) => {
      const addItem = [
        ...todos,
        { id: todoKey, title: inputText, completed: false },
      ]
      setTodoKey(todoKey + 1)
      setTodos(addItem)
      setInputText("")
    }

    // Delete
    const delTodo = (id) => {
      const delItem = todos.filter((item) => {
        return item.id !== id
      })
      setTodos(delItem)
    }

    // Update
    const modTodo = (id) => {
      const modItem = todos.map((item) => {
        return item.id === id ? { ...item, completed: !item.completed } : item
      })
      setTodos(modItem)
    }

    return (
      <div>
        <Label text="Todos" />

        <div className="mb-[20px]">
          <span className="mr-[5px]">
            <TextField
              value={inputText}
              size="small"
              required
              placeholder="New Todo"
              onChange={(e) => {
                setInputText(e.target.value)
              }}
            />
          </span>
          <NormalButton buttonText="SEND" onClick={() => addTodo(inputText)} />
        </div>
        <div>{render}</div>
      </div>
    )
  }

1. src/pages/Home.js 수정 : jotai의 useAtom을 사용하여 스테이트를 정의하고 사용한다.
  import React from "react"
  import Label from "../../components/Atoms/Label"
  import { store } from "../../stores"
  import { useAtom } from "jotai"

  export default function Home() {
    const [count] = useAtom(store.countAtom)
    const [movies] = useAtom(store.moviesAtom)
    const [todos] = useAtom(store.todosAtom.todos)

    return (
      <div>
        <Label text="Home" />
        <div>Count: {count}</div>
        <div>Movies: {movies.length}</div>
        <div>Todos: {todos.length}</div>
      </div>
    )
  }

1. 테스트 : Todos 페이지에서 할일 목록을 불러온 뒤, Home 페이지로 이동하여 Todos state가 동기화되어 있는지 확인한다.
  $ cd app1
  $ npm start

1. 과제
  같은 방식으로, 뉴스 앱, 쇼핑몰 앱도 Jotai와 connector 함수를 사용해서 작성해보자. 
  Jotai로 글로벌상태관리가 됐는지 확인하기 위해 Home에도 연결해보자.
  - 뉴스 앱 API : https://api.hnpwa.com/v0/news.json
  - 쇼핑몰 앱 API : https://fakestoreapi.com/products
