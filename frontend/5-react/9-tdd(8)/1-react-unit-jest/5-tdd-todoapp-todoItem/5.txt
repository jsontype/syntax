[TDD 개발 흐름으로 TodoItem 만들기]

1. 사전준비 : 프로젝트를 새로 깔지 않고, 이전 챕터에서의 코드를 그대로 카피해서 가지고 온다.

1. src/TodoItem.spec.js : TodoItem 테스트 코드 먼저 개발하기
  import React from 'react'
  import TodoItem from './TodoItem'
  import { render, fireEvent } from '@testing-library/react'
  import { toHaveStyle } from '@testing-library/jest-dom'

  describe('<TodoItem /> 컴포넌트 테스트', () => {
    const sampleTodo = {
      id: 1,
      text: 'TDD 배우기',
      done: false
    }

    // 중복제거 리팩토링을 하기 위한 setup 함수 선언
    const setup = (props = {}) => {
      const initialProps = { todo: sampleTodo }
      const utils = render(<TodoItem {...initialProps} {...props} />) // render 함수
      const { getByText } = utils // render 함수를 호출하면 나오는 Varient + Query 함수
      const todo = props.todo || initialProps.todo
      const span = getByText(todo.text)
      const button = getByText('삭제')
      return {
        ...utils,
        span,
        button
      }
    }

    it('이 컴포넌트에 필요한 span, button이 있는가?', () => {
      // 중복제거 리팩토링을 하기 위한 setup 함수 사용
      const { span, button } = setup()
      expect(span).toBeTruthy()
      expect(button).toBeTruthy()
    })

    it('todo 객체의 done 값이 true일 때, 삭제선이 표시되는가?', () => {
      const { span } = setup({ todo: { ...sampleTodo, done: true } })
      expect(span).toHaveStyle({ 'text-decoration': 'line-through' })
    })

    it('todo 객체의 done 값이 false일 때, 삭제선이 표시되지 않는가?', () => {
      const { span } = setup({ todo: { ...sampleTodo, done: false } })
      expect(span).not.toHaveStyle({ 'text-decoration': 'line-through' })
    })

    it('onToggle 함수를 실행하면 done 값이 토글링되는가?', () => {
      const onToggle = jest.fn()
      const { span } = setup({ onToggle })
      fireEvent.click(span)
      expect(onToggle).toBeCalledWith(sampleTodo.id)
    })

    it('onRemove 함수를 실행하면 id를 props로 전달하는가?', () => {
      const onRemove = jest.fn()
      const { button } = setup({ onRemove })
      fireEvent.click(button)
      expect(onRemove).toBeCalledWith(sampleTodo.id)
    })
  })

1. src/TodoItem.js : 테스트 코드에 부응하도록 TodoItem 개발하기
  import React from 'react'

  export default function TodoItem ({ todo, onToggle, onRemove }) {
    const { id, text, done } = todo

    return (
      <li>
        <span
          style={{
            textDecoration: done ? 'line-through' : 'none'
          }}
          onClick={() => onToggle(id)}
        >
          {text}
        </span>
        <button onClick={() => onRemove(id)}>삭제</button>
      </li>
    )
  }

1. 테스트
  $ cd app1
  $ npm test
  a키 누르기
  테스트가 모두 passed 되었는지 확인
