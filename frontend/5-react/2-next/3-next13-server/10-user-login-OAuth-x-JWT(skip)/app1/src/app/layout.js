import "./globals.css"
import Link from "next/link"
// 6. 버튼을 누르면 로그인/로그아웃 처리를 하는 컴포넌트를 임포트해서 로그인/로그아웃을 해주도록 한다.
import LoginBtn from "./LoginBtn.js"
import LogoutBtn from "./LogoutBtn.js"
// 7. getServerSession라는 NextAuth 함수를 임포트해 온다.
import { getServerSession } from "next-auth"
// 8. providers 배열이 들어있는 authOptions 객체를 getServerSession라는 NextAuth 함수에 넣어서 호출하면 세션 정보를 취득할 수 있다. (비동기이므로 await로 해야함)
import { authOptions } from "../pages/api/auth/[...NextAuth].js"

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
}

export default async function RootLayout({ children }) {
  // 9. getServerSession : 로그인 여부 정보를 세션으로 받아온다. 서버 컴포넌트 안에서 사용 가능하다.
  const session = await getServerSession(authOptions)
  // 10. 받은 로그인 세션 정보를 출력해본다.
  const user = session?.user
  console.log(user)

  return (
    <html lang="en">
      <body>
        {/* 11. 로그인 했을 때는 로그아웃, 안했을 때는 로그인 버튼이 뜨도록 한다. */}
        {user ? <LogoutBtn /> : <LoginBtn />}
        {/* 12. 로그인 했을 때는 깃허브 이미지와 유저이름이 뜨도록 한다. */}
        {user && user.image && <img src={user.image} height="15px" />}
        {user && user.name && <span>{user.name}</span>}

        {/* 13. 네비게이션 부분 */}
        <div className="navbar">
          <Link href="/" className="navbarItem">
            HOME
          </Link>
          <Link href="/bbs" className="navbarItem">
            BBS
          </Link>
        </div>

        {/* 14. 컨텐츠 부분 */}
        {children}
      </body>
    </html>
  )
}
