[리액트 네이티브 Platform]

1. 사전준비 : 프로젝트를 새로 깔지 않고, 이전 챕터에서의 코드를 그대로 카피해서 가지고 온다.

1. Platform 클래스
  Platform에 따라 다르게 적용해야할 때 사용하는 옵션이다.
  예를 들어, 그림자를 적용하려 한다면,
  ios에서는 shadow를, android에서는 elevation을 적용해야한다.
  이런 경우 Platform을 사용할 수 있다.

1. src/Shadow.js 생성 : iOS와 android 각각에서 다른 텍스트를 출력
  import React from "react"
  import { View, Text, Platform } from "react-native"
  import { styles } from "./style"

  export default function Shadow() {
    return (
      <View style={styles.shadow}>
        <Text>
          {Platform.OS === "ios" && "iOS에서 출력된다."}
          {Platform.OS === "android" && "android에서 출력된다."}
        </Text>
      </View>
    )
  }

1. src/style.js 생성 : os별로 그림자 적용방식이 다르게 적용된다.
  import { StyleSheet, Platform } from "react-native"

  export const styles = StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: "#FFF",
      alignItems: "center",
      justifyContent: "center",
    },
    shadow: {
      backgroundColor: "#e3e3e3",
      width: 200,
      height: 200,
      // iOS의 shadow, android의 elevation에 공통 적용
      shadowColor: "#000000",
      // iOS의 shadow, android의 elevation에 별도 적용 : 구분을 위해 배경색 따로 지정했음
      ...Platform.select({
        ios: {
          backgroundColor: "skyblue",
          // iOS 전용 shadowOffset : 좌단, 하단 그림자 위치
          shadowOffset: {
            width: 10,
            height: 10,
          },
          // iOS 전용 shadowOpacity : 숫자가 클수록 진함
          shadowOpacity: 0.5,
          // iOS 전용 shadowRadius : 숫자가 클수록 원형
          shadowRadius: 10,
        },
        android: {
          backgroundColor: "pink",
          // android 전용 elevation : 사방의 그림자 크기
          elevation: 20,
        },
      }),
    },
  })

1. src/App.js 수정 : 하나의 Shadow 컴포넌트를 임포트
  import { StatusBar } from "expo-status-bar"
  import { styles } from "./style"
  import { View } from "react-native"
  import Shadow from "./Shadow"

  export default function App() {
    return (
      <View style={styles.container}>
        <StatusBar style="auto" />

        <Shadow />
      </View>
    )
  }

1. 테스트 : iOS와 android에서 각각 다르게 출력되는 것을 확인
  $ cd app1
  $ npm start
  i를 누르면 아이폰용, a를 누르면 안드로이드폰용 앱을 실행 (* shift키와 함께 i, a를 누르면 각각 실행가능한 기기 목록까지 선택해서 실행)
  XCode 설치 여부 : n 을 선택
  서버가 구동되면, 아이폰 Expo 앱에서 App1 servers를 선택 (* 또는 터미널에 윗부분에 뜨는 QR 코드를 아이폰으로 촬영하여 이동)
  수정사항이 반영되지 않을 경우, 휴대폰을 한번 흔들어서, Reload를 선택하여 새로고침한다.
