[React 클래스형으로 카운터앱 만들어보기]

1. 설치
  $ npx create-react-app app1  
  App.test.js
  index.css
  logo.svg
  reportWebVitals.js
  setupTests.js
  세미콜론 ; 지우기
  README.MD 지우기
  index.js, App.js 수정 : 불필요 부분을, 연동까지 삭제

1. 레거시가 되어버린 React 클래스형
  함수형보다 클래스형이 더 복잡한 문법을 가지고 있음에도,
  과거에는 state 변수, lifecycle 메소드 사용을 위해 클래스형을 써야했다.
  이후 리액트 16.8 버전에서 react hooks가 도입되어, 함수형을 사용하도록 바뀌게 되면서,
  클래스형은 이제 레거시가 되어버렸기 때문에, 현장에서 쓰지 않는다.
  레거시이기 때문에 지식적인 부분으로 이해하고 넘어가기 위해
  간단히 카운터앱만 만들어보고 구조가 어떻게 다른지만 파악하고 끝내도록 하겠다.

1. src/App.js 수정
  .App {
    margin: 20px;
  }

1. src/Counter.js 생성
  import React from "react"

  class Counter extends React.Component {
    constructor(props) {
      super(props)
      this.state = {
        count: 0,
      }
    }

    increment = () => {
      this.setState((prevState) => ({
        count: prevState.count + 1,
      }))
    }

    decrement = () => {
      this.setState((prevState) => ({
        count: prevState.count - 1,
      }))
    }

    render() {
      return (
        <div>
          <h2>{this.state.count}</h2>
          <button onClick={this.increment}>+</button>
          <button onClick={this.decrement}>-</button>
        </div>
      )
    }
  }

  export default Counter

1. src/App.js 수정
  import React from "react"
  import Counter from "./Counter"
  import "./App.css"

  class App extends React.Component {
    render() {
      return (
        <div class="App">
          <h2>카운터 앱</h2>
          <Counter />
        </div>
      )
    }
  }

  export default App

1. 테스트
  $ cd app1
  $ npm start
