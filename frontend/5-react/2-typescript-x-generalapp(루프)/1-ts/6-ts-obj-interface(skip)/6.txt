[TypeScript interface로 일반객체타입 정의]

1. TypeScript Interface 사용해보기
    interface는 클래스 또는 객체를 위한 타입을 지정 할 때 사용되는 문법이다.
    클래스에서 interface를 implements해보자.


    
1. src/practice.ts 수정
    // interface Person {
    //     name: string
    //     age?: number // 물음표가 들어갔다는 것은, 설정을 해도 되고 안해도 되는 값이라는 것을 의미한다.
    // }
    // interface Developer {
    //     name: string
    //     age?: number
    //     skills: string[]
    // }

    // ↑ 위를 보면 Person 과 Developer 가 형태가 유사하다. 저럴 때는 interface를 선언 할 때 다른 interface를 extends 키워드를 사용해서 상속받을 수 있다.

    interface Person {
        name: string
        age?: number // 물음표가 들어갔다는 것은, 설정을 해도 되고 안해도 되는 값이라는 것을 의미한다.
    }

    interface Developer extends Person {
        skills: string[]
    }

    const person: Person = {
        name: '김사람',
        age: 20
    }

    const expert: Developer = {
        name: '김개발',
        skills: ['javascript', 'react']
    }



1. 테스트
    $ cd app1
    $ tsc
    app1/dist/practice.js에서 컴파일 확인
    $ node dist/practice
