[아토믹디자인에 스토리북 적용하기]

1. 사전준비 : 프로젝트를 새로 깔지 않고, 이전 챕터에서의 코드를 그대로 카피해서 가지고 온다.

1. Storybook 설치
  $ cd app1
  $ npm i --save-dev sb // Storybook 설치
  $ npx sb init --builder webpack5 // Storybook 초기화
  eslintPlugin > (Y/n) // y 선택
  npm7 migration? > (Y/n) // n 선택

1. Storybook 설치 확인
  .storybook 폴더 확인 : Storybook에 대한 설정 파일이 들어있음을 확인
  package.json에 아래 내용이 들어갔는지 확인 : 없으면 추가할 것
  {
    "scripts": {
      "storybook": "start-storybook -p 6006",
      "build-storybook": "build-storybook"
    },
  }
  
1. src/components/atoms/Button/index.stories.js 생성 : * 작성 후 src/App.js에 띄워보고 테스트하기
  import React from "react"
  import { storiesOf } from "@storybook/react"
  import Button from "./"

  /*
    storiesOf : 스토리를 생성하는 함수이다.
      첫번째 인자는 "스토리그룹명/스토리명", 
      두번째 인자는 해당 스토리를 렌더링하는 함수 "module"을 입력한다.
    add : storiesOf로 설정된 스토리에, 다양한 하위 스토리를 추가하는 함수이다.
      아래 코드에서는 "Button" 분류에 "default, small, blue, red" 스토리를 생성해서,
      atoms/Button 컴포넌트를 렌더링하는 다양한 예시를 제공하고 있다.
  */

  // storiesOf 함수를 사용하여 "atoms/Button"이라는 카테고리로 스토리를 그룹화
  storiesOf("atoms/Button", module)
    // add 메소드를 사용하여 여러 버튼 예시를 생성
    .add("default", () => <Button>Default Button</Button>)
    .add("small", () => <Button small>Small Button</Button>)
    .add("blue", () => <Button color="#2196f3">Blue Button</Button>)
    .add("red", () => <Button color="#f44336">Red Button</Button>)

1. src/components/moleculues/SearchBar/index.stories.js 생성 : * 작성 후 src/App.js에 띄워보고 테스트하기
  import React from "react"
  import { storiesOf } from "@storybook/react"
  import SearchBar from "./"

  storiesOf("moluculues/SearchBar", module)
    .add("default", () => (
      <SearchBar
        placeholder="영화 제목을 입력하세요"
        onClick={() => alert("search")}
      />
    ))
    .add("with value", () => (
      <SearchBar
        value="Iron man"
        onChange={(e) => console.log(e.target.value)}
        onClick={() => alert("search")}
      />
    ))
    .add("small", () => (
      <SearchBar
        small
        placeholder="영화 제목을 입력하세요"
        onClick={() => alert("search")}
      />
    ))

1. src/components/organisms/MovieList/index.stories.js 생성 : * 작성 후 src/App.js에 띄워보고 테스트하기
  import React from "react"
  import { storiesOf } from "@storybook/react"
  import MovieList from "./"

  storiesOf("organisms/MovieList", module)
    .add("default", () => <MovieList />)
    .add("sort by rating", () => (
      <MovieList sortByLabel="Rating" sortByValue="rating" />
    ))
    .add("sort by date added", () => (
      <MovieList sortByLabel="Date Added" sortByValue="date_added" />
    ))

1. src/components/templates/MovieLists/index.stories.js 생성 : * 작성 후 src/App.js에 띄워보고 테스트하기
  import React from "react"
  import { storiesOf } from "@storybook/react"
  import MovieLists from "./"

  storiesOf("templates/MovieLists", module).add("default", () => <MovieLists />)

1. src/pages/Movies/index.stories.js 생성 : * 작성 후 src/App.js에 띄워보고 테스트하기
  import React from "react"
  import { storiesOf } from "@storybook/react"
  import Movies from "./"

  storiesOf("pages/Movies", module).add("default", () => <Movies />)

1. 테스트 : Storybook 실행해보기
  $ cd app1
  $ npm run storybook
  http://localhost:6006/
  Exmaple / Introduction 화면 : ./stories/Introduction.stories.mdx 내용이 출력된다.
  Exmaple / Button / Primary 화면 : ./stories/Button.stories.mdx 내용이 출력된다.

1. 테스트 : App1 실행해보기
  $ cd app1
  $ npm start
