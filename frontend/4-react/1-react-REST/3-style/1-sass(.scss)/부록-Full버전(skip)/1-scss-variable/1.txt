[Sass 변수]

1. 리액트 컴포넌트를 스타일링하는 방법
    리액트에서 컴포넌트를 스타일링 하는 가장 기본적인 방법은 css 파일을 만들어서,
        컴포넌트에서 import 해서 사용하는 것이다.
        이 방법은 어떤 사람들에게는 충분히 편리할 수도 있겠지만,
    컴포넌트를 스타일링 할 때 아래같은 도구들을 사용하면 훨씬 더 편하게 작업을 할 수 있다.
        Sass
        CSS Module
        styled-components
    각각의 방식에서, 단순히 사용법만 알아보는걸 떠나서 실무에서 쓰이는 다음 기능들을 배워보겠다.
        1. 충분히 도움이 될 수 있는 재사용성이 높은 버튼을 만드는 방법,
        2. 커스텀 체크 박스를 만드는 방법
        3. 그리고 모달을 만드는 방법

1. 리액트 컴포넌트를 스타일링 할 때 사용 할 수 있는 도구는 다양하다.
    그 중에서 정해진 답은 없다.
    다양한 도구들을 조금씩 사용해보다가, 취향에 맞는 도구를 위주로 사용하면 된다.

1. Sass (싸스)
    Sass (Syntactically Awesome Style Sheets: 문법적으로 짱 멋진 스타일시트)는 CSS pre-processor(전처리기)로서,
    큰 장점은 코드의 재활용성, 코드의 가독성을 높여줘 유지보수를 쉽게 해준다.
    Sass 에서는 두가지의 확장자 (.scss/.sass) 를 지원한다.
    Scss는 css와 같은 문법을 쓰고 싶은 사람을 위해 나중에 추가된 문법이다.

    CSS 문법
        body {
            font: 100% Helvetica, sans-serif
            color: #333
        }

    Sass 문법
        $font-stack: Helvetica, sans-serif
        $primary-color: #333
        body
            font: 100% $font-stack
            color: $primary-color

    Scss 문법 (에스씨에스에스)
        $font-stack: Helvetica, sans-serif;
        $primary-color: #333;
        body {
            font: 100% $font-stack;
            color: $primary-color;
        }

    여기서는 보통 더 많이 사용되는 .scss 확장자로 스타일을 작성해보겠다.



1. React에 Scss 프레임워크 도입하기
    $ npx create-react-app app1
    $ cd app1
    $ npm i node-sass (= yarn add node-sass)



1. 불필요 부분을, 연동까지 삭제



1. src/components/Button.js 생성 : button 컴포넌트를 만든다.
    import React from 'react'
    import './Button.scss'

    function Button({ children }) {
        return <button className="Button">{children}</button>
    }

    export default Button



1. src/components/Button.scss 생성 : 기존 css 에서는 사용하지 못하던 문법들이 사용되었다. (주석 참조)
    // 변수 선언
    $blue: #228be6;

    .Button {
        // 색상 변수
        background: $blue;

        // 버튼 스타일
        display: inline-flex;
        color: white;
        font-weight: bold;
        outline: none;
        border-radius: 4px;
        border: none;
        cursor: pointer;        
        align-items: center;
        justify-content: center;
        height: 2.25rem;
        padding-left: 1rem;
        padding-right: 1rem;
        font-size: 1rem;

        // 가상 클래스
        // &:hover는 .Button:hover를 의미한다.
        &:hover {
            // lighten() : 색상 10% 밝게
            background: lighten($blue, 10%);
        }

        &:active {
            // darken() : 색상 10% 어둡게
            background: darken($blue, 10%);
        }
    }



1. src/App.css 이름 변경 : 이제 scss를 써야한다.
    src/App.scss로 이름 변경

1. src/App.scss 수정
    .App {
        width: 512px;
        margin: 0 auto;
        margin-top: 4rem;
        border: 1px solid black;
        padding: 1rem;
    }



1. src/App.js 수정 : Button을 임포트하는 김에, App.css 임포트 파일명도 같이 바꿔준다.
    import React from 'react'
    import './App.scss'
    import Button from './components/Button'

    function App () {
        return (
            <div className="App">
                <div className="buttons">
                    <Button>BUTTON</Button>
                </div>
            </div>
        )
    }

    export default App



1. 테스트 : 버튼이 잘 나타나는지 확인
    $ cd app1
    $ npm start
