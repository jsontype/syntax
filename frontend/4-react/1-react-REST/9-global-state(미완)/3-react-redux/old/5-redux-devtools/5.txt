[Redux 개발자도구 적용하기]

1. Redux 개발자 도구 기능
    state를 조회
    dispatch된 액션과 그에 따른 state 변화 이력을 트레이스
    액션을 직접 디스패치 할 수도 있다.

1. Redux 개발자 도구 설치
    크롬 웹스토어에서 Redux DevTools 확장 프로그램을 설치한다.
    $ cd app1
    $ npm i redux-devtools-extension (= yarn add redux-devtools-extension)

1. src/index.js 수정
    import React from 'react'
    import ReactDOM from 'react-dom'
    import App from './App'
    import { createStore } from 'redux'
    import { Provider } from 'react-redux'
    import rootReducer from './modules'

    /* 1. Redux 개발자도구 사용하는 법 */
    // Redux 개발자도구 임포트
    // import { composeWithDevTools } from 'redux-devtools-extension' 
    // composeWithDevTools를 사용하여 Redux 개발자 도구 활성화
    // const store = createStore(rootReducer, composeWithDevTools())

    /* 2. 임포트 없이 Redux 개발자도구 사용하는 법 */
    const store = createStore(
        rootReducer, /* preloadedState, */
        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()
    )

    /* Store 렌더링 */
    ReactDOM.render(
        <Provider store={store}>
            <App />
        </Provider>,
        document.getElementById('root')
    )



1. 테스트
    $ cd app1
    $ npm start
    F12로 개발자도구로 Redux 창을 연뒤, input의 숫자를 변경한 다음에 +, - 버튼을 눌러보기
