[퍼포먼스튜닝 - React.memo로 컴포넌트 최적화하기 - 전]

1. 메모화란?
    메모화 : 계산 결과를 재사용할 수 있도록 유지하는 것.
        캐시와 같은 것이라고 이미지하면 좋다.
        메모화에 의해 매번 계산할 필요가 없기 때문에,
        퍼포먼스(=성능)의 향상(=최적화, 튜닝)을 기대할 수 있다.
    메모화된 값 : 계산 결과가 유지되는 값

1. $ npx create-react-app app1
    불필요한 파일과 임포트 삭제

1. src/App.js 수정
  import React, { useState } from "react"

  const Child = (props) => {
    let i = 0
    while (i < 3000000000) i++
    console.log("render Child")
    return <p>Child: {props.count}</p>
  }

  export default function App() {
    console.log("render App")

    const [count1, setCount1] = useState(0)
    const [count2, setCount2] = useState(0)

    return (
      <>
        <button onClick={() => setCount1(count1 + 1)}>countup App count</button>
        <button onClick={() => setCount2(count2 + 1)}>countup Child count</button>
        <p>App: {count1}</p>
        <Child count={count2} />
      </>
    )
  }



1. 테스트 : 개발자도구를 켜고, react context devtool의 profiler를 켠 뒤 둘다 렌더링이 되는 것을 확인
    $ cd app1
    $ npm start
