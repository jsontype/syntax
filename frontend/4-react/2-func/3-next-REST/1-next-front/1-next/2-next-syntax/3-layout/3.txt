[레이아웃 사용하기]

1. 사전준비 : 프로젝트를 새로 깔지 않고, 이전 챕터에서의 코드를 그대로 카피해서 가지고 온다.

1. 레이아웃 위계에 대해 이해하기
  레이아웃은 일반적으로 모든 페이지에 공통으로 적용되는 요소를 포함하는 React 컴포넌트이다.
    예를 들어 최상단 레이아웃의 경우, 
    Header 컴포넌트 : 페이지 상단에 로고, 내비게이션 메뉴, 페이지 제목 등
    Footer 컴포넌트 : 페이지 하단에 저작권 정보 등을 표시
    등을 만들 수 있다.

  레이아웃은 파일만 만들어줘도 해당 폴더 안에 자동으로 적용된다.

  레이아웃에는 위계가 있다.
    만일 "src/app/list/layout.js"이 존재한다면,
    해당 폴더의 "src/app/list/app.js"를 한번 싸매고,
    상위 폴더의 "src/app/layout.js"로 한번 더 싸매는 식이 될 것이다.

  레이아웃을 통해, 기존의 SPA에서 탈피해 MPA가 될 수 있다.
    각 페이지마다, 레이아웃을 설정하고,
    레이아웃 안에서 Head 태그의 설정을 통해,
    SEO에서 유리한 위치를 차지할 수 있다.
      SEO의 대응은 metadata에서 title, description, keywords 등을 설정하거나,
      각 페이지에 h1 태그 등으로 설정할 수 있다.
    자세한 것은 src/app/layout.js에서 확인할 수 있다.

1. 사전준비 : 프로젝트를 새로 깔지 않고, 이전 챕터에서의 코드를 그대로 카피해서 가지고 온다.

1. src/app/list/layout.js 생성 : 핑크배경 레이아웃 적용
  import React from "react"

  export default function layout({ children }) {
    return (
      <>
        <div style={{ backgroundColor: "pink" }}>{children}</div>
      </>
    )
  }

1. 테스트
  $ cd app1
  $ npm run dev
  http://localhost:3000
  메뉴를 각각 눌러서 상품목록 페이지에 핑크배경 레이아웃이 적용되는지 확인
