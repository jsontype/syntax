[SvelteKit 스토어]

1. 스토어란?
  스토어는 앱 안에서 데이터를 한 곳에 모아 관리하고, 여러 화면에서 동시에 데이터를 공유할 수 있게 해주는 공간이다.
  데이터를 스토어에 저장하면, 변경될 때 이를 지켜보는 화면들이 자동으로 업데이트된다.
  덕분에 화면마다 데이터를 따로 관리하거나 변경 처리를 일일이 하지 않아도 되어 편리하다.
  - 예: 쇼핑몰에서는 "카트 목록", "카트 목록의 총액", "사용자 이름" 같은 데이터를 스토어에 저장할 수 있다.

1. src/store/index.js 생성
  import { writable } from "svelte/store";

  // 초기값 설정
  // typeof window !== 'undefined' : 브라우저 환경에서만 초기값을 설정
  // localStorage.getItem("count2") ? Number(localStorage.getItem("count2")) : 0 : 기존의 count2 값이 있으면 가져오고, 없으면 0으로 설정
  const initCount2 = typeof window !== 'undefined' && localStorage.getItem("count2") ? Number(localStorage.getItem("count2")) : 0

  // Stores
  export const count2 = writable(initCount2);

  // 구독: 브라우저 환경에서만 구독하여 localStorage에 저장
  // 구독이란?: store의 값이 변경될 때마다 실행되는 함수
  if (typeof window !== 'undefined') { count2.subscribe(value => { localStorage.setItem("count2", value); }) }

1. src/routes/store1/+page.svelt 생성: 스토어 변수를 일반 변수와 비교해보기 1
  <h1>일반 변수: {count1}</h1>
  <button on:click={() => count1++}>+</button>
  <button on:click={() => count1--}>-</button>
  <button on:click={() => count1 = 0}>Clear</button>

  <h1>스토어 변수: {$count2}</h1>
  <button on:click={() => plus()}>+</button>
  <button on:click={() => minus()}>-</button>
  <button on:click={() => clear()}>Clear</button>

  <script>
  // 일반 변수: 스토어에 저장되지 않아서, 페이지를 새로고침하면 초기화됨
  let count1 = 0;

  // 스토어 변수: 페이지를 새로고침해도 초기화되지 않음
  import { count2 } from "src/store/index.js";
  // 스토어 변수를 변경하는 함수들. 조작할 때 $를 붙여야 함.
  function plus() {
    $count2 = $count2 + 1;
  }
  function minus() {
    $count2 = $count2 - 1;
  }
  function clear() {
    $count2 = 0;
  }
  </script>

1. src/routes/store2/+page.svelt 생성: 스토어 변수를 일반 변수와 비교해보기 2
  <h1>일반 변수: {count1}</h1>
  <button on:click={() => count1++}>+</button>
  <button on:click={() => count1--}>-</button>
  <button on:click={() => count1 = 0}>Clear</button>

  <h1>스토어 변수: {$count2}</h1>
  <button on:click={() => plus()}>+</button>
  <button on:click={() => minus()}>-</button>
  <button on:click={() => clear()}>Clear</button>

  <script>
  // 일반 변수: 스토어에 저장되지 않아서, 페이지를 새로고침하면 초기화됨
  let count1 = 0;

  // 스토어 변수: 페이지를 새로고침해도 초기화되지 않음
  import { count2 } from "src/store/index.js";
  // 스토어 변수를 변경하는 함수들. 조작할 때 $를 붙여야 함.
  function plus() {
    $count2 = $count2 + 1;
  }
  function minus() {
    $count2 = $count2 - 1;
  }
  function clear() {
    $count2 = 0;
  }
  </script>

1. 테스트
  $ cd app1
  $ npm run dev
  http://localhost:5173/store1, http://localhost:5173/store2 를 오가며, 초기화되지 않는 스토어 변수와, 초기화되는 일반 변수를 비교해보기
