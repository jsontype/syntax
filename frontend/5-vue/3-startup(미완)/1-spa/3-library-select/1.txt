[라이브러리 선정 및 설치]

1. 아토믹 디자인으로 상세설계
  atoms, molecules, organisms, templates, pages에 각각 뭘 넣어서 처리할까를 고민해야한다.
  Figma에 comment 넣어서 공유해두면 편하다.

1. 라이브러리 선정
  주요 라이브러리: Vue3(SPA), TailWindCSS, TS, Vite

1. src/package.json 수정 : "아래를 추가..." 부분을 추가하고, 주석은 삭제할 것
  {
    "name": "app1",
    "private": true,
    "version": "0.0.1",
    "type": "module",
    "scripts": {
      "dev": "vite",
      "build": "vue-tsc && vite build",
      "preview": "vite preview"
    },
    "dependencies": {
      "vue": "^3.3.11",

      // 아래를 추가...
      "vue-router": "^4.2.5",
      "@types/axios": "^0.14.0",
      "serve-static": "^1.15.0",
      "express": "^4.18.2"
    },
    "devDependencies": {
      "@vitejs/plugin-vue": "^4.5.2",
      "typescript": "^5.2.2",
      "vite": "^5.0.8",
      "vue-tsc": "^1.8.25",

      // 아래를 추가...
      "postcss": "^8.4.32",
      "sass": "^1.69.5",
      "tailwindcss": "^3.3.6",
      "vite-plugin-windicss": "^1.9.2",
      "vite-svg-loader": "^5.1.0",
      "autoprefixer": "^10.4.16",
      "axios": "^1.6.2",
      "@types/node": "^20.10.4"
    }
  }

1. 설치
  $ npm i

1. 취약점 주의: 발생한다면 초기단계에서 아래 명령어를 쓰거나, 직접 조사후 package.json 안의 버전을 수정해서 해결한다.
  $ npm audit fix
  $ npm audif fix --force // 원칙적으로 금한다.



[라이브러리 config 설정]

1. tailwind.config.js 작성 : 초기 설정 파일
  /** @type {import('tailwindcss').Config} */
  export default {
    content: [
      "./index.html",
      './src/**/*.{vue,js,ts,jsx,tsx}'
    ],
    theme: {
      extend: {},
    },
    plugins: [],
  }

1. tailwind.config.js 수정 : 피그마를 보고, 글로벌 변수 설정
  /** @type {import('tailwindcss').Config} */
  export default {
    content: [
      "./index.html",
      './src/**/*.{vue,js,ts,jsx,tsx}'
    ],
    theme: {
      extend: {
        colors: {
          primary: {
            0: '#000000',
            10: '#001126',
            20: '#00245C',
            30: '#043393',
            40: '#1144C9',
            50: '#335FFF',
            60: '#637CFF',
            70: '#939DFF',
            80: '#C2C5FF',
            90: '#F2F2FF',
            100: '#FFFFFF',
          },
          secondary: {
            0: '#000000',
            10: '#260011',
            20: '#5C0024',
            30: '#910433',
            40: '#C71143',
            50: '#FC325E',
            60: '#FE627B',
            70: '#FF929D',
            80: '#FFC2C5',
            90: '#FFF2F2',
            100: '#FFFFFF',
          },
          error: {
            0: '#000000',
            10: '#260404',
            20: '#570909',
            30: '#881111',
            40: '#BA2222',
            50: '#EB4646',
            60: '#F67A72',
            70: '#FCA99E',
            80: '#FFD2C9',
            90: '#FFF2F2',
            100: '#FFFFFF',
          },
          neutral: {
            0: '#000000',
            10: '#222426',
            20: '#45484C',
            30: '#696C71',
            40: '#8E9097',
            50: '#B3B5BD',
            60: '#C4C6CD',
            70: '#D6D7DD',
            80: '#E8E8ED',
            90: '#FAFAFC',
            100: '#FFFFFF',
          }
        }
      }
    },
    plugins: [],
  }

1. src/global.d.ts 작성 : ts 쓸거면 필수. ts를 쓰다보면 스타일 라이브러리 등 여러 라이브러리를 채용할 때 에러가 생길 수 있는데, 그 부분을 제거하는 설정
  declare module '*.vue' {
    import { defineComponent } from 'vue';
    const Component: ReturnType<typeof defineComponent>;
    export default Component;
  }

1. tsconfig.json 변경 : 변경하고 싶은 게 있다면 변경

1. postcss.config.js 작성 : tailwindcss를 쓰려면 필수
  export default {
    plugins: {
      tailwindcss: {},
      autoprefixer: {},
    },
  }

1. vite.config.ts 작성 : TailWindCSS를 연결하도록 설정, 환경변수 Env를 연결할 수 있게 설정
  // vite.config.js
  import {defineConfig, loadEnv} from 'vite';
  import vue from '@vitejs/plugin-vue';
  import ViteSvgLoader from 'vite-svg-loader';
  import autoprefixer from 'autoprefixer';
  import tailwindcss from 'tailwindcss';

  // https://vitejs.dev/config/
  export default defineConfig(({ mode }) => {
    const env = loadEnv(mode, process.cwd(), '');
    return {
      define: {
        'process.env': env,
      },
      plugins: [
        vue(),
        ViteSvgLoader()
      ],
      css: {
        postcss: {
          plugins: [tailwindcss, autoprefixer],
        },
      },
    };
  });
