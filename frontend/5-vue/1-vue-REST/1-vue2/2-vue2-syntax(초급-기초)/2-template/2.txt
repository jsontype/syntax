[Template 문법]  

1. 사전준비 : 프로젝트를 새로 깔지 않고, 이전 챕터에서의 코드를 그대로 카피해서 가지고 온다.

1. 만약 앱 설치가 아닌, 앱 복사를 할 경우 에러가 뜨는 것에 대한 트러블슈팅
  app1을 복사하면 다음과 같은 에러가 발생할 수도 있다.
  # Multiple assets emit different content to the same filename index.html
  문제원인은 이상한 버전을 만든 개발자
  # @vue/cli 5.0.1, Node v14.17.5, vue 3.2.13 및 npm 7.20.6과 동일한 문제
  근본 해결방법 : vue/cli 4.5.15로 다운그레이드
  빠른 해결방법 : app1/public/index.html 파일명을 index2.html로 수정

1. Template 문법 정의
  Template : 브라우저 및 HTML파서에서 문법을 분석할 수 있는 문법적으로 유효한 HTML이다.
  Template 문법 : Template대로 작성하면 DOM에 바인딩해주는 vue 특유의 HTML 템플릿 기반 문법이다.

1. ★ Template 문법 특징
  - Template 부분에 JS 변수나 함수 쓸 때는 {{}}으로 묶어서 한다.
  - Template 문법상, 프롭을 변수로 줄때는 :을 사용한다.
  - component 명은 multi-word 컴포넌트만 허용한다.
  - App.vue를 제외한 컴포넌트들은 모두 <style scoped>을 써서 중복 클래스명 적용문제를 사전 차단한다.

1. src/App.js 수정 : {{}}을 통해 데이터바인딩을 한다.
  <template>
    <div class="app">
      Hello {{ name }}!
    </div>
  </template>

  <script>
  export default {
    name: 'App',
    data() {
      return {
        name: 'Yang',
        lang: 'en',
      }
    }
  }
  </script>

  <style>
  .app {
    font-size: 20px;
  }
  </style>

1. 테스트
  $ cd app1
  $ npm run serve
