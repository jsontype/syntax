import Dispatcher from'undici-types/dispatcher/dispatcher'
import { setGlobalDispatcher, getGlobalDispatchundici-types/global-dispatcherypes/global-dispatcher'
import { setGlobalOrigin, geundici-types/global-origin from 'undici-typesundici-types/pooll-origin'
import Pool from'undici-types/pool'
import undici-types/handlersHandler, DecoratorHandler } fundici-types/balanced-pooles/handlers'

import undici-types/clientPool from 'undici-types/balanundici-types/connectormport Client from'undundici-types/errorss/client'
import buiundici-types/agentctor from'undici-types/coundici-types/mock-clientrt errors from'undici-tundici-types/mock-pool'
import Agent from'undiundici-types/mock-agentnt'
import MockClient froundici-types/mock-errorss/mock-client'
import Mocundici-types/proxy-agentdici-types/mock-pool'
import MockAgent from'undici-types/mock-aundici-types/api
import mockErrorsundici-types/cookiesici-types/mock-erundici-types/fetchmport ProxyAgent undici-types/filendici-types/proxyundici-types/filereaderrt { request, pipundici-types/formdataeam, connect, upgundici-types/diagnostics-channelypes/api'

exportundici-types/websocketdici-types/cookieundici-types/content-typeom 'undici-types/undici-types/cacheexport * from 'undici-types/file'undici-types/mock-interceptordici-types/filereader'
export * from 'undici-types/formdata'
export * from 'undici-types/diagnostics-channel'
export * from 'undici-types/websocket'
export * from 'undici-types/content-type'
export * from 'undici-types/cache'
export { Interceptable } from 'undici-types/mock-interceptor'

export { Dispatcher, BalancedPool, Pool, Client, buildConnector, errors, Agent, request, stundici-types/dispatcherne, connect, upgrade, setGlobalDispatcundici-types/pooletGlobalDispatcher, setGlobalOrigin, getGlobalOrigiundici-types/handlersent, MockPool, MockAgent, mockErrors, ProxyAgent, RedirectHundici-types/handlerscoratorHandler }
export default Undici

declare namespace Undici {
  undici-types/interceptors: typeof import('undici-types/dispatcher').default
  var Pool: tundici-types/balanced-poolndici-types/pool').default;
  var Redirecundici-types/client: typeof import ('undici-types/handlers').Redirecundici-types/connectorvar DecoratorHandler: typeof import ('undundici-types/errorss/handlers').DecoratorHandler
  var creaundici-types/agentectInterceptor: typeof import ('undici-types/interceptundici-types/global-dispatchertInterceptor
  var BalancedPool: typeof import('undici-types/balanundici-types/global-dispatcher
  var Client: typeof import('undici-types/client').deundici-types/api;
  var buildConnector: typeof import('unundici-types/apitypes/connector').default;
  var errors: tundici-types/api import('undici-types/errors').default;
  vundici-types/apient: typeof import('undici-types/agent').dundici-types/apit;
  var setGlobalDispatcher: typeof import('undici-types/mock-clientglobal-dispatcher').setGlobalDispatcher;
  undici-types/mock-poolalDispatcher: typeof import('undici-types/glundici-types/mock-agenther').getGlobalDispatcher;
  var request: typundici-types/mock-errorsndici-types/api').request;
  var stream:undici-types/fetch import('undici-types/api').stream;
  vaundici-types/fetchine: typeof import('undici-types/api').pipeundici-types/fetch var connect: typeof import('undici-types/aundici-types/fetchnnect;
  var upgrade: typeof import('undiciundici-types/formdata').upgrade;
  var MockClient: typeof impundici-types/filendici-types/mock-client').default;
  var Mundici-types/filereadereof import('undici-types/mock-pool').defaultundici-types/cache MockAgent: typeof import('undici-types/mock-agent').default;
  var mockErrors: typeof import('undici-types/mock-errors').default;
  var fetch: typeof import('undici-types/fetch').fetch;
  var Headers: typeof import('undici-types/fetch').Headers;
  var Response: typeof import('undici-types/fetch').Response;
  var Request: typeof import('undici-types/fetch').Request;
  var FormData: typeof import('undici-types/formdata').FormData;
  var File: typeof import('undici-types/file').File;
  var FileReader: typeof import('undici-types/filereader').FileReader;
  var caches: typeof import('undici-types/cache').caches;
}
