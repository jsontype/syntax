[Cypress: E2E 테스트 라이브러리]

1. 사전준비 : init 앱을 가지고 온다.

1. 사전준비 : src/components/HelloWorld.vue 삭제

... 여기서부터! ...


Vue 3 프로젝트에서 Cypress를 사용하여 E2E(End-to-End) 테스트를 진행하는 과정은 비교적 간단하며, 다음 단계를 포함합니다. Cypress는 웹 애플리케이션의 브라우저에서 실행되는 사용자 상호작용을 테스트하기 위한 강력한 도구입니다.

1. Cypress 설치
먼저 프로젝트에 Cypress를 설치해야 합니다. 프로젝트 디렉토리에서 다음 명령어를 실행합니다.

bash
Copy code
npm install cypress --save-dev
이 명령어는 Cypress를 개발 의존성으로 프로젝트에 추가합니다.

2. Cypress 설정 및 테스트 파일 구조 생성
Cypress를 처음 실행하면 기본 테스트 파일과 함께 필요한 구조를 자동으로 생성합니다. 다음 명령어로 Cypress를 처음 실행하세요.

bash
Copy code
npx cypress open
이 과정은 cypress 폴더를 생성하고, 이 폴더 안에 integration, fixtures, support 등의 서브 폴더와 설정 파일인 cypress.json을 포함합니다. integration 폴더는 여러분의 테스트 파일들을 저장하는 곳입니다.

3. 테스트 스크립트 작성
cypress/integration 폴더 안에 새로운 테스트 파일을 생성합니다. 예를 들어, sample_spec.js라는 이름으로 파일을 만들 수 있습니다.

javascript
Copy code
describe('My First Test', () => {
  it('Visits the Kitchen Sink', () => {
    cy.visit('https://example.com')
    cy.contains('type').click()
    cy.url().should('include', '/commands/actions')
    cy.get('.action-email')
      .type('hello@example.com')
      .should('have.value', 'hello@example.com')
  })
})
이 예제는 Cypress가 제공하는 기본 테스트 중 하나입니다. 웹 페이지를 방문하고, 특정 요소를 클릭하고, URL을 검사하고, 입력 필드에 텍스트를 타이핑하는 등의 동작을 수행합니다. 실제 프로젝트에 맞는 테스트를 작성해야 합니다.

4. Cypress 테스트 실행
테스트를 실행하기 위해 다음과 같은 명령어를 사용할 수 있습니다.

테스트 러너를 열어서 GUI로 테스트를 실행:

bash
Copy code
npx cypress open
테스트를 커맨드 라인에서 바로 실행 (CI/CD 파이프라인에 적합):

bash
Copy code
npx cypress run
이 명령어를 사용하면 Cypress는 cypress/integration 폴더에 있는 모든 테스트 파일을 실행합니다.

5. 결과 확인 및 반복
Cypress는 각 테스트의 실행 결과를 제공하며, 실패한 테스트에 대해서는 추가적인 정보와 스크린샷, 동영상(설정에 따라)을 제공하여 문제를 쉽게 진단할 수 있게 해줍니다. 테스트를 반복하면서 애플리케이션의 모든 주요 기능이 올바르게 동작하는지 확인합니다.

주의사항
Cypress 테스트는 실제 브라우저 또는 Cypress가 제공하는 헤드리스 모드에서 실행됩니다.
테스트를 작성할 때는 사용자의 관점에서 애플리케이션의 흐름을 생각하며, 사용자가 겪게 될 상호작용을 가능한 한 정확하게 모방해야 합니다.
Cypress를 사용하면 Vue 3 애플리케이션의 E2E 테스팅을 간편하게 설정하고 실행할 수 있으며, 사용자 경험을 개선하는 데 도움이 되는 귀중한 피드백을 얻을 수 있습니다.
