[리액트 Hooks - useState]

1. Hooks
    Hook이란?
        2019년도 리액트 16.8버전부터 도입되었다.
        리액트의 함수형 컴포넌트가 클래스형 컴포넌트의 기능을 사용할 수 있도록 해주는 기능이다.
        클래스형 컴포넌트는 문법이 어렵고, 축소가 어렵고, 로직 재사용이 어렵고, 최신기술 적용이 어렵다.
        그럼에도, state나 life cycle method를 사용하기 위해 클래스형 컴포넌트 사용이 불가피했다.
        하지만, hooks가 등장하고 함수형 컴포넌트에서도 state나 life cycle method 작업이 가능해졌다.
            함수형 컴포넌트에서도 상태관리를 할 수 있는 useState, 
            렌더링 직후 작업을 설정하는 useEffect 등의 기능 등을 제공한다.
        * 클래스형 컴포넌트 방식을 한 파일로 정리해놓은 게 있으니, 참조만 하고 함수 컴포넌트로 넘어가자. (class-component.js)
        
        Hooks 이전 src/App.js는 클래스형 컴포넌트 사용        
            class App extends React.Component { ... }

        Hooks 이후 src/App.js는 함수형 컴포넌트 사용
            function App() { ... }



1. useState Hook
    state, setState, useState란?
        state는 일반변수와 다르게, 값이 변하면 연관있는 컴포넌트들이 재렌더링 되어 화면이 바뀌는 변수이다.
            * vue의 state.store와 비슷하다.
        setState는 state의 값을 변경할 때 사용하는 함수이다.
        useState는 state의 초기값을 정할 수 있고, return값으로 state, setState를 돌려주는 hook이다.



1. useState 구현
    src/App.js
        최상단에 다음을 임포트
            import React, { useState } from 'react'
        
    function App() {} 밑에 초기화 세터 추가 : setState를 하는 방법이다.
        const [id, setId] = useState('')
        const [pw, setPw] = useState('')
        
    <div className="App"> 안의 태그를 다음과 같이 수정
        {id} {pw} <br />
        {id} {pw} <br />
        {id} {pw} <br />
        {id} {pw} <br />
        {id} {pw} <br />
        <form onSubmit={onSubmit}>
        <input
            type='text'
            placeholder='ID를 입력해주세요'
            value={id}
            onChange={(event) => setId(event.target.value)}
        /><br />
        <input
            type='password'
            placeholder='PW를 입력해주세요'
            value={pw}
            onChange={(event) => setPw(event.target.value)}
        /><br />
        <button type='submit'>Submit</button>
        </form>

    const onKeyUp = () => {} 이 함수는 전체를 삭제

    const onSubmit = () => {} 안의 얼럿을 지우고 다음과 같이 변경
        event.preventDefault() // form submit 고유의 동작을 멈추기 위해 일시적으로 썼음
        console.log(id, pw)



1. 리액트 실행
    npm run start
    localhost:3000에 가본다.
