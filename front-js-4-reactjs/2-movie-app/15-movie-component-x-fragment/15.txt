[영화 인풋 폼 Component & Fragment]

1. 자꾸 Component로 빼내는 이유는 나중에 ★"재사용"을 할 수 있기 때문이다. 
    재사용을 많이 하면 할수록 재사용시 코드의 양을 많이 줄일 수 있게 된다.
    그러면 중복의 제거 뿐 아니라, 하나만 바꾸면 다 바뀌니 유지보수성이 향상된다.
    이번에는 인풋을 Component화 해서, 재사용해보겠다.



1. src/components/InputField.js 생성
    MovieForm에서 첫번째 input태그와 {titleError} 있는 줄까지 복사를 해서, 아래 InputField에 붙여넣기한다. 
    그리고, 아래처럼 파라미터를 지정해서 인풋 태그 내의 프로퍼티 값을 다 바꾼다.
    이 아래 코드에서 return 값을 div로 감싼다. 이유는 Component는 하나의 루트 엘리먼트로 감싸줘야 작동하기 때문이다.
    ★★div를 쓰고 싶지 않다면, <React.Fragment>로 감싸면 된다. 그리고, 이 Fragment를 또 생략해서 <></>로 쓴다.

    import React from 'react'

    const InputField = ({
        type,
        value,
        placeholder,
        onChange,
        errorMessage
    }) => {
        return (
            // <div>
            // <React.Fragment>
            <>
                <input
                    type={type}
                    value={value}
                    placeholder={placeholder}
                    onChange={onChange}
                /><br />
                <div style={{color: 'red'}}>{errorMessage}</div>
            </>
            // </React.Fragment>
            // <div/>
        )
    }

    export default InputField



1. src/components/MovieForm.js를 수정
    상단에 다음 코드를 추가한다. : import InputField from './InputField'
    첫번째 인풋 부분부터, {yearError} 있는 줄까지를 주석처리하고, 다음과 같이 바꾼다.

    <InputField 
        type="text"
        value={movieTitle}
        placeholder="영화제목"
        onChange={e => setMovieTitle(e.target.value)}
        errorMessage={titleError}
    />
    <InputField 
        type="number"
        value={movieYear}
        placeholder="개봉년도"
        onChange={e => setMovieYear(e.target.value)}
        errorMessage={yearError}
    />



1. 테스트 : 똑같이 작동하는 지 확인 (인풋에 값 넣어서 리스트 추가되는 것을 확인 + 인풋에 각각 값 없이 submit해서 확인)
    cd app1
    npm run start
    인풋창에 데이터를 추가시 f12의 Components 탭에서 스테이트 변경값을 확인
