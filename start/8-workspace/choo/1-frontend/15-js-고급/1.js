// 힙 - 대기실 - 큐 - 스택

// 힙 : 자바스크립의 변수들이 저장되는 공간
// 대기실 : 큐에 넣기 전에 잠시 대기하는 공간
// 큐 : 대기실에서 처리가 완료된 코드들을 줄을 세우는 공간
// 스택 : 큐에서 받아와서 실제 코드를 실행하는 구간

// 자바스크립트는 싱글스레드 언어이다. => 한번에 한가지 일만 할 수 있다.

// 아이스크림 만들기 공정

// 힙 : 우유, 바닐라 시럽 창고 (변수를 담는 공간)
// 큐 : 컨베이어벨트 위 (처리가 완료된 코드들을 줄을 세우는 공간)
// 스택 : 컨베이어벨트에서 작업하는 구간 (코드가 실행되는 공간)

// 0. 우유와 바닐라 시럽을 준비한다.
// 1. 우유를 끓인다.
// 2. 바닐라 시럽을 배합한다.
// 3. 우유와 바닐라 시럽을 섞는다. // 컨베이어벨트
// 4. 만들어진 제품을 냉동실에 넣는다.
// 5. 아이스크림을 포장한다.

// 힙 : 우유, 바닐라 시럽을 창고에 넣었음. 준비 끝.
// 큐 :
// 스택 :
// ---> 아이스크림 완성

// 동기처리 함수
function icecream() {
  // 힙
  const milk = "우유"
  const vanillaSyrup = "바닐라 시럽"

  // 큐 - 스택
  console.log("---동기처리---")
  console.log("0. 우유와 바닐라 시럽을 준비한다.")
  console.log("1. 우유를 끓인다.")
  console.log("2. 바닐라 시럽을 배합한다.")
  console.log("3. 우유와 바닐라 시럽을 섞는다.")
  console.log("4. 만들어진 제품을 냉동실에 넣는다.")
  console.log("5. 아이스크림을 포장한다.")
}

icecream()

// 자바스크립트는 한번에 두가지 일을 할 수 있다. 싱글스레드인데?

// 비동기처리 함수
function icecreamAsync() {
  // 힙
  const milk = "우유"
  const vanillaSyrup = "바닐라 시럽"

  // 큐 - 스택
  console.log("---비동기처리---")
  console.log("0. 우유와 바닐라 시럽을 준비한다.")
  setTimeout(function () {
    console.log("4. 아이스크림을 포장한다.")
  }, 3000)
  setTimeout(function () {
    console.log("2. 우유와 바닐라 시럽을 섞는다.")
  }, 1000)
  setTimeout(function () {
    console.log("3. 만들어진 제품을 냉동실에 넣는다.")
  }, 2000)
  console.log("1. 우유를 끓인다.")
}

// 코드 순서 : 0, 4, 2, 3, 1
// 대기실 : (자바스크립트는 동기처리를 먼저한다. = 비동기라서 0.0001초라도 걸리면, 동기보다 뒤에 놓는다.)
// 큐 :
// 스택 :

icecreamAsync()
