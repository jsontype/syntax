[Sass 변수]

1. 리액트 컴포넌트를 스타일링하는 방법
  컴포넌트를 스타일링 할 때 아래같은 도구들을 사용하면 훨씬 더 편하게 작업을 할 수 있다.
    Sass
    CSS Module
    styled-components

1. Sass (싸스)
  Sass (Syntactically Awesome Style Sheets: 문법적으로 짱 멋진 스타일시트)는 CSS pre-processor(전처리기)로서,
  큰 장점은 코드의 재활용성, 코드의 가독성을 높여줘 유지보수를 쉽게 해준다.
  Sass 에서는 두가지의 확장자 (.scss/.sass) 를 지원한다.
  Scss는 css와 같은 문법을 쓰고 싶은 사람을 위해 나중에 추가된 문법이다.

  CSS 문법
    body {
      font: 100% Helvetica, sans-serif
      color: #333
    }

  Sass 문법
    $font-stack: Helvetica, sans-serif
    $primary-color: #333
    body
      font: 100% $font-stack
      color: $primary-color

  Scss 문법 (에스씨에스에스)
    $font-stack: Helvetica, sans-serif;
    $primary-color: #333;
    body {
      font: 100% $font-stack;
      color: $primary-color;
    }
      
  여기서는 보통 더 많이 사용되는 .scss 확장자로 스타일을 작성해보겠다.

1. React에 Scss 프레임워크 도입하기
  $ cd app1
  $ npm i node-sass (= yarn add node-sass)


  
[SASS 실사용]

1. 변수
  $red: rgb(255, 5, 5);
  $blue: rgb(5, 5, 255);
  $green: rgb(5, 255, 5);

1. 임포트
  @import './variables.scss';

1. 내장함수
  lighten($color, $amount) : 색상을 밝게 만들어준다.
  darken($color, $amount) : 색상을 어둡게 만들어준다.
  saturate($color, $amount) : 색상의 채도를 올려준다.
  desaturate($color, $amount) : 색상의 채도를 낮춰준다.
  fade-in($color, $amount) : 색상의 투명도를 올려준다.
  fade-out($color, $amount) : 색상의 투명도를 낮춰준다.
  opacify($color, $amount) : 색상의 투명도를 올려준다.
  transparentize($color, $amount) : 색상의 투명도를 낮춰준다.
  mix($color1, $color2, [$weight]) : 두 색상을 섞어준다.
  ...

1. 함수
  - 선언할 때
  @mixin func($color) {
    color: $color;
    background: lighten($color, 20%);
  }
  - 쓸때
  @include func($red);
