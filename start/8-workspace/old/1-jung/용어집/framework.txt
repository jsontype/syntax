1. 프레임워크란?
  전체 구조에 맞춰서 코딩해야하는 강요성이 생기는 큰 뼈대.
  소프트웨어 개발을 위한 개발 환경 및 토대, 즉, 기반 시설을 제공한다. 
  동일한 방식으로 코딩 규칙들을 통일시키기 위해 코딩 방식에 강요성이 있다.
  한번 정해지면 바꾸지 못한다.
  사용시 유지보수성이 급격히 상승하므로 실무 현장에서는 필수가 된다.    
  (유지보수성 상승 이유 : 모든 개발자가 코딩 방식을 동일하게 알고 있기 때문이다.)

1. 프레임워크가 도입된 배경
  이게 없을 땐 자기들 마음대로 개발을 했는데, 그러다보니 유지보수가 안된다는 문제가 있었다.    
  예를 들면, 글씨를 쓰는 기능을 세 개발자에게 만들라고 하면,
  개발자1는 펜으로 글씨를 쓰는 것을,
  개발자2는 연필로 글씨를 쓰는 것을,
  개발자3는 매직으로 글씨를 쓰는 것을 코딩했다고 치자.
  함수명도 write, writing, record 등 제각각이었다고 하자.
  그러면 이게 재사용도 안되고, 중복된 함수도 생기고, 개발자1,2,3끼리 서로 자기가 만든 것 외에는 코드를 이해하지 못하는 현상이 발생했다.
  설상가상으로 개발자3이 프로젝트를 나가면서, 그가 만든 코드는 어떻게 수정해야할지 몰라 결국 폐기하고 개발자1,2가 다시 만들었다.
  이런 문제들이 반복되어가면서, 어느 개발자가 보더라도 "통일된" 개발 프레임이 필요하게 되었다.
