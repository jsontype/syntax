{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  id: \"addTodo\"\n};\nconst _hoisted_2 = {\n  id: \"todos\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"checked\"];\nconst _hoisted_5 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", null, \"Todo App\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.newTodo = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.newTodo]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.addTodo && _ctx.addTodo(...args))\n  }, \"추가\")]), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.todos, todo => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: todo.id,\n      class: \"todo\"\n    }, [_createElementVNode(\"span\", {\n      onClick: $event => _ctx.toggleTodo(todo)\n    }, [_createElementVNode(\"span\", null, \"#\" + _toDisplayString(todo.id) + \" / \", 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString(todo.title) + \" / \", 1 /* TEXT */), _createElementVNode(\"input\", {\n      type: \"checkbox\",\n      checked: todo.completed\n    }, null, 8 /* PROPS */, _hoisted_4)], 8 /* PROPS */, _hoisted_3), _createElementVNode(\"span\", null, [_createElementVNode(\"button\", {\n      onClick: $event => _ctx.delTodo(todo.id)\n    }, \"삭제\", 8 /* PROPS */, _hoisted_5)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["id","_createElementBlock","_createElementVNode","_hoisted_1","type","_cache","$event","_ctx","newTodo","onClick","args","addTodo","_hoisted_2","_Fragment","_renderList","todos","todo","key","class","toggleTodo","_toDisplayString","title","checked","completed","_hoisted_4","_hoisted_3","delTodo","_hoisted_5"],"sources":["/Users/dev/Desktop/workspace/syntax/start/8-workspace/kimjy/3-vue/vue3/app1/src/components/TodoApp.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Todo App</h1>\n    <div id=\"addTodo\">\n      <input type=\"text\" v-model=\"newTodo\" />\n      <button @click=\"addTodo\">추가</button>\n    </div>\n    <div id=\"todos\">\n      <div v-for=\"todo in todos\" :key=\"todo.id\" class=\"todo\">\n        <span @click=\"toggleTodo(todo)\">\n          <span>#{{ todo.id }} / </span>\n          <span>{{ todo.title }} / </span>\n          <input type=\"checkbox\" :checked=\"todo.completed\" />\n        </span>\n        <span>\n          <button @click=\"delTodo(todo.id)\">삭제</button>\n        </span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted } from \"vue\"\n\nconst todos = reactive([])\n// setTodos([...todos, newTodo]) // 리액트 setState\n// todos.push(newTodo) // 뷰 ref\n\nconst newTodo = ref(\"\")\n// const [newTodo] = useState(\"\") // 리액트 state\n// newTodo.current = \"바꿀 값\" // 리액트 ref\n// newTodo.value = \"바꿀 값\" // 뷰 ref\n\n// * TODO (예시): 아래의 초기값을, \"로그인했을 때의 회원아이디\"로 변경할 것\nconst loginUserId = ref(1)\n\nfunction getTodos() {\n  fetch(\"https://jsonplaceholder.typicode.com/todos\")\n    .then((res) => res.json())\n    .then((json) => {\n      console.log(json)\n      for (let i = 0; i < json.length; i++) {\n        if (json[i].userId === loginUserId.value) {\n          todos.push(json[i]) // reactive로 선언을 할 때는 value를 사용하지 않는다.\n        }\n      }\n      console.log(todos[0])\n      console.log(todos[1])\n      console.log(todos[2])\n    })\n}\n\nfunction toggleTodo(item) {\n  item.completed = !item.completed\n}\n\nfunction addTodo() {\n  if (newTodo.value === \"\") {\n    alert(\"할 일을 입력해주세요.\")\n    return\n  }\n  const todo = {\n    id: todos.length + 1,\n    title: newTodo.value,\n    completed: false,\n    userId: loginUserId.value,\n  }\n  todos.push(todo)\n}\n\nfunction delTodo(id) {\n  // 해당 id를 가진 todo 찾기\n  const index = todos.findIndex((todo) => todo.id === id)\n  // 찾은 todo가 있으면 삭제\n  todos.splice(index, 1)\n  console.log(todos)\n}\n\nonMounted(() => {\n  getTodos()\n})\n\n// onUnmounted(() => {\n//   console.log(\"TodoApp unmounted\")\n// })\n</script>\n\n<style lang=\"css\" scoped>\n.movieTitle {\n  display: block;\n}\n</style>\n"],"mappings":";;EAGSA,EAAE,EAAC;AAAS;;EAIZA,EAAE,EAAC;AAAO;mBAPnB;mBAAA;mBAAA;;uBACEC,mBAAA,CAkBM,c,0BAjBJC,mBAAA,CAAiB,YAAb,UAAQ,sBACZA,mBAAA,CAGM,OAHNC,UAGM,G,gBAFJD,mBAAA,CAAuC;IAAhCE,IAAI,EAAC,MAAM;IAJxB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIkCC,IAAA,CAAAC,OAAO,GAAAF,MAAA;iDAAPC,IAAA,CAAAC,OAAO,E,GACnCN,mBAAA,CAAoC;IAA3BO,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEH,IAAA,CAAAI,OAAA,IAAAJ,IAAA,CAAAI,OAAA,IAAAD,IAAA,CAAO;KAAE,IAAE,E,GAE7BR,mBAAA,CAWM,OAXNU,UAWM,I,kBAVJX,mBAAA,CASMY,SAAA,QAjBZC,WAAA,CAQ0BP,IAAA,CAAAQ,KAAK,EAAbC,IAAI;yBAAhBf,mBAAA,CASM;MATsBgB,GAAG,EAAED,IAAI,CAAChB,EAAE;MAAEkB,KAAK,EAAC;QAC9ChB,mBAAA,CAIO;MAJAO,OAAK,EAAAH,MAAA,IAAEC,IAAA,CAAAY,UAAU,CAACH,IAAI;QAC3Bd,mBAAA,CAA8B,cAAxB,GAAC,GAAAkB,gBAAA,CAAGJ,IAAI,CAAChB,EAAE,IAAG,KAAG,iBACvBE,mBAAA,CAAgC,cAAAkB,gBAAA,CAAvBJ,IAAI,CAACK,KAAK,IAAG,KAAG,iBACzBnB,mBAAA,CAAmD;MAA5CE,IAAI,EAAC,UAAU;MAAEkB,OAAO,EAAEN,IAAI,CAACO;4BAZhDC,UAAA,E,iBAAAC,UAAA,GAcQvB,mBAAA,CAEO,eADLA,mBAAA,CAA6C;MAApCO,OAAK,EAAAH,MAAA,IAAEC,IAAA,CAAAmB,OAAO,CAACV,IAAI,CAAChB,EAAE;OAAG,IAAE,iBAf9C2B,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}