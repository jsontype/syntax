{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encode = encode;\nexports.decodeEntity = decodeEntity;\nexports.decode = decode;\nvar named_references_1 = require(\"./named-references\");\nvar numeric_unicode_map_1 = require(\"./numeric-unicode-map\");\nvar surrogate_pairs_1 = require(\"./surrogate-pairs\");\nvar allNamedReferences = __assign(__assign({}, named_references_1.namedReferences), {\n  all: named_references_1.namedReferences.html5\n});\nvar encodeRegExps = {\n  specialChars: /[<>'\"&]/g,\n  nonAscii: /[<>'\"&\\u0080-\\uD7FF\\uE000-\\uFFFF\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]?/g,\n  nonAsciiPrintable: /[<>'\"&\\x01-\\x08\\x11-\\x15\\x17-\\x1F\\x7f-\\uD7FF\\uE000-\\uFFFF\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]?/g,\n  nonAsciiPrintableOnly: /[\\x01-\\x08\\x11-\\x15\\x17-\\x1F\\x7f-\\uD7FF\\uE000-\\uFFFF\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]?/g,\n  extensive: /[\\x01-\\x0c\\x0e-\\x1f\\x21-\\x2c\\x2e-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7d\\x7f-\\uD7FF\\uE000-\\uFFFF\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]?/g\n};\nvar defaultEncodeOptions = {\n  mode: \"specialChars\",\n  level: \"all\",\n  numeric: \"decimal\"\n};\nfunction encode(text, _a) {\n  var _b = _a === void 0 ? defaultEncodeOptions : _a,\n    _c = _b.mode,\n    mode = _c === void 0 ? \"specialChars\" : _c,\n    _d = _b.numeric,\n    numeric = _d === void 0 ? \"decimal\" : _d,\n    _e = _b.level,\n    level = _e === void 0 ? \"all\" : _e;\n  if (!text) {\n    return \"\";\n  }\n  var encodeRegExp = encodeRegExps[mode];\n  var references = allNamedReferences[level].characters;\n  var isHex = numeric === \"hexadecimal\";\n  return String.prototype.replace.call(text, encodeRegExp, function (input) {\n    var result = references[input];\n    if (!result) {\n      var code = input.length > 1 ? (0, surrogate_pairs_1.getCodePoint)(input, 0) : input.charCodeAt(0);\n      result = (isHex ? \"&#x\" + code.toString(16) : \"&#\" + code) + \";\";\n    }\n    return result;\n  });\n}\nvar defaultDecodeOptions = {\n  scope: \"body\",\n  level: \"all\"\n};\nvar strict = /&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);/g;\nvar attribute = /&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g;\nvar baseDecodeRegExps = {\n  xml: {\n    strict: strict,\n    attribute: attribute,\n    body: named_references_1.bodyRegExps.xml\n  },\n  html4: {\n    strict: strict,\n    attribute: attribute,\n    body: named_references_1.bodyRegExps.html4\n  },\n  html5: {\n    strict: strict,\n    attribute: attribute,\n    body: named_references_1.bodyRegExps.html5\n  }\n};\nvar decodeRegExps = __assign(__assign({}, baseDecodeRegExps), {\n  all: baseDecodeRegExps.html5\n});\nvar fromCharCode = String.fromCharCode;\nvar outOfBoundsChar = fromCharCode(65533);\nvar defaultDecodeEntityOptions = {\n  level: \"all\"\n};\nfunction getDecodedEntity(entity, references, isAttribute, isStrict) {\n  var decodeResult = entity;\n  var decodeEntityLastChar = entity[entity.length - 1];\n  if (isAttribute && decodeEntityLastChar === \"=\") {\n    decodeResult = entity;\n  } else if (isStrict && decodeEntityLastChar !== \";\") {\n    decodeResult = entity;\n  } else {\n    var decodeResultByReference = references[entity];\n    if (decodeResultByReference) {\n      decodeResult = decodeResultByReference;\n    } else if (entity[0] === \"&\" && entity[1] === \"#\") {\n      var decodeSecondChar = entity[2];\n      var decodeCode = decodeSecondChar == \"x\" || decodeSecondChar == \"X\" ? parseInt(entity.substr(3), 16) : parseInt(entity.substr(2));\n      decodeResult = decodeCode >= 1114111 ? outOfBoundsChar : decodeCode > 65535 ? (0, surrogate_pairs_1.fromCodePoint)(decodeCode) : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode] || decodeCode);\n    }\n  }\n  return decodeResult;\n}\nfunction decodeEntity(entity, _a) {\n  var _b = _a === void 0 ? defaultDecodeEntityOptions : _a,\n    _c = _b.level,\n    level = _c === void 0 ? \"all\" : _c;\n  if (!entity) {\n    return \"\";\n  }\n  return getDecodedEntity(entity, allNamedReferences[level].entities, false, false);\n}\nfunction decode(text, _a) {\n  var _b = _a === void 0 ? defaultDecodeOptions : _a,\n    _c = _b.level,\n    level = _c === void 0 ? \"all\" : _c,\n    _d = _b.scope,\n    scope = _d === void 0 ? level === \"xml\" ? \"strict\" : \"body\" : _d;\n  if (!text) {\n    return \"\";\n  }\n  var decodeRegExp = decodeRegExps[level][scope];\n  var references = allNamedReferences[level].entities;\n  var isAttribute = scope === \"attribute\";\n  var isStrict = scope === \"strict\";\n  return text.replace(decodeRegExp, function (entity) {\n    return getDecodedEntity(entity, references, isAttribute, isStrict);\n  });\n}","map":{"version":3,"names":["exports","encode","decodeEntity","decode","named_references_1","require","numeric_unicode_map_1","surrogate_pairs_1","allNamedReferences","__assign","namedReferences","all","html5","encodeRegExps","specialChars","nonAscii","nonAsciiPrintable","nonAsciiPrintableOnly","extensive","defaultEncodeOptions","mode","level","numeric","text","_a","_b","_c","_d","_e","encodeRegExp","references","characters","isHex","String","prototype","replace","call","input","result","code","length","getCodePoint","charCodeAt","toString","defaultDecodeOptions","scope","strict","attribute","baseDecodeRegExps","xml","body","bodyRegExps","html4","decodeRegExps","fromCharCode","outOfBoundsChar","defaultDecodeEntityOptions","getDecodedEntity","entity","isAttribute","isStrict","decodeResult","decodeEntityLastChar","decodeResultByReference","decodeSecondChar","decodeCode","parseInt","substr","fromCodePoint","numericUnicodeMap","entities","decodeRegExp"],"sources":["../src/index.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}