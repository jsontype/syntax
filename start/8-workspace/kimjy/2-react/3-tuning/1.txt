[퍼포먼스튜닝 - React.memo로 컴포넌트 최적화하기 - 전]

1. 메모화란?
  메모화 : 계산 결과를 재사용할 수 있도록 유지하는 것.
    캐시와 같은 것이라고 이미지하면 좋다.
    메모화에 의해 매번 계산할 필요가 없기 때문에,
    퍼포먼스(=성능)의 향상(=최적화, 튜닝)을 기대할 수 있다.
  메모화된 값 : 계산 결과가 유지되는 값

1. 메모화 방법
  memo(컴포넌트)
  useCallback(() => { 함수 그 자체... }, [])
  useMemo(() => 함수의 리턴 값, [])

1. useCallback을 사용하는 이유
  보다 구체적으로 말하면, memo로 메모화 하더라도 컴포넌트에 "함수"를 사용하고 있다면 재랜더링이 되는데,
    이를 useCallback로 메모화시켜 Props로 전달하여 구성 요소의 불필요한 재 렌더링을 건너뛸 수 있다.
  useCallback은 Deps 배열에는 콜백함수가 사용하는 변수들을 담아줘야 한다.
    예시1) const result = useCallback(() => console.log("doSomething"), []);
    예시2) const result = useCallback(() => console.log(count), [count])
