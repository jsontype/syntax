[백준풀이 : 브론즈 5 수준]
참조: https://solved.ac/problems/level/

1. 1000 A+B
두 정수를 입력받아 더한 값을 출력하시오.
- 제출코드
const fs = require('fs')
const input = String(fs.readFileSync('/dev/stdin')).split(' ')
const a = Number(input[0])
const b = Number(input[1])
console.log(a+b)
- 테스트코드
const input = `1 2`
const a = Number(input[0])
const b = Number(input[1])
console.log(a+b)

1. 1001 A-B
두 정수를 입력받아 뺀 값을 출력하시오.
- 제출코드
const fs = require('fs')
const input = String(fs.readFileSync('/dev/stdin')).split(' ')
const a = Number(input[0])
const b = Number(input[1])
console.log(a-b)
- 테스트코드
const input = `2 1`
const a = Number(input[0])
const b = Number(input[1])
console.log(a-b)

1. 1008 A/B
두 정수를 입력받아 나눈 값을 출력하시오.
- 제출코드
const fs = require('fs')
const input = String(fs.readFileSync('/dev/stdin')).split(' ')
const a = Number(input[0])
const b = Number(input[1])
console.log(a/b)
- 테스트코드
const input = `1 3`
const a = Number(input[0])
const b = Number(input[1])
console.log(a/b)

1. 1271 엄청난 부자2
두 정수를 입력받아 첫번째 수를 두번째 수로 나눈 몫과 나머지를 개행하여 출력하시오.
- 제출코드
const fs = require('fs')
const input = fs.readFileSync("/dev/stdin").toString().trim().split(" ").map(BigInt)
let answer = input[0] / input[1] + '\n'
answer += input[0] % input[1]
console.log(answer)
- 테스트코드
const input = `1000 10`
let answer = input[0] / input[1] + '\n'
answer += input[0] % input[1]
console.log(answer)

1. 1330 두 수 비교하기
두 정수를 입력받아 비교하여 a가 적으면 "<", 크면 ">", 같으면 "=="를 출력하시오.
- 제출코드
const fs = require('fs')
const input = String(fs.readFileSync('/dev/stdin')).split(' ')
const a = Number(input[0])
const b = Number(input[1])
a > b ? console.log('>') : a < b ? console.log('<') : console.log('==')
- 테스트코드
const input = `1 2`
const a = Number(input[0])
const b = Number(input[1])
a > b ? console.log('>') : a < b ? console.log('<') : console.log('==')

1. 1809 Moo
다음을 출력하시오.
(___)
(o o)____/
 @@      \
  \ ____,/
  //   //
 ^^   ^^
- 제출코드 : Golfscript
"(___)
(o o)____/
 @@      \\
  \\ ____,/
  //   //
 ^^   ^^"
- 테스트코드
console.log(`
"(___)
(o o)____/
 @@      \\
  \\ ____,/
  //   //
 ^^   ^^"
`)

1. 2338 긴자리 계산
첫째 줄에 A가, 둘째 줄에 B가 주어진다. 각각의 수는 10진수로 1,000자리를 넘지 않으며 양수와 음수가 모두 주어질 수 있다.
첫째 줄에 A+B, 둘째 줄에 A-B, 셋째 줄에 A×B를 출력한다. 각각을 출력할 때, 답이 0인 경우를 제외하고는 0으로 시작하게 해서는 안 된다(1을 01로 출력하면 안 된다는 의미).
- 제출코드
const fs = require('fs')
const input = fs.readFileSync("/dev/stdin").toString().trim().split("\n").map(BigInt)
let answer = input[0] + input[1] + '\n'
answer += input[0] - input[1] + '\n'
answer += input[0] * input[1]
console.log(answer)
- 테스트코드
const input = `1
-1
`
let answer = input[0] + input[1] + '\n'
answer += input[0] - input[1] + '\n'
answer += input[0] * input[1]
console.log(answer)

1. 2393 Rook
다음을 출력하시오.
  ___  ___  ___
  | |__| |__| |
  |           |
   \_________/
    \_______/
     |     |
     |     |
     |     |
     |     |
     |_____|
  __/       \__
 /             \
/_______________\
- 제출코드
console.log(`  ___  ___  ___
  | |__| |__| |
  |           |
   \\_________/
    \\_______/
     |     |
     |     |
     |     |
     |     |
     |_____|
  __/       \\__
 /             \\
/_______________\\`)
- 테스트코드
console.log(`  ___  ___  ___
  | |__| |__| |
  |           |
   \\_________/
    \\_______/
     |     |
     |     |
     |     |
     |     |
     |_____|
  __/       \\__
 /             \\
/_______________\\`)

1. 2420 사파리월드
두 숫자를 입력받아, 두 값의 차이의 절대값(|N-M|)을 출력한다.
- 제출코드
const fs = require('fs')
const input = String(fs.readFileSync('/dev/stdin')).split(' ').map(BigInt)
const a = Number(input[0])
const b = Number(input[1])
console.log(Math.abs(a - b))
- 테스트코드
const input = `-2 5`.split(' ').map(BigInt)
const a = Number(input[0])
const b = Number(input[1])
console.log(Math.abs(a - b))

1. 2438 별 찍기 - 1
한 정수를 입력받아 다음과 같은 별들을 출력하라.
예를 들어 5를 입력한다면,
*
**
***
****
*****
가 출력되도록 하면 되는 것이다.
- 제출코드
const fs = require('fs')
const input = Number(fs.readFileSync('/dev/stdin'))
let result = ""
for (let i = 1 i < input + 1 i++) {
  result += "*"
  console.log(result)
}
- 테스트코드
const input = Number(`5`)
let result = ""
for (let i = 1 i < input + 1 i++) {
  result += "*"
  console.log(result)
}

1. 2475 검증수
두 정수를 입력받아 더한 값을 출력하시오.
- 제출코드
const fs = require('fs')
const input = String(fs.readFileSync('/dev/stdin')).split(' ').map(BigInt)
let a = 0
input.forEach((item) => (a += Number(item) * Number(item)))
const b = String(a).split("")
console.log(b[b.length - 1])
- 테스트코드
const input = `0 4 2 5 6`.split(' ').map(BigInt)
let a = 0
input.forEach((item) => (a += Number(item) * Number(item)))
const b = String(a).split("")
console.log(b[b.length - 1])

1. 2557 Hello World
Hello World!를 출력하시오.
- 제출코드
console.log("Hello World!")
- 테스트코드
console.log("Hello World!")

1. 2558 A+B - 2
두 정수를 두 줄에 걸쳐서 입력받아서, 더한 값을 출력하시오.
- 제출코드
const fs = require("fs")
const input = String(fs.readFileSync("/dev/stdin")).split(`
`)
const a = Number(input[0])
const b = Number(input[1])
console.log(a + b)
- 테스트코드
const fs = require("fs")
const input = `1
2
`.split(`
`)
const a = Number(input[0])
const b = Number(input[1])
console.log(a + b)

1. 2738 행렬 덧셈
N*M크기의 두 행렬 A와 B가 주어졌을 때, 두 행렬을 더하는 프로그램을 작성하시오.
- 제출코드
const fs = require('fs');
const input = fs.readFileSync('/dev/stdin').toString().split('\n');
const number = input.shift().split(' ').map(Number);
const matrix = input.map(el => el.split(' ').map(Number));
const arr1 = matrix.splice(0, number[0]);
const result = arr1.map((el1, idx1) => el1.map((el2, idx2) => el2 + matrix[idx1][idx2]));
const value = result.map(el => el.join(' ')).join('\n');
console.log(value);
- 테스트코드
const input = `3 3
1 1 1
2 2 2
0 1 0
3 3 3
4 4 4
5 5 100
`.toString().split('\n');
const number = input.shift().split(' ').map(Number);
const matrix = input.map(el => el.split(' ').map(Number));
const arr1 = matrix.splice(0, number[0]);
const result = arr1.map((el1, idx1) => el1.map((el2, idx2) => el2 + matrix[idx1][idx2]));
const value = result.map(el => el.join(' ')).join('\n');
console.log(value);

1. 2739 구구단
입력한 숫자를 아래처럼 9단까지 출력하라.
2 * 1 = 2
...
2 * 9 = 18
- 제출코드
const fs = require("fs");
const input = fs.readFileSync("/dev/stdin").toString().split(" ");
const a = Number(input[0]);
let result = '';
for(let i = 1; i <= 9; i++) {
  console.log(a, '*', i, '=', a * i);
}
- 테스트코드
const input = `2`.toString().split(" ");
const a = Number(input[0]);
let result = '';
for(let i = 1; i <= 9; i++) {
  console.log(a, '*', i, '=', a * i);
}


1. 2741 N 찍기
숫자 5를 입력하면, 차례대로
1
2
3
4
5
가 출력되도록 해라.
다른 수 N을 넣어도 N 만큼 차례대로 출력되어야 한다.
- 제출코드
const fs = require("fs");
const input = Number(fs.readFileSync("/dev/stdin"));
let result = '';
for(let i = 1; i <= input; i++) {
  result = result + `${i} \n`;
}
console.log(result);
- 테스트코드
const input = `5`;
let result = '';
for(let i = 1; i <= input; i++) {
  result = result + `${i} \n`;
}
console.log(result);

1. 2743 단어 길이 재기
입력받은 단어의 길이를 재라.
- 제출코드
const fs = require('fs');
const data = fs.readFileSync("/dev/stdin").toString();
const cleanData = data.replace(/[^A-Za-z]/g, '');
console.log(cleanData.length);
- 테스트코드
const data = `HelloWorld`
const cleanData = data.replace(/[^A-Za-z]/g, '');
console.log(cleanData.length);

1. 2744 대소문자 바꾸기
공백이 없이 입력된 영어 문자열의 대문자와 소문자를 바꿔라.
- 제출코드
const fs = require("fs");
const input = fs.readFileSync("/dev/stdin").toString().trim();
let result = "";
for (let i = 0; i < input.length; i++) {
	if (input[i] === input[i].toUpperCase()) {
    result += input[i].toLowerCase();
  }
	else {
    result += input[i].toUpperCase();
  }
}
console.log(result);
- 테스트코드
const input = `HelloWorld`
let result = "";
for (let i = 0; i < input.length; i++) {
	if (input[i] === input[i].toUpperCase()) {
    result += input[i].toLowerCase();
  }
	else {
    result += input[i].toUpperCase();
  }
}
console.log(result);

1. 2753 윤년
입력한 연도가 윤년이면 1, 아니면 0을 출력하는 프로그램을 작성하라.
- 제출코드
const fs = require('fs');
const input = fs.readFileSync("/dev/stdin").toString().trim();
if(input % 4 === 0) {
  if(input % 100 !== 0 || input % 400 === 0) {
    console.log(1);
  } else {
    console.log(0);
  }
} else {
  console.log(0);
}
- 테스트코드
// 입력
const userInput = `2000`
// 출력
const input = userInput.toString().trim()
if (input % 4 === 0) {
  if (input % 100 !== 0 || input % 400 === 0) {
    console.log(1)
  } else {
    console.log(0)
  }
} else {
  console.log(0)
}

1. 2754 학점계산
어떤 사람의 C언어 성적이 주어졌을 때, 평점은 몇 점인지 출력하는 프로그램을 작성하라.
A+: 4.3, A0: 4.0, A-: 3.7
B+: 3.3, B0: 3.0, B-: 2.7
C+: 2.3, C0: 2.0, C-: 1.7
D+: 1.3, D0: 1.0, D-: 0.7
F: 0.0
- 제출코드
const fs = require('fs');
const input = fs.readFileSync("/dev/stdin").toString().trim();
switch(input) {
  case 'A+':
    console.log("4.3")
    break
  case 'A0':
    console.log("4.0")
    break
  case 'A-':
    console.log("3.7")
    break
  case 'B+':
    console.log("3.3")
    break
  case 'B0':
    console.log("3.0")
    break
  case 'B-':
    console.log("2.7")
    break
  case 'C+':
    console.log("2.3")
    break
  case 'C0':
    console.log("2.0")
    break
  case 'C-':
    console.log("1.7")
    break
  case 'D+':
    console.log("1.3")
    break
  case 'D0':
    console.log("1.0")
    break
  case 'D-':
    console.log("0.7")
    break
  c1ase 'F':
    console.log("0.0")
    break
  default:
    break
}
- 테스트코드
// 입력
const input = `A0`
// 출력
switch(input) {
  case 'A+':
    console.log("4.3")
    break
  case 'A0':
    console.log("4.0")
    break
  case 'A-':
    console.log("3.7")
    break
  case 'B+':
    console.log("3.3")
    break
  case 'B0':
    console.log("3.0")
    break
  case 'B-':
    console.log("2.7")
    break
  case 'C+':
    console.log("2.3")
    break
  case 'C0':
    console.log("2.0")
    break
  case 'C-':
    console.log("1.7")
    break
  case 'D+':
    console.log("1.3")
    break
  case 'D0':
    console.log("1.0")
    break
  case 'D-':
    console.log("0.7")
    break
  c1ase 'F':
    console.log("0.0")
    break
  default:
    break
}

1. 3003 킹, 퀸, 룩, 비숍, 나이트, 폰
체스는 총 16개의 피스를 사용하며, 킹 1개, 퀸 1개, 룩 2개, 비숍 2개, 나이트 2개, 폰 8개로 구성되어 있다.
각 피스의 개수가 주어졌을 때, 몇 개를 더하거나 빼야 올바른 세트가 되는지 구하는 프로그램을 작성하라.
- 제출코드
const fs = require("fs")
const input = String(fs.readFileSync("/dev/stdin")).split(" ")
const king = 1 - Number(input[0])
const queen = 1 - Number(input[1])
const rook = 2 - Number(input[2])
const bishop = 2 - Number(input[3])
const knight = 2 - Number(input[4])
const pawn = 8 - Number(input[5])
console.log(`${king} ${queen} ${rook} ${bishop} ${knight} ${pawn}`)
- 테스트코드
// 입력
const input = `0 1 2 2 2 7`
// 출력
const inputSplit = `0 1 2 2 2 7`.split(" ")
const king = 1 - Number(inputSplit[0])
const queen = 1 - Number(inputSplit[1])
const rook = 2 - Number(inputSplit[2])
const bishop = 2 - Number(inputSplit[3])
const knight = 2 - Number(inputSplit[4])
const pawn = 8 - Number(inputSplit[5])
console.log(`${king} ${queen} ${rook} ${bishop} ${knight} ${pawn}`)

1. 3733 Shares
입력 텍스트 파일에서 정수 쌍을 읽는 프로그램을 작성하라.
- 제출코드
const fs = require("fs")
const input = String(fs.readFileSync("/dev/stdin"))
const a = input.split(`\n`)
const b = a.map((v) => v.split(` `))
const c = b.filter((v) => v.length !== 1)
const d = c.map((v) => v.map((v) => Number(v)))
const e = d.map((v) => Math.floor(v[1] / (v[0] + 1)))
e.forEach((v) => console.log(v))
- 테스트코드
// 입력
const input = `1 100
2 7
10 9
10 10
`
// 출력
const a = input.split(`\n`)
const b = a.map((v) => v.split(` `))
const c = b.filter((v) => v.length !== 1)
const d = c.map((v) => v.map((v) => Number(v)))
const e = d.map((v) => Math.floor(v[1] / (v[0] + 1)))
e.forEach((v) => console.log(v))

1. 4101 크냐?
각 테스트 케이스마다, 첫 번째 수가 두 번째 수보다 크면 Yes를, 아니면 No를 한 줄에 하나씩 출력하라.
입력의 마지막 줄에는 0이 두 개 주어진다.
- 제출코드
const fs = require("fs")
const input = String(fs.readFileSync("/dev/stdin"))
const a = input.split(`\n`)
const b = a.map((v) => v.split(` `))
const c = b.filter((v) => v.length !== 1)
const d = c.map((v) => v.map((v) => Number(v)))
const e = d.filter((v) => v[0] !== 0 && v[1] !== 0)
const f = e.map((v) => {
  return v[0] > v[1] ? `Yes` : `No`
})
f.forEach((v) => console.log(v))
- 테스트코드
const fs = require("fs")
const input = String(fs.readFileSync("/dev/stdin"))
const a = input.split(`\n`)
const b = a.map((v) => v.split(` `))
const c = b.filter((v) => v.length !== 1)
const d = c.map((v) => v.map((v) => Number(v)))
const e = d.filter((v) => v[0] !== 0 && v[1] !== 0)
const f = e.map((v) => {
  return v[0] > v[1] ? `Yes` : `No`
})
f.forEach((v) => console.log(v))

1. 4999 아!
1. 5337 웰컴
1. 5338 마이크로소프트 로고
1. 5339 콜센터
1. 5341 Pyramids
1. 5522 카드 게임
1. 5597 과제 안 내신 분..?
1. 6840 Who is in the middle?
1. 7287 등록
1. 7891 Can you add this?
1. 8370 Plane
1. 8393 합
1. 8437 Julka
1. 8545 Zadanie próbne
1. 8871 Zadanie próbne 2
1. 9086 문자열
1. 9498 시험 성적
1. 9653 스타워즈 로고
1. 9654 나부 함대 데이터
1. 10170 NFC West vs North
1. 10171 고양이
1. 10172 개
1. 10189 Hook
1. 10430 나머지
1. 10699 오늘 날짜
