1. class名で制御する
  tailwindcss, bootstrap, ...  
  どのclassがどのスタイルを持っているかを"覚える必要"がある

  既存はこんなめんどくさいことを繰り返した
    # here.js
    <div className="here">こちだよ</div>

    # here.css
    .here {
      margin-top: 8px;
    }

  classの制御するライブラリを採用すると。。。
    # here.js
    <div className="mt-2">こちだよ</div>


[tailwindcss 設置方法]

1. 最初これをやる
  $ npm install -D tailwindcss postcss autoprefixer
  $ npx tailwindcss init

1. postcss.config.jsを生成
  module.exports = {
    plugins: {
      tailwindcss: { config: "./tailwind.config.js" },
      autoprefixer: {},
    },
  }

1. tailwind.config.jsを生成
  /** @type {import('tailwindcss').Config} */
  module.exports = {
    content: ["./src/**/*.{jsx,js,ts,tsx}", "./public/index.html"],
    theme: {
      extend: {},
    },
    plugins: [],
  }

1. Webpack に tailwindcss を組み込む
  $ npm i -D postcss-loader css-loader style-loader


1. webpack.config.js を生成
  import path from "path"
  import webpack from "webpack"
  import HtmlWebpackPlugin from "html-webpack-plugin"
  import { CleanWebpackPlugin } from "clean-webpack-plugin"
  import ESLintPlugin from "eslint-webpack-plugin"
  import "webpack-dev-server"

  // const config: webpack.Configuration = { // webpack.config.ts
  const config = {
    mode: "development",
    entry: "./src/index.tsx",
    module: {
      rules: [
        {
          test: /\.(ts|tsx)$/,
          include: path.resolve(__dirname, "src"),
          use: ["babel-loader"],
        },
        {
          test: /\.css$/,
          include: path.resolve(__dirname, "src"),
          use: ["style-loader", "css-loader", "postcss-loader"],
        },
      ],
    },
    resolve: {
      extensions: [".tsx", ".ts", ".js"],
    },
    output: {
      path: path.resolve(__dirname, "dist"),
      filename: "bundle.js",
    },
    plugins: [
      new HtmlWebpackPlugin({
        template: "public/index.html",
      }),
      new CleanWebpackPlugin(),
      new ESLintPlugin({
        extensions: ["ts", "tsx"],
      }),
    ],
  }

  export default config

1. src/tailwind.cssを生成
  @tailwind base;
  @tailwind components;
  @tailwind utilities; 

1. tailwind.css 連結
  $ npx tailwindcss -i ./src/tailwind.css -o ./dist/output.css --watch

1. src/index.js 修正
  import React from 'react'
  import ReactDOM from 'react-dom/client'
  import App from './App'
  import "./tailwind.css"

  const root = ReactDOM.createRoot(document.getElementById('root'))
  root.render(<App />)
