[첫 현장에 임하는 마음가짐]

1. 합격을 했는데, 리모트?!
    물어볼 선배들과 함께 일할 수 있는 곳에서 일하면 된다.
    답례 잘 해야한다. 가르쳐주면서 하는 게 쉬운 일이 아니므로 감사함을 가질 것.

1. 합격을 했는데, 위치가 리모트가 아닌 첫 겐바. 가기 전 마음가짐.
    처음 1주일간은 어차피 할게 없으니 정시퇴근
    일 시작하고나서 한달동안은 사장님보다 늦게 퇴근하면 일을 못해도 잘릴 일은 없다.
    1시간은 검색으로 고민하고 그래도 안풀리는 문제는 번호를 매겨서 잘 정리해서 가자.
    현장에 오면 최대한 빨리 자기가 할 일을 파악하고 사양을 파악해서 엑셀에 트리구조로 정리해보자.
    짤리는 것은 두려워하지 말고, 두려워할 시간에 노력을 해라. 노력을 해도 짤리는 곳은, 짤려도 된다. 노력없이 스스로 그만두면, 그게 진짜 아웃이라 보면 된다.
    사무로 시작하면 사무로 끝나고 개발은 못 들어간다.

1. 이런 개발자는 자신의 마인드를 바꿔야 한다.
    일 정리가 안되는 상황을 만드는 사람. 
        사전 계획을 철저히 하고 트리 구조로 사양과 자료를 정리해야 한다.
        단순 서류라서 나만 보면 된다? 이런 마인드는 "나만 알면 된다" 식으로 변수명과 메소드명 작성하는 것과 똑같은 것이다. 
        이런 유형이 제일 질 나쁜 개발자라고 보면 된다.
    개발이 재미없는 사람.
        개발자의 능력은 "개발을 즐거워할 줄 아는가"에서 온다. 이게 가장 중요하다.
        쉬는 날 당신은 무얼 하고 있는가?    
    성격이 급한 사람.
        A를 위해서 빌드업중인데 "나는 A를 원해요. 그걸 해야돼요. 1+1을 하고 있는데 전 1+1 해야돼요."
        이렇게 당장 자기 뜻대로 안 된다고 급발진을 하는 사람들이 있다.        
        "그 설명"을 하고 있는데 다른 설명을 하고 있다고 생각하면, 다음부터 설명을 시작하기가 힘들어진다.
    공부 못 하는 사람.
        혹시, 애매한 것을 견딜 수 없는가?
        공부 잘 하는 사람의 특징은 속도감 있게 한권을 훑어볼 줄 안다는 것이고, 이는 다시 말해 애매모호함에 대해 내성이 있다는 거다.
        애매모호함을 견디면서 KPI를 지켜라.
        당신의 시간은 제한되어 있다.
        어차피 다 깊게 파려고 해서 1년안에 다 이해할 수도 없다.
        교과서로는 절대 알 수 없는, 현장 경험을 쌓아야만 이해할 수 있고 알게 되는 것이 있기 때문이다.
        그러니까, 중요한 건 큰 숲을 빨리 한번 보는 거다. 잘 모르겠으면 일단 넘기고 다 알려고 너무 목숨걸지 마라.

1. 첫 현장가면 파악해야할 것들
    깃주소
    슬랙
    사양파악 : 스프레드시트 등으로 트리구조로 정의해둘 것
        요건정의, 설계서, 사양서 : 보통 구글드라이브로 공유되어 있음
        개발 스케쥴, 공정
    업무 외 시간, 자투리 시간에 공부해야할 부분 파악
        집에서 필요한 부분 공부하고 회사에선 제품 소스코드 뜯어보면서 대기기간 동안 사양파악후 작업 대응 준비
        현장에서 받는 소스코드가 최고의 교과서이다.
