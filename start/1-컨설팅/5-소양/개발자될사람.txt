[개발자가 될 사람 안 될 사람을 가르는 단 한가지]

결론부터 말하면, 글쓰기를 잘 하느냐 못하느냐로 결정될 수 있다.
왜냐하면 개발자는 무엇보다도 자신의 생각을 잘 표현할 수 있어야 하기 때문이다.
일하는 과정에서 발생하는 무수한 요청, 질문, 정보전달을 하게 될 것이고,
가독성이 좋은 코드를 작성한다는 것도 결국은 읽기 쉬운 글을 쓰는 것과 같기 때문이다.
개발자는 대부분 협업을 할텐데, 그때 모든 팀원에게 자신의 생각을 잘 표현할 수 있도록 노력해야 한다.

그럼 어쩌라는 거냐? 글쓰기가 안되는 사람은 개발자 아예 하지 말라는거냐?
그런 분들을 위한 조언이 있다.
글쓰기를 잘 하기 위해서는 무엇보다도 많은 글을 읽어야 한다.
우선 많은 글을 읽어라. 그리고 많은 글을 써라.
그리고 많은 사람들과 대화를 하면서 자신의 생각을 잘 표현할 수 있도록 노력해라.
한편 코드의 세계에서는 무엇보다도 많은 코드를 읽어야 한다.
많은 코드를 읽어라. 그리고 많은 코드를 써라.
그리고 더 좋은 소스코드로써 표현을 할 수 있도록 고민하고 퇴고하는 과정을 거쳐야한다.

글쓰기를 잘한다, 혹은 커뮤니케이션이 된다는 것은 장황한 수식어로 멋들어지게 말을 많이 하는 것을 의미하는 것이 아니다.
오히려 그 반대이다. 말을 많이 하는 사람은 글쓰기를 잘한다고 할 수 없다.
글쓰기를 잘한다는 것은 자신의 생각을 "간결하고 명료하게 표현"할 수 있는 것이다.
간결한 표현으로도 상대에게 순식간에 이해되게 설명할 수 있어야 하는 것이다.
더 직설적으로 말하자면 "상대가 당신에게 투자해야할 시간을 줄여주는 것"을 말한다.
개발자에게 있어서 "시간은 돈"이기 때문이다.
회의를 하면서 쓸데없이 다른 사람의 시간을 뺏으며 길게 시간을 늘리는 사람들은 사실 "개발자로서의 능력이 없는 사람"이다.

이를 위해서는, 
상대가 쉽게 이해할 수 있게 간결한 문장으로 표현하는 습관을 들이고,
상대가 쉽게 이해할 수 있게 두괄식의 간결한 글로 표현하는 습관을 들여야 한다.
왜냐하면 그러한 습관이 쌓여서, 현장에 가서
상대가 쉽게 이해할 수 있게 질문하고, 대답하고, 요청하고, 정보 전달하고, 설명하고, 
의견 개진하고, 피드백하고, 회의하고, 미팅하고, 회고하고, 리뷰하고, 
코드를 짜고, 설계하고, 아키텍쳐를 짜고, 시스템을 구축하는 것으로 연결되기 때문이다.



[お仕事できる人、できない人を分ける一つの方法]

結論から言えば、それは文章を書く能力があるかないかによることです。
なぜなら開発者は何よりも自分の考えを適切に表現する能力が必要だからです。
仕事をする上で数多くのリクエストや問い合わせ、情報の伝達が発生し、
可読性の高いコードを書くということは、結局読みやすい文章を書くことと同じだからです。
開発者は大抵協力して作業をするため、全てのチームメンバーに対して自分の考えを適切に伝えることが求められます。

では、文章を書くのが苦手な人は開発者になるべきではないのでしょうか？
そんな方々へのアドバイスがあります。
文章を上手く書くためには何よりもたくさんの文章を読むことが必要です。
まずは多くの文章を読み、そして多くの文章を書いてみてください。
また、多くの人々と会話をし、自分の考えを適切に表現できるように努力してください。
また、コードの世界では何よりも多くのコードを読むことが重要です。
多くのコードを読み、そして多くのコードを書いてみてください。
そして、より良いソースコードを書くためには、考えて見直すプロセスが必要です。

文章を上手く書く、あるいはコミュニケーションができるとは、必ずしも多くの言葉を使って話すことを意味するわけではありません。
むしろ逆です。多くの言葉を使う人は文章を上手く書くとは言えません。
文章を上手く書くということは、自分の考えを「簡潔で明瞭」に表現できることを意味します。
簡潔な表現でも相手に一瞬で理解できるように説明する能力が必要です。
より直接的に言うなら、「相手があなたに投資する時間を削減する」ことを意味します。
開発者にとって「時間は金」なのです。
他人の時間を無駄にし、長々と話をする人は実は「開発者としての能力が不足している」人です。

そのためには、
相手が理解しやすいように簡潔な文章で表現する習慣を身につけ、
また、相手が理解しやすいように要領を得た簡潔な文章で書く習慣を身につけるべきです。
なぜなら、そのような習慣が積み重なって、現場で
相手が理解しやすいように質問し、回答し、要求し、情報を伝達し、説明し、
意見を出し、フィードバックし、会議を行い、ミーティングを行い、振り返り、レビューし、
コードを書き、設計し、アーキテクチャを組み立て、システムを構築することに繋がるからです。
