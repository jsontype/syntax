[자가진단표]
참조URL: https://notion.yumemi.co.jp/slack/jobstandard 

1. 자가진단표

1. 어소시에이트
  - 비즈니스 커뮤니케이션
    사내 비즈니스 커뮤니케이션의 기초가 익숙하다.
    15분 이내 해결하지 못할 시 질문한다.
    Slack의 커뮤니케이션이 원활하고 OJT(On the Job Training)을 스스로 할 수 있다.
    확실하지 않은 경우 누구에게 상담해야 하는지, 또는 어떤 팀과 상담해야 하는지 이해한다.
    필요에 따라, 페어워크의 의뢰, 상담을 할 수 있다.
    나쁜 소식을 신속하게 신고할 수 있다.
    로지컬 라이팅의 기초를 익히고 있다.
    상대방 발언의 배경과 의도를 이해한다.
    Git을 이용한 팀 개발의 기초 (Git Flow나 GitHub Flow 등)를 이해하고 실천하고 있다. 
    디버그의 기본을 이해해 툴을 이용해 디버그가 되어 있다. (「로그를 볼 수 있다」 「print 디버그를 할 수 있다」 「표준 출력이나 로그에 변수의 값을 출력해 디버그할 수 있다」등)
    가독성과 유지 보수성을 고려한 코드를 작성할 수 있다.
    지도 하에 테스트 코드를 작성할 수 있다.
    적당한 정도의 PR을 낼 수 있다.
    리뷰어가 의도를 읽기 쉽고, 의뢰 관점 등이 정리된 PR을 쓸 수 있다. (프로젝트에서 메시지 포맷이 규정되어 있으면, 거기에 따를 수 있다)
    기본 정보 기술자 시험 합격 레벨의 지식 이해가 있다. (취득하지 않으면 안 되는 것은 아니다)
    플랫폼, 개발 언어, 프레임워크, 라이브러리에 대한 기초 지식이 있어 실천에서 활용하고 있다.
    업무 지식, 개발 표준, 개발 프로세스, 문서 작성 방침, 코딩 규약 등 프로젝트별 지식과 가이드라인을 이해한 후 정책에 따라 팀에서 개발 업무를 수행할 수 있다.
    팀 및 프로젝트 정책에 따라 사양 및 매뉴얼 문서화가 가능다.
    지시를 받은 후에 인시던트 대응을 할 수 있다.
    스크럼의 기초를 이해하고 있다. (1권의 책을 읽은 정도의 이해는 있다)

- 자율·자학·자책
스스로 행동하는 토대가 되는 회사 이해가 있어, 필요한 배움을 자학한 다음, 책임을 스스로 수행할 수 있다
Corporate BASICs 이해
온보딩 프로그램 에서 1500점을 넘는 수준의 숙련이 있다
ZAC「연구개발업무2021＞프로젝트학습」의 조정계수가 필요 없어진 단계, 핸즈온에서의 육성 담당도 벗어나 자주할 수 있는 상태가 되어, 필요에 따라서 스스로 상담해 가는 것만으로 업무가 진행되는 단계에 되어 있다
자신의 전문적인 기술 영역에 대해 사내외의 공부회에 참가해 , 배움을 깊게 할 수 있다
업무 시간 외에도 활용하여, 새롭게 필요한 기술의 기초는 자주적으로 익힐 수 있어 일상적으로 출력하는 학습 습관이 몸에 붙어 있다
필요한 경우 영어 공식 문서 및 기본 정보를 읽을 수 있습니다.
GitHub에서 정기적으로 코드를 출력하고 코드를 작성하는 습관이 익숙합니다.
적독의 효용을 긍정적으로 파악한 후, 기준으로서 월간의 독서량의 5배의 적독을 실시할 수 있다
직위 가이드라인에 따른 능력 개발이나 전문성을 익히기 위해 필요에 따라 조언을 받기 위해 멘토가 되는 상대에게 자발적으로 연락을 취하고 멘토링을 받을 수 있다
그룹 정책을 이해하고 위원회 활동에 기여할 수 있습니다.
신졸 채용에 관계하는 캐주얼 면담, 오퍼 면담이나 설명회의 기회가 있으면 적극적으로 협력할 수 있다

500-520만

상기에 더해, 특정의 기술 영역에 대한 플랫폼, 개발 언어, 프레임워크, 라이브러리 등에 대해서 전반적인 기초 지식이 있어 실천으로 살리고 있다(모르는 것이 매일과 같이 있다고 하는 상태는 없어져 있다)
독력으로 테스트 코드를 평상시부터 쓸 수 있다

어소시에이트 엔지니어 추천 도서

리더블 코드
Clean Architecture - 전문가에게 배우는 소프트웨어의 구조와 디자인
SOFT SKILLS (기술이 아니라 처세술이나 기술자로서의 생존 전략으로서)

🔰
덧붙여 신졸은 입사 후 평균 6개월(표준 편차 3개월)에는, 어소시에이트의 가이드라인을 채울 것이 기대됩니다만, 유메미의 신졸 엔지니어에 대해서는, 800-1000시간 이상의 실천적인 프로그래밍 경력이 입사 앞에 있는 것이 표준적인 가정이 되고 있는 전제.
전문 직위  
전문가
520~570만

비즈니스 커뮤니케이션
사내 비즈니스 커뮤니케이션으로서 원활한 교환이 가능
결론에서 의견을 전할 수 있는
사실과 의견을 나누어 말할 수 있다
특히 아티팩트의 완료의 정의나 최종 이미지가 관계자간에 반드시 명확하지 않은 경우에, 예를 들면 2할 등 ​​도중의 완성도나 진척의 단계로, 리뷰나 어드바이스를 받을 수 있다(드래프트의 풀 리퀘스트 포함 한다 )
반복이나 WBS에서의 마일스톤을 이해하고, PM이나 리드 엔지니어 등에 적절한 진척 보고를 실시할 수 있다(적어도 진척 관리를 담당하는 역할의 사람이 곤란한 일이 없도록 되어 있다)
모야 모야 청취 의제가 있었을 때, 다른 사람의 모야 모야에 대해 즉시 해결책을 제시하지 않고 먼저 들을 수 있습니다.
센싱을 실시한 후, 회의의 참가자에게 느낀 것을 전할 수 있다
팀 협업
팀 개발에 전문성과 주체성을 갖춘
전문성
전체 시스템의 설계 사상, 방침을 이해한 후, 담당하는 기능 구현에 대한 상세 설계를 독력으로 실시할 수 있다
로그 관찰, 중단점 설정, 클라이언트 툴과 캡처 툴, 테스트 코드 구현 등 디버깅에 필요한 툴과 기법의 기본을 이해하고 체계적인 디버깅을 실천할 수 있다
가독성이나 보수성, 트레이서빌리티를 근거로 한 프로그램 실장이나, 에러 핸들링 설계를 한 실장이 가능
단위(Unit) 테스트, 기능(Feature) 테스트, E2E 테스트를 의식적으로 구분할 수 있는, 외부 서비스에 의존하는 부분을 모의/스텁으로 옮겨 테스트 할 수 있다
조언이나 지원을 받은 후에 보안을 고려한 코드를 쓸 수 있다
실시의 필요성의 상담을 한 후, 최적화된 리팩토링을 실시할 수 있다
구현을 담당하는 개발에 대해 공수 견적을 할 수 있다
주체성
개발 표준, 개발 프로세스 , 개발 환경, 회의 설계, 벨로시티, 팀의 관계성의 질에 대해 의견이나 개선 제안을 주체적으로 실시할 수 있다
사양에 대해 스스로 관계자에게 일하고 합의 형성할 수 있다
리드 엔지니어 등에 정책을 확인하면서 주체적으로 인시던트 대응을 할 수 있다
프리세일즈에 있어서, 팀의 상황에 따라 영업과 함께 상담에 참가한 다음, 히어링, 제안 대응을 주체적으로 실시할 수 있다.
자율·자학·자책
비즈니스 전문가로서 고품질의 일을 할 수 있습니다.
일을 할 때는, 적절한 입도의 티켓, 태스크에 분해되어 있는지 확인한 후에 작업을 실시할 수 있다
티켓이나 태스크 리스트 중에서 작업을 하는 경우는 우선 순위 나 의존관계를 이해, 고려한 후에 작업을 할 수 있다
인증 아토믹 스크럼　어소시에이트 상당 수준의 자기 관리 능력을 보유하고 있다
특정 기술 영역에서 전문성을 가진 뒤, 어소시에이트 직위에 대해, 일의 진행방법에 대한 지도나 성과물 리뷰(인격 부정은 실시하지 않고, 성과물 의 품질에 대해서 리뷰를 할 수 있다)를 실시하는 것 수
자신의 커리어나 성장 목표를 ' 캐리어 플랜 '으로 Notion에 기재하여 팀원들과 공유할 수 있다.
자신의 강점뿐만 아니라 약점이나 서투른 포인트에 대해서, Notion에 「트리세츠 」 로서 정리해, 팀 멤버에게 이해하게 하고 있다(트리세츠는 자신의 Slack의 OJT 채널로부터 링크로 추적되도록 하고 있다)
어소시에이트에게 그룹의 방침이나 위원회 활동의 방침을 전할 수 있다
팀의 렙으로서의 역할을 완수한 후, 그룹의 방침이나 위원회 활동에 대해서 의견을 낼 수가 있다
신인의 버디 담당 으로서 온보딩을 지원할 수 있다
채용과 관련된 취재 기회와 캐주얼 면담 기회가 있으면 적극적으로 협력 한 후 회사의 기본 방침을 이해하고 문제없이 설명 할 수 있습니다

전문 직위 추천 도서

엔지니어 조직론에 초대
소프트웨어 테스트 교과서　(여기의 책은 이론이 있다고 생각합니다)

🔰
덧붙여 신졸은 입사 후 평균 12개월(표준 편차 3개월)에는, 프로페셔널의 가이드라인을 채울 것이 기대됩니다

수석 전문가
570~620만

비즈니스 커뮤니케이션
광범위한 관계자와의 커뮤니케이션은 비즈니스 영향을 고려하여 이루어질 수 있습니다.
사내뿐만 아니라 고객과의 비즈니스 커뮤니케이션도 문제없이 원활하게 교환 할 수 있습니다.
사건에 대한 사후 분석에 적극적으로 참여하고 재발 방지 방법에 대해 제안 할 수 있습니다.
프로젝트에서 협력하는 다른 직종의 업무 내용이나 전문 용어 등을 이해하고 있으며, 협력성에서 원활한 커뮤니케이션이 가능하다
프로젝트에 관련된 도메인 지식에 대해 세부 사항까지 이해하고 있거나 서비스를 소비자 시점에서 이용할 수 있는 프로젝트라면 실제로 체험한 후의 커뮤니케이션이 가능하다.
실시하는 작업이나 업무 내용이 고객의 비즈니스에 어떠한 영향을 주는지를 이해하고 있어, 불명한 점은 확인하고 있다
센싱 은 내부 회의뿐만 아니라 고객과의 회의에서도 수행 할 수 있습니다.
팀 협업
특정 기술 영역에 대한 높은 전문성을 보유하고 전문가의 지도를 할 수 있다
높은 전문성
가독성, 유지보수성, 테스트 용이성, 변경 용이성, 내결함성, 추적 가능성 등을 고려하여 안정적으로 프로덕션 가능 코드를 작성할 수 있습니다 .
사양서(고객과 합의한 각종 문서의 총칭)의 신규 작성 및 정기적인 갱신을 실시해 , 특히 중요한 부분의 정보에 대해서는 최신으로 올바른 상태를 유지해 , 이력을 기록 관리할 수 있다
테스트 관점을 고려하여 테스트 케이스를 작성할 수 있으며, 필요에 따라 기능 테스트 사양서, 비기능 테스트 사양서를 작성할 수 있다 .
보수 운용에 있어서는, 자동화·효율화를 실시하는 것이 평상시부터 되어 있다
기술 부채를 줄이기 위해 계획된 리팩토링을 수행 할 수 있습니다.
시스템 전체의 아키텍처의 설계 사상이나 방침을 이해한 후, 서브 시스템의 설계나 구현을 실시할 수 있다
사양이 복잡한 부분이거나 서비스에 영향을 주는 부분의 개발도 담당할 수 있다
보안 및 성능과 같은 비기능 요구 사항을 고려한 코드를 작성할 수 있습니다.
응용 정보 기술자 시험에서 출제되는 범위의 내용에 대해 기초적인 이해가 있다 (취득하지 않으면 안 되는 것은 아니다)
지도력
리드 엔지니어 업무의 일부 업무(합의 형성, 리스크 세척, 진척 관리 등)를 보좌할 수 있다
특정 기술 영역에 대한 플랫폼 이해, 언어 사양, 프레임 워크, 라이브러리 등에 대한 깊은 이해와 가르침 수준
기술 표준의 선정이 가능
전문직위에 대한 코드 리뷰나 페어 프로 페어워크 등을 통해 개발에 대한 지도를 할 수 있다
1년 앞에는 도입이 필요한 새로운 기술에 대해 조사·검증을 실시하고 있어, 공부회 등에서 계몽·사전 공유가 되어 있다
테스트 코드를 평소부터 당연히 쓰고 있으며 전문가에게 지도할 수 있습니다.
공수 견적 검토가 가능
프리세일즈에서 영업과 함께 상담에 참가한 후 고객에게 직접 질문을 하거나 긍정적인 의견을 내거나 네거티브 리스크에 대해 지적할 수 있다.
자율·자학·자책
높은 자기 관리 능력과 연계에 필요한 주변기술 이해, 조직 공헌이 되어 있다
특정 프로젝트, 제품, 팀에 관계없이 독력으로 성과를 낼 수 있습니다.
공인 원자 스크럼의 전문 상당한 수준의 자기 관리 능력을 보유하고 있습니다.
특정 전문 영역뿐만 아니라 관련 주변 기술 영역에 대해서도 실제로 손을 움직여보고 이해합니다.
추천 도서 에 쓰여진 책의 내용을 이해합니다.
타사의 캐주얼 면담을 정기적으로 받는 등, 자신의 인재 시장 평가나 향후의 성장 기회점 등, 캐리어의 가능성을 생각하는 기회를 만들 수 있다
직위에 관계없이 참여하는 멤버에게 좋은 점(Good)뿐만 아니라 향후 기회점(Next)도 피드백할 수 있다
그룹의 방침이나 위원회 활동에 대해서 개선 제안이나 JIKKEN적인 대처에 대해서 제안할 수 있다
채용 관계의 코딩 시험의 리뷰를 실시할 수 있다
🔰
덧붙여 신졸은 입사 후 평균 18개월(표준 편차 6개월)에는, 치프 프로의 가이드라인을 채울 것이 기대됩니다
리더 직위   
크게는, 3개의 역할을 선택해(겸무도 좋지만, 자신의 자질, 지향성에 있던 주축은 결정해 주세요) 캐리어 플랜에 기재해 두어 주세요.

덧붙여 유메미는 관리직이 없는 조직이기 때문에, 일반적인 회사와 같이 피플 매니지먼트를 리더 직위에 요구되는 것은 아닙니다.

리드 엔지니어
테크 리드
마이스터 엔지니어
1. 리드 엔지니어
프로젝트 리드에 기대되는 역할
세 가지 핵심 가치
리드 엔지니어는 기술적인 전문성을 지닌 3가지 핵심 가치를 발휘하는 프로젝트 리드로서의 역할이 기대됩니다.

업무 진행 방법, 정보 공유 등 정책 수립
고객이나 관계자와의 상세 사양 조정이나, 전 공정에 있어서의 리스크 세탁
팀의 문제 해결, 작업 관리

서브 리드 엔지니어
600~650만

수석 전문 직위 능력을 갖고 표준 규모(동일한 직능의 엔지니어가 수명 정도), 난이도 프로젝트로 리드 엔지니어 업무를(리드 엔지니어로부터 지원을 받은 후) 할 수 있는
비즈니스 커뮤니케이션
고객의 사업이나 비즈니스 방침, 제품의 강점이나 특징 등을 이해하고 고객과 커뮤니케이션을 할 수 있다
프로젝트와 관련된 도메인 지식에 대해 담당하는 영역뿐만 아니라 주변 영역을 포함한 넓은 수준에서 이해하고 커뮤니케이션을 할 수 있다
사내 멤버와의 커뮤니케이션에 있어서, 사람에 의해 태도나 행동을 바꾸지 않도록 되어 있다(기본 태도 「Integrity」보다)
팀 협업
높은 전문성
기술적 부채의 삭감·상환에 관한 계획을 실시해, 주도적인 역할을 맡아 해결을 할 수 있다
각종 설계 패턴, 설계 수법을 이해한 후, 리드 엔지니어의 리뷰·지원을 받으면서 기본 설계를 실시할 수 있다
팀이 담당하는 기능의 구현 용이성이나 구현 가능성을 해치는 일이 없도록, 전 행정에서의 사양의 확인, 합의 형성, 연계하는 관련 시스템과의 사양 조정등을 실시할 수 있다
팀 경영
수석 전문가에게 프로젝트 리드 역할의 일부를 맡기고 육성, 지도를 할 수 있다
사건에 대해 사후 분석을 실시하고 재발 방지책을 세워 팀에 정착시킬 수 있다
회원들에게 중기 경력 관점에서 피드백할 수 있다
팀원의 강점과 약점을 이해합니다.
팀 작업의 우선 순위를 이해합니다.
팀원의 부하 상황을 파악하고 있습니다.
팀에 새롭게 참여하는 멤버의 온보딩 프로그램을 개선할 수 있다
시스템 코치나 리드 엔지니어의 지원을 받은 뒤, 팀의 관계성의 질을 높이기 위한 대화의 장을 만들 수 있다
팀 구성원이 의견을 듣기 쉬운 장소를 만들 수 있습니다.
팀원끼리의 정기적인 되돌아가는 장소를 만들 수 있다

🔰
덧붙여 신졸은 입사 후 평균 30개월(표준 편차 6개월)에는, 서브·리드 엔지니어의 가이드 라인을 충족하는 것이 기대됩니다

리드 엔지니어
650~720만

🏡
엔지니어로서의 기술적 전문성 외에도 프로젝트 리드로서 성과를 내고 있습니다.
표준을 넘는 난이도가 높은 프로젝트에서도 프로젝트 리드로서 3개의 코어 밸류의 발휘가 충분히 인정된 단계
비즈니스 커뮤니케이션
특정 프로젝트 매니저뿐만 아니라 다양한 유형의 프로젝트 매니저와 원활하게 협력할 수 있습니다.
고객에게 팀의 활동 상태를 시각화하고 공유할 수 있습니다.
팀 외부와의 커뮤니케이션 허브가 될 수 있습니다.
외부 시스템과의 제휴에 있어서, 타사와 조정, 제휴할 필요가 있는 경우도, 선수 선수로 확인하기 쉬워 맞추어, 사전의 리스크를 씻어내, 책무의 분리를 한 다음, 타사에 대해서도 어떠한 요구도 발행 한 후, 협력적인 자세를 취하는 등 위험 · 협력 균형을 취한 커뮤니케이션을 취할 수있다
고객이나 사내 멤버와의 커뮤니케이션에 있어서, 사람에 의해 태도나 행동을 바꾸지 않게 되어 있다(기본 태도 「Integrity」보다)
팀 협업
높은 전문성
기술적인 높은 전문성을 가지고 있어 특정 팀이나 프로젝트에 의존하지 않고 리드 엔지니어 업무를 독력으로 실시할 수 있다(필수)
실제로 여러 프로젝트나 다른 팀원과의 조합으로 리드 엔지니어로서 업무를 독력으로 실시한 실적이 있다
고객 기업의 엔지니어 팀과 공동 개발을 실시하는 내제화 지원 업무에서도 고객으로부터 리드 엔지니어로서 기술적으로 평가되는 수준
기술적 부채의 상환에 관한 정책 책정을 주도하여 실시해, 스스로 복잡한 부분의 해결도 실시할 수 있다
팀 경영
설계 방침, 실장 방침, 문서 방침, 회의 설계, 역할 분담 등 제품 개발에 필요한 내용을 명확하게 문서로 정할 수 있다
팀원의 강점과 약점을 이해하고 팀의 성과를 최대한 발휘하는 역할 분담을 할 수 있다
예를 들어 드래커 스타일 운동과 같은 팀 빌딩과 관계의 질을 높이는 데 필요한 조치를 선택하고 수행할 수 있습니다.
태스크 우선순위를 이해한 후, 팀원의 부하 상황을 고려하면서 적절한 입도의 티켓, 태스크로 멤버에게 분담할 수 있다.
태스크의 진행 상황을 적극적으로 파악한 후, 늦은 태스크에 대해 적절한 해결을 위한 액션을 할 수 있다
팀 전체에 관련된 공수 견적을 정리할 수 있다
필요에 따라 스크럼 마스터 역할을 할 수 있습니다.
서브 리드 엔지니어에게 프로젝트 리드로서의 지원, 육성을 실시할 수 있다
팀 구성원이 새로운 도전이나 JIKKEN을 할 것을 권장하고 도전 행동에 대해 긍정적 인 피드백을 반환 할 수 있습니다.
의견을 많이 말하지 않는 팀의 멤버가 있었을 경우, 배려해 의견을 듣고, 거처를 만들어 줄 수 있다
팀 관계의 질을 높이기 위한 대화의 장을 설계, 준비할 수 있다
멤버끼리의 피어·피드백을 실시하는 장소 만들기를 정기적으로 실시할 수 있었고, 자신에게의 향후의 기회점(Next)도 포함한 피드백을 적극적으로 받도록 되어 있다

수석 리드 엔지니어
720~800만

🏡
난이도가 높은 프로젝트에 있어서의 프로젝트 리드로서의 성과나, 복수 팀을 횡단한 팀 매니지먼트, 리드 엔지니어의 육성 실적이 요구된다
사내에서도 본이 되는 리드 엔지니어이다
광범위한 도메인 지식이 있습니다.
규모가 표준 프로젝트보다 크거나 고객과의 조정 난이도가 높은 프로젝트 리드도 안정적으로 성공할 수 있다
프로젝트에서 여러 팀을 가로 지르는 팀 관리 (예 : iOS 및 Android, 서버 측 및 프런트 엔드, 여러 마이크로 서비스 등)
리드 엔지니어에게 프로젝트 리드로 육성 할 수 있습니다.
멤버들에게 건전한 엉뚱한 흔들림으로 등을 밀어주는 조언과 어사인을 촉구할 수 있다
탄력 리더십 서적에서 볼 수 있듯이 프로젝트 상황에 따라 리더십을 발휘하는 방법을 구분할 수 있습니다.

멀티 리드 엔지니어
800만~1000만

🏡
수석 리드 엔지니어가 멀티햇, 멀티 스택 등 폭넓게 역할 범위를 넓혀가는 경우에 멀티 리드 엔지니어로 자리매김
수석 리드 엔지니어에게 프로젝트 리드로 육성 할 수 있습니다.
LCP(리더십·서클·프로파일)의 연수를 수강해 자신의 리더십의 본연의 기회점을 향해, 트레이닝을 3개월 이상 실시했다
멀티 스택 예
iOS, Android 모두의 기술 전문성을 갖고 나서, iOS, Android 양쪽 제품의 설계 이해, 코드 이해가 있기 때문에, 모바일 앱에 관한 사양 조정을 되돌리지 않고, 구현 용이성도 고려한 다음에 , 통합적으로 리드할 수 있는 경우가 됩니다
멀티햇의 예
아키텍트 혹은 프로젝트 매니저(팀 빌딩·프리 세일즈·고객 절충·리스크 관리 등)의 역할도 겸무하여 담당하는 것으로, 프로젝트의 높은 품질이나 생산성에 공헌할 수 있다
사내 그룹 전체의 위원회 활동, 혹은 그룹을 횡단한 위원회 활동을 리드할 수 있는 레벨에서의 프로세스 매니지먼트를 겸무하고 담당해, 조직에 공헌할 수 있다


아키텍트(잠정)
700~800만

🏡
리드 엔지니어의 직위 가이드라인을 충족한 후 시스템 전체의 설계나 핵심 부분의 구현도 할 수 있다
여러 언어, 기술 표준 선정, 애플리케이션 개발 경험이 있음
인프라를 포함한 전체 시스템을 설계 할 수 있습니다.
대상 시스템의 비즈니스 요구 사항을 이해하고 설계 할 수 있습니다.
서비스 요청에 대해 시스템화 요구 사항으로 재구성, 정의할 수 있다
서비스 요구를 이해한 후, 성능·부하 시험의 계획을 책정할 수 있다
보안 요건, 감시 및 운영 요건을 고려한 설계가 가능
인프라 비용을 계산하여 최소 및 최적의 아키텍처를 설계할 수 있습니다.
속인성을 배제한 후, 운용 비용을 줄이는 설계가 가능
다양한 클라우드 서비스의 특성을 이해하고 요구 사항에 맞는 아키텍처 설계가 가능
요구 사항에 따라 단일 장애 지점을 만들지 않는 아키텍처 설계가 가능
아키텍트 지망의 리드 엔지니어에 대해 육성을 할 수 있다
기술 이해
다음 기술의 사용 경험이 있었고

컴퓨팅(EC2)
네트워크(VPC)
로드 밸런싱(ALB/NLB)
데이터베이스(RDS/Aurora)
스토리지(S3)
지표(ClodWatch Metrics) 및 로그(CloudWatch Logs)
컨테이너(ECS)
서버리스(Lambda)
CDN(CloudFront)
큐(SQS)
하기 기술로부터 3개 이상 이용 경험이 있는 등 AWS의 전문적인 서비스 이해가 있다
데이터 분석 (Firehose, Athena)
OLTP(Redshift)
CI/CD( CodePipeline, CodeBuild. CodeDeploy)
앱 모니터링(AWS X-Ray)
보안 모니터링(Amazon GuardDuty)
아이덴티티(Cognito)
컨테이너 로깅(Firelens)

리드 아키텍트(잠정)
800~1000만

🏡
규모가 크거나 복잡성이 높은 서비스에 있어서 시스템 전체의 설계 뿐만 아니라, 중요한 부분의 구현도 실시할 수 있다
복잡한 사양이거나, 서비스에 중대한 영향을 주는 영역(결제나 회원 기반, 금전이나 개인정보에 관련된 등)의 개발을 품질 높게 개발할 수 있다
기술적 부채가 크고, 정리해 영향 범위 큰 리플레이스나 리팩토링이 필요한 코드 베이스에 대해서도, 추진력 가지고 부채의 상환을 실시할 수 있다
(유메미 중에서도) 규모가 크거나 복잡성이 높은 서비스에 있어서, 인프라를 포함한 시스템 전체의 설계를 실시할 수 있다
아키텍처의 확장성, 라이프사이클, 감사 기준을 고려한 설계를 할 수 있다
시스템 개발 전체의 표준(프로세스, 문서 체계, 채용 기술)에 대해 최적의 선택을 할 수 있다
사양 조정 단계부터 관여하여 시스템의 과제, 요구에 대해 회의체의 장에서 디스션을 하면서 고객에 대한 다양한 아이디어나 기술적 해결방법, 실현방법, 설계상의 리스크 평가 또는 대책에 대해 제안 할 수 있습니다.
광범위한 도메인 지식이 있습니다.
아키텍트에 대해 육성을 할 수 있다

기술 이해
이하 기술로부터 2~3 개 이용 경험이 있는 등 전문성이 높은 영역의 경험이 있다
빅 데이터 (EMR)
ETL (Glue)
서비스 메쉬(AWS App Mesh)
Machine Learning계
싱글 사인온(AWS SSO)

테크 리드
700만~

🏡
서브 리드 엔지니어로서의 직위 가이드라인을 충족시킨 후, 높은 전문성과 설계, 실장력이 있어, 복수의 프로젝트·제품에 대하여 기술적인 과제 해결을 할 수 있다
특정 프로젝트뿐만 아니라 여러 프로젝트에 능동적으로 관여하여 기술적인 과제 해결을 할 수 있다(기준으로서, 자신이 특정 프로젝트의 핵심적인 설계, 구현에 관련되지 않는 경우, 5~10개의 프로젝트, 자신이 핵심적인 설계, 구현에 관여하는 경우도 3~4의 다른 프로젝트에 관여한다)
실장에 관련된 가동을 연간 평균하여 50% 이상 일정 확보를 하여 최신 기술로 캐치업 할 수 있다
설계 검토, 코드 검토를 실시하고, 필요에 따라 핵심 부분의 상세 설계, 구현도 담당함으로써 프로젝트의 품질 책임을 질 수 있다
개발 표준, 라이브러리 선정, 개발 프로세스(KPT, Daily Meeting, 브랜치 전략, issue/Pull Request의 운영)의 개선을 통해 생산성 극대화에 기여하고 있다
자신이 관여하지 않은 다른 프로젝트의 공수 견적에 대해서도 능동적으로 검토를 할 수 있다
팀 및 제품에 필요한 SLO/SLA 및 지표를 정의할 수 있습니다.
특정 기술에 대해서는 그룹 중에서도 기술적으로 첨단을 선도하는 영역을 가지고 있다.
필요에 따라 재사용 가능한 라이브러리를 개발할 수 있습니다.
800~900만

사내에서 테크 리드로서 충분한 실적이 인정된 단계
전문 분야에서 주요 컨퍼런스에서 전문성이 높은 등단을 할 수 있다
특정 팀 및 특정 제품의 기술 표준에 의존하지 않고 기술적으로 선도
♟️
리드 롤의 전술적 플레이 가이드라인
따라 움직이는 방법을 할 수 있습니다.
팀이나 제품에 필요한 SLO/SLA나 지표를 정의한 후 팀의 성숙화를 지원할 수 있다
요청을 받았을 때만 지원하는 것이 아니라, 스스로 팀에 일하고 필요에 따른 개입도 실시할 수 있다
행동 지침 참고
좋은 테크 리드, 나쁜 테크 리드 - 작은 잔치
이 기사는 아래 기사의 번역입니다. 저자의 허가를 받아 번역했습니다. 이 기사는 포스퀘어의 기술적 리더십을 간결하게 설명한 가이드다. 벤 홀로위츠의 "좋은 제품 머저, 나쁜 제품 머저"에서 영감을 얻고 있다. ...


tannomizuki.hatenablog.com

좋은 테크 리드, 나쁜 테크 리드 - 작은 잔치

수석 테크 리드
900~1000만

사내의 테크 리드에서도 견본이 되는 존재가 되고 있다
사외에서도 기술적으로 평가되는 특정 지견을 가지고
테크 리드에 대해 육성을 할 수 있다

3. 마이스터 엔지니어

프로젝트 리드나 테크 리드라는 팀에서 역할을 맡지 않아도 표준 엔지니어의 2배 이상의 생산성이 높은 엔지니어는 마이스터 인정되어 생산성에 맞추어 연 수상정도 높게 설정할 수 있다.


마이스터 엔지니어
650~700만

사내에서 마이스터 엔지니어로 인정된 단계
(중요항목) 그룹에서 상위 15% 이내의 생산성을 자랑한다(예를 들어 Findy Teams 등으로 측정되는 항목에서)
풀릭 수정 이유를 자세히 쓰고 검토하기 쉽습니다.
리뷰로 실제로 동작 확인을 제대로 하고, 책무의 잘라내기나 구체적인 개선안을 정중하게 낼 수 있다
반복 작업을 자동화, 단축화
주위가 좀처럼 하지 않지만, 하지 않으면 안 되는 작업을 솔선해 하고 있다
미래의 우려와 위험을 사전에 정확하게 예측하고 의견할 수 있음
복잡한 사양이거나, 서비스에 중대한 영향을 주는 영역(결제나 회원 기반, 금전이나 개인정보에 관련된 등)의 개발을 품질 높게 개발할 수 있다
기술적 부채가 크고, 정리해 영향 범위 큰 리플레이스나 리팩토링이 필요한 코드 베이스에 대해서도, 추진력 가지고 부채의 상환을 실시할 수 있다
사용자 경험을 고려한 후 제안, 의견을 낼 수 있다
의문점을 조사할 뿐만 아니라, 한층 깊은 레벨로 일을 이해하는 일을 하고 있다
문서에서는 쓸데없는 정보를 정리한 다음 정기적으로 최신화하고 처음 보는 사람에게도 알기 쉽게 구조화, 언어화하는 등 고려할 수 있다
하나의 관점이나 나름대로의 유의에 관계없이 타자 시점, 다각적인 시점을 가진 뒤에서 논의를 할 수 있다
지시를 가라앉지 않고, 전제나 목적을 확인한 후에, 목적에 따르고 있는지를 이해하고 있다

수석 마이스터 엔지니어
700만~1000만

사내에서 실적 있고 모범이 되는 마이스터 엔지니어.
그룹에서 상위 1~5%의 생산성을 자랑한다(예: Findy Teams 등에서 측정되는 항목에서)
대규모 서비스에 있어서 중대한 영향 있는 영역(결제나 회원 기반, 금전이나 개인정보에 관련되는 등)의 개발을 품질의 높이에 더해 생산성 높게 개발할 수 있다

리더 직위의 연수 가산 요소

마이스터 엔지니어 겸 리드 엔지니어
마이스터 엔지니어가 리드 엔지니어의 역할도 담당하는 경우
단, 마이스터 엔지니어로서 중요한 체크 항목인 상위 15%의 생산성을 자랑하는 부분은 필수 항목으로 하는 것


테크 리드 겸 리드 엔지니어
긴급한 상황에서는 리드 엔지니어를 스스로 실시하면서도, 리드 엔지니어의 육성 대상이 있는 경우는, 리드 엔지니어의 지원적, 교육적인 역할로 시프트해, 기술적인 지원에 전념하는 등, 유연하게 리드 엔지니어로부터 테크 리드의 역할을 변경할 수 있습니다.


멀티 스택 엔지니어
🏡
다만, 멀티 스택이 성과에 공헌하고 있어 역할을 계속적으로 실시하고 있는, 장래에도 실시될 상정이 필요. 승급 후, 역할이 없어진 경우에는 일정 유예 기간 경과 후, 감급할 가능성도 있다
서버측, 프런트엔드 등 연계성이 높은 2개 이상의 기술 영역에서 전문적인 지식, 경험을 보유한 수석 전문가 이상의 엔지니어를 가리킨다
특히 기술 영역으로서 연계성이 높고, 예를 들면 느슨하게 결합으로 설계되어 있어도, 책무 범위를 나눌 때에는, 실장 용이성 등을 고려한 상세 설계가 필요하기 때문에, 복수 분야에 대해 익숙하다 일이 미래의 유지 보수성 및 코드 복잡성 회피에 영향을 미칩니다.
리드 엔지니어처럼 팀을 리드하는 역할이 아니더라도, 상세 설계, 높은 품질을 리드해 나가는 역할로서 풀 스택 엔지니어의 역할이 기대되는 경우가 있다
서버 측, 프런트 엔드 및 인프라의 세 영역에 걸쳐 수석 전문가 인 멀티 스택 엔지니어를 풀 스택 엔지니어라고합니다. Netflix와 같은 대규모 마이크로서비스 아키텍처를 채용하는 중, 피처 팀이 확립되어 있으면 유용한 역할이지만, 유메미에서는 풀 스택이 요구되는 장면은 많지 않고, 아키텍트로서의 역할로서 복수 기술 이해가 필요한 장면이 많다. 한편, 아키텍트라도 모든 기술 영역을 가르칠 수 있는 레벨이 되기에는 난이도가 높고, 서버 사이드, 프런트 엔드, 모바일 어플로 나뉜다. 단, 모바일 앱 아키텍트의 경우 iOS, Android 이해가 필요.
프런트 엔드와 UI 디자인을 두 영역에서 전문성이 있다면 UX 엔지니어라고 부릅니다.
기업 엔지니어링에서 높은 수준이되면 전체 스택과 전체 사이클이 필요합니다.


멀티햇 엔지니어
🏡
다만, 멀티햇이 성과에 공헌하고 있어, 역할을 계속적으로 실시하고 있는, 장래도 실시되는 상정이 필요. 승급 후, 역할이 없어진 경우에는 일정 유예 기간 경과 후, 감급할 가능성도 있다
제품 소유자 또는 스크럼 마스터라는 스크럼에서 역할을 겸무 (모자를 덮는) 할 수있는 엔지니어
팀 빌딩 초기가 아니라 스크럼 팀이 안정되어 온 단계에서는 엔지니어가 스크럼 마스터를 겸무하는 것도 실시할 수 있게 된다
또는 제품에 일정 기간 관여함으로써 업무 지식을 깊게 이해하게 되며, 제품 소유자의 역할의 일부를 담당할 수도 있다(예: 에픽 제품 소유자 등).
겸무함으로써 팀으로서 스크럼 마스터가 혼자 의존하는 문제를 회피하거나 제품 소유자의 부담을 경감하는 것으로 이어진다


풀 사이클 엔지니어
🏡
다만, 풀 사이클이 성과에 연결되어 있어, 역할을 계속적으로 실시하고 있는, 장래도 실시되는 상정이 필요. 승급 후, 역할이 없어진 경우에는 일정 유예 기간 경과 후, 감급할 가능성도 있다
지속적인 전달 단계 프로젝트를 담당
리드 엔지니어로서의 능력 외에도 청문회, 요구 사항 정의, DevOps 및 창구 대응을 수행 할 수 있으며 프로젝트 요구 사항 정의 단계에서 릴리스까지 모든 단계에서 여러 역할을 일련으로 수행 할 수 있습니다. , 통상에서는 발휘할 수 없는 프로젝트의 퀄리티, 민첩성의 양립과, 혼자 몇 역의 높은 생산성의 발휘를 할 수 있다
그로스 해킹, 기업 엔지니어링, 프로토 타이핑 등에서 활약이 기대된다


수석 직위
수석 리드 엔지니어, 수석 기술 리드, 수석 마이스터 엔지니어, 수석 아키텍트
900~1300만

특정 프로젝트, 그룹뿐만 아니라 회사 전체에 참여하여 조직에 기여할 수 있습니다.
등단, 서적 출판, 잡지 기고 등 정보 발신을 실시해 회사의 기술 홍보의 공헌도 기대된다
외부 커뮤니티와의 네트워킹을 정기적으로 실시하여 최신 기술 정보를 획득할 수 있음
조직 전체에 관련된 설계, 기술 방침을 나타낼 수 있다
조직 전체의 강점으로 이어지는 개발 표준, 개발 프로세스 개선으로 생산성 극대화 노하우를 보유하고 있다
사내 표준 기술을 가진 엔지니어와 비교했을 때, 하나의 기준으로서 2.5배 이상의 생산성을 발휘하고 있다

멀티 스택 기계 학습 엔지니어
기계 학습 엔지니어와 어플리케이션 엔지니어를 겸무하는 멀티 스택의 경우, 기계 학습의 전문성에 따라 기준으로 50만~80만엔 이상은 연수익을 상향 조정하는 것
50만의 기준은 신졸에 있어서의 서버 사이드 엔지니어와 기계 학습 엔지니어 평균 연수상정의 차이로부터 설정하고 있습니다
80만에 대해서는 기계 학습 엔지니어로서의 전문성이 있었고, 멀티 스택으로서의 부가가치를 내고 있다고 전제가 됩니다
80만을 넘는 경우에 대해서는, 높은 기계 학습의 전문성, 멀티 스택으로서의 높은 부가가치를 내고 있는 전제가 됩니다
한편, 멀티 스택으로서 가치를 낼 수 없는 경우에는 가산 요소는 없지만, 적어도 기계 학습 엔지니어 단체로서의 시장 시세를 내리지 않게 할 필요가 있습니다