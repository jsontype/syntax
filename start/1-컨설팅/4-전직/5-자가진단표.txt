[자가진단표]
참조URL: https://notion.yumemi.co.jp/slack/jobstandard 

[쥬니어]

1. 어소시에이트 (350~500)
  - 비즈니스 커뮤니케이션
    사내 비즈니스 커뮤니케이션의 기초가 익숙하다.
    15분 이내 해결하지 못할 시 질문한다.
    Slack의 커뮤니케이션이 원활하고 OJT(On the Job Training)을 스스로 할 수 있다.
    확실하지 않은 경우 누구에게 상담해야 하는지, 또는 어떤 팀과 상담해야 하는지 이해한다.
    필요에 따라, 페어워크의 의뢰, 상담을 할 수 있다.
    나쁜 소식을 신속하게 신고할 수 있다.
    로지컬 라이팅의 기초를 익히고 있다.
    상대방 발언의 배경과 의도를 이해한다.
    Git을 이용한 팀 개발의 기초 (Git Flow나 GitHub Flow 등)를 이해하고 실천하고 있다. 
    디버그의 기본을 이해해 툴을 이용해 디버그가 되어 있다. (「로그를 볼 수 있다」 「print 디버그를 할 수 있다」 「표준 출력이나 로그에 변수의 값을 출력해 디버그할 수 있다」등)
    가독성과 유지 보수성을 고려한 코드를 작성할 수 있다.
    지도 하에 테스트 코드를 작성할 수 있다.
    적당한 정도의 PR을 낼 수 있다.
    리뷰어가 의도를 읽기 쉽고, 의뢰 관점 등이 정리된 PR을 쓸 수 있다. (프로젝트에서 메시지 포맷이 규정되어 있으면, 거기에 따를 수 있다)
    기본 정보 기술자 시험 합격 레벨의 지식 이해가 있다. (취득하지 않으면 안 되는 것은 아니다)
    플랫폼, 개발 언어, 프레임워크, 라이브러리에 대한 기초 지식이 있어 실천에서 활용하고 있다.
    업무 지식, 개발 표준, 개발 프로세스, 문서 작성 방침, 코딩 규약 등 프로젝트별 지식과 가이드라인을 이해한 후 정책에 따라 팀에서 개발 업무를 수행할 수 있다.
    팀 및 프로젝트 정책에 따라 사양 및 매뉴얼 문서화가 가능다.
    지시를 받은 후에 즉각적 대응을 할 수 있다.
    스크럼의 기초를 이해하고 있다.
  - 자율·자학·자책
    스스로 행동하는 것을 토대로, 필요한 배움을 독학한 다음, 스스로 책임을 질 수 있다.
    필요에 따라서 스스로 상담해 가는 것만으로 업무가 진행되는 단계가 되어 있다.
    업무 시간 외에도 활용하여, 새롭게 필요한 기술의 기초는 자주적으로 익힐 수 있어 일상적으로 출력하는 학습 습관이 몸에 붙어 있다.
    필요한 경우 영어 공식 문서 및 기본 정보를 읽을 수 있다.
    GitHub에서 정기적으로 코드를 출력하고 코드를 작성하는 습관에 익숙해져있다.
    개발이나 전문성을 익히기 위해 필요에 따라 조언을 받기 위해 멘토가 되는 상대에게 자발적으로 연락을 취하고 멘토링을 받을 수 있다.
    신졸 채용에 관계하는 캐주얼 면담, 오퍼 면담이나 설명회의 기회가 있으면 적극적으로 협력할 수 있다.
    특정의 기술 영역에 대한 플랫폼, 개발 언어, 프레임워크, 라이브러리 등에 대해서 전반적인 기초 지식이 있어 실천으로 살리고 있다.
    매일 모르는 것과 같은 상태는 없어져있다.
    스스로의 힘으로 테스트 코드를 처음부터 쓸 수 있다
    평균 6개월 후에는, 어소시에이트의 가이드 라인을 충족하는 것이 기대된다.

[인터미디엇]

1. 프로페셔널 (500~600)
  - 비즈니스 커뮤니케이션
    사내 비즈니스 커뮤니케이션으로서 원활한 교환이 가능
    결론으로부터 자신의 의견을 전달할 수 있다.
    사실과 의견을 나누어 말할 수 있다.
    특히 아티팩트의 완료의 정의나 최종 이미지가 관계자간에 반드시 명확하지 않은 경우에, 예를 들면 2할 등 ​​도중의 완성도나 진척의 단계로, 리뷰나 어드바이스를 받을 수 있다. (드래프트나 WIP의 PR 포함)
    반복이나 WBS에서의 마일스톤(이정표)을 이해하고, PM이나 리드 엔지니어 등에 적절한 진척 보고를 실시할 수 있다. (적어도 진척 관리를 담당하는 역할의 사람이 곤란한 일이 없도록 할수 있다.)
    타 멤버로부터 걱정되는 것들에 대한 청취나 의제가 있었을 때, 다른 사람의 불안에 대해 즉시 해결책을 제시하지 않고 먼저 들어줄 수 있다.
  - 팀 협업 (전문성)
    전체 시스템의 설계 사상, 방침을 이해한 후, 담당하는 기능 구현에 대한 상세 설계를 스스로의 힘으로 할 수 있다.
    로그 관찰, 중단점 설정, 클라이언트 툴과 캡처 툴, 테스트 코드 구현 등 디버깅에 필요한 툴과 기법의 기본을 이해하고 체계적인 디버깅을 실천할 수 있다.
    가독성이나 보수성, 트레이서빌리티를 근거로 한 프로그램 실장이나, 에러 핸들링 설계를 한 실장이 가능하다.
    단위(Unit) 테스트, 기능(Feature) 테스트, E2E 테스트를 의식적으로 구분할 수 있는, 외부 서비스에 의존하는 부분을 모의/스텁으로 옮겨 테스트 할 수 있다.
    조언이나 지원을 받은 후에 보안을 고려한 코드를 쓸 수 있다.
    리더와 상담을 해가면서, 최적화된 리팩토링을 실시할 수 있다.
    구현을 담당하는 개발에 대해 공수 견적을 할 수 있다.
  - 팀 협업 (주체성)
    개발 표준, 개발 프로세스 , 개발 환경, 회의 설계, 벨로시티(속도), 팀의 관계성의 질에 대해 의견이나 개선 제안을 주체적으로 실시할 수 있다.
    사양에 대해 스스로 관계자에게 일하고 합의 형성할 수 있다.
    리드 엔지니어 등에 정책을 확인하면서 주체적으로 인시던트 대응을 할 수 있다.
    프리세일즈에 있어서, 팀의 상황에 따라 영업과 함께 상담에 참가한 다음, 히어링, 제안 대응을 주체적으로 실시할 수 있다.
  - 자율·자학·자책
    일을 할 때는, 적절한 입도의 티켓, 태스크에 분해되어 있는지 확인한 후에 작업을 실시할 수 있다.
    티켓이나 태스크 리스트 중에서 작업을 하는 경우는 KPI(우선순위)나 의존관계를 이해, 고려한 후에 작업을 할 수 있다.
    인증 아토믹 스크럼 어소시에이트에 상당하는 수준의 자기 관리 능력을 보유하고 있다.
    특정 기술 영역에서 전문성을 가진 뒤, 어소시에이트 직위에 대해, 일의 진행방법에 대한 지도나 성과물 리뷰(인격에 대한 부정이 아닌, 성과물의 품질에 대해서 리뷰를 할 수 있다)를 실시할 수 있다.
    자신의 커리어나 성장 목표를 ' 캐리어 플랜'으로 Notion에 기재하여 팀원들과 공유할 수 있다.
    자신의 강점뿐만 아니라 약점이나 서투른 포인트에 대해서 정리해, 팀 멤버에게 이해시킬 수 있다.
    어소시에이트에게 팀의 방침을 전할 수 있다.
    신인의 버디 담당으로서 온보딩을 지원할 수 있다.
    채용과 관련된 취재 기회와 캐주얼 면담 기회가 있으면 적극적으로 협력 한 후 회사의 기본 방침을 이해하고 문제없이 설명 할 수 있다.
    평균 1년 후에는, 프로페셔널의 가이드 라인을 충족하는 것이 기대된다.

1. 치프 프로페셔널 (600~700)
  - 비즈니스 커뮤니케이션
    광범위한 관계자와의 커뮤니케이션은 비즈니스 영향을 고려하여 이루어질 수 있다.
    사내뿐만 아니라 고객과의 비즈니스 커뮤니케이션도 문제없이 원활하게 교환 할 수 있다.
    사건에 대한 사후 분석에 적극적으로 참여하고 재발 방지 방법에 대해 제안 할 수 있다.
    프로젝트에서 협력하는 다른 직종의 업무 내용이나 전문 용어 등을 이해하고 있으며, 협력성에서 원활한 커뮤니케이션이 가능하다.
    프로젝트에 관련된 도메인 지식에 대해 세부 사항까지 이해하고 있거나 서비스를 소비자 시점에서 이용할 수 있는 프로젝트라면 실제로 체험한 후의 커뮤니케이션이 가능하다.
    실시하는 작업이나 업무 내용이 고객의 비즈니스에 어떠한 영향을 주는지를 이해하고 있어, 불명확한 점을 확인하고 있다.
  - 팀 협업 (높은 전문성)
    가독성, 유지보수성, 테스트 용이성, 변경 용이성, 내결함성, 추적 가능성등을 고려하여 안정적으로 프로덕션 가능 코드를 작성할 수 있다.
    사양서(고객과 합의한 각종 문서의 총칭)의 신규 작성 및 정기적인 갱신을 실시해 , 특히 중요한 부분의 정보에 대해서는 최신으로 올바른 상태를 유지해, 이력을 기록 관리할 수 있다.
    테스트 관점을 고려하여 테스트 케이스를 작성할 수 있으며, 필요에 따라 기능 테스트 사양서, 비기능 테스트 사양서를 작성할 수 있다 .
    보수 운용에 있어서는, 자동화·효율화를 실시하는 것이 익숙해져있다.
    기술 부채를 줄이기 위해 계획된 리팩토링을 수행 할 수 있다.
    시스템 전체의 아키텍처의 설계 사상이나 방침을 이해한 후, 서브 시스템의 설계나 구현을 실시할 수 있다.
    사양이 복잡한 부분이거나 서비스에 영향을 주는 부분의 개발도 담당할 수 있다.
    보안 및 성능과 같은 비기능 요구 사항을 고려한 코드를 작성할 수 있다.
  - 팀 협업 (지도력)
    리드 엔지니어 업무의 일부 업무(합의 형성, 리스크 세척, 진척 관리 등)를 보좌할 수 있다
    특정 기술 영역에 대한 플랫폼 이해, 언어 사양, 프레임 워크, 라이브러리 등에 대한 깊은 이해를 하고 있고, 가르칠 수 있는 수준이 되어 잇다.
    기술 표준의 선정이 가능이다.
    전문직위에 대한 코드 리뷰나 페어 프로 페어워크등을 통해 개발에 대한 지도를 할 수 있다.
    1년 앞에는 도입이 필요한 새로운 기술에 대해 조사·검증을 실시하고 있어, 공부회 등에서 계몽·사전 공유가 되어 있다.
    테스트 코드를 평소부터 당연히 쓰고 있으며 전문가에게 지도할 수 있다.
    공수 견적 검토가 가능하다.
    프리세일즈에서 영업과 함께 상담에 참가한 후 고객에게 직접 질문을 하거나 긍정적인 의견을 내거나 네거티브 리스크에 대해 지적할 수 있다.
  - 자율·자학·자책
    높은 자기 관리 능력과 연계에 필요한 주변기술 이해, 조직 공헌이 되어 있다.
    특정 프로젝트, 제품, 팀에 관계없이 독력으로 성과를 낼 수 있다.
    공인 원자 스크럼의 전문 상당한 수준의 자기 관리 능력을 보유하고 있다.
    특정 전문 영역뿐만 아니라 관련 주변 기술 영역에 대해서도 실제로 손을 움직여보고 이해한다.
    타사의 캐주얼 면담을 정기적으로 받는 등, 자신의 인재 시장 평가나 향후의 성장 기회점 등, 캐리어의 가능성을 생각하는 기회를 만들 수 있다.
    직위에 관계없이 참여하는 멤버에게 좋은 점(Good)뿐만 아니라 향후 기회점(Next)도 피드백할 수 있다.
    채용 코딩 시험의 리뷰를 실시할 수 있다.
    평균 1년6개월 후에는, 치프 프로페셔널의 가이드 라인을 충족하는 것이 기대된다.

[시니어]

1. 서브 리드 엔지니어 (700~800)
- 비즈니스 커뮤니케이션
    고객의 사업이나 비즈니스 방침, 제품의 강점이나 특징 등을 이해하고 고객과 커뮤니케이션을 할 수 있다.
    프로젝트와 관련된 도메인 지식에 대해 담당하는 영역뿐만 아니라 주변 영역을 포함한 넓은 수준에서 이해하고 커뮤니케이션을 할 수 있다.
- 팀 협업 (높은 전문성)
    기술적 부채의 삭감·상환에 관한 계획을 실시해, 주도적인 역할을 맡아 해결을 할 수 있다.
    각종 설계 패턴, 설계 수법을 이해한 후, 리드 엔지니어의 리뷰·지원을 받으면서 기본 설계를 실시할 수 있다.
    팀이 담당하는 기능의 구현 용이성이나 구현 가능성을 해치는 일이 없도록, 전 행정에서의 사양의 확인, 합의 형성, 연계하는 관련 시스템과의 사양 조정등을 실시할 수 있다.
  - 팀 협업 (팀 경영)
    수석 전문가에게 프로젝트 리드 역할의 일부를 맡기고 육성, 지도를 할 수 있다.
    사건에 대해 사후 분석을 실시하고 재발 방지책을 세워 팀에 정착시킬 수 있다.
    회원들에게 중기 경력 관점에서 피드백할 수 있다.
    팀원의 강점과 약점을 이해한다.
    팀 작업의 우선 순위를 이해한다.
    팀원의 부하 상황을 파악하고 있다.
    팀에 새롭게 참여하는 멤버의 온보딩 프로그램을 개선할 수 있다.
    시스템 코치나 리드 엔지니어의 지원을 받은 뒤, 팀의 관계성의 질을 높이기 위한 대화의 장을 만들 수 있다.
    팀 구성원이 의견을 듣기 쉬운 장소를 만들 수 있다.
    팀원끼리의 정기적인 되돌아가는 장소를 만들 수 있다.
    평균 2년6개월 후에는, 서브·리드 엔지니어의 가이드 라인을 충족하는 것이 기대된다.

1. 리드 엔지니어 (800~)
  - 리드 엔지니어는 기술적인 전문성을 지닌 3가지 핵심 가치를 발휘하는 프로젝트 리드로서의 역할이 기대된다.
    업무 진행 방법, 정보 공유 등 정책 수립
    고객이나 관계자와의 상세 사양 조정이나, 전 공정에 있어서의 리스크 제거
    팀의 문제 해결, 작업 관리
  - 비즈니스 커뮤니케이션
    특정 프로젝트 매니저뿐만 아니라 다양한 유형의 프로젝트 매니저와 원활하게 협력할 수 있다.
    고객에게 팀의 활동 상태를 시각화하고 공유할 수 있다.
    팀 외부와의 커뮤니케이션 허브가 될 수 있다.
    고객이나 사내 멤버와의 커뮤니케이션에 있어서, 사람에 의해 태도나 행동을 바꾸지 않게 되어 있다.
  - 팀 협업 (높은 전문성)
    기술적인 높은 전문성을 가지고 있어 특정 팀이나 프로젝트에 의존하지 않고 리드 엔지니어 업무를 독력으로 실시할 수 있다.(필수)
    실제로 여러 프로젝트나 다른 팀원과의 조합으로 리드 엔지니어로서 업무를 독력으로 실시한 실적이 있다.
    고객 기업의 엔지니어 팀과 공동 개발을 실시하는 내제화 지원 업무에서도 고객으로부터 리드 엔지니어로서 기술적으로 평가되는 수준.
    기술적 부채의 상환에 관한 정책 책정을 주도하여 실시해, 스스로 복잡한 부분의 해결도 실시할 수 있다.
  - 팀 협업 (팀 경영)
    설계 방침, 실장 방침, 문서 방침, 회의 설계, 역할 분담 등 제품 개발에 필요한 내용을 명확하게 문서로 정할 수 있다.
    팀원의 강점과 약점을 이해하고 팀의 성과를 최대한 발휘하는 역할 분담을 할 수 있다.
    태스크 우선순위를 이해한 후, 팀원의 부하 상황을 고려하면서 적절한 입도의 티켓, 태스크로 멤버에게 분담할 수 있다.
    태스크의 진행 상황을 적극적으로 파악한 후, 늦은 태스크에 대해 적절한 해결을 위한 액션을 할 수 있다.
    팀 전체에 관련된 공수 견적을 정리할 수 있다.
    필요에 따라 스크럼 마스터 역할을 할 수 있다.
    서브 리드 엔지니어에게 프로젝트 리드로서의 지원, 육성을 실시할 수 있다.
    팀 구성원이 새로운 도전이나 JIKKEN을 할 것을 권장하고 도전 행동에 대해 긍정적 인 피드백을 반환 할 수 있다.
    의견을 많이 말하지 않는 팀의 멤버가 있었을 경우, 배려해 의견을 듣고, 거처를 만들어 줄 수 있다.
    팀 관계의 질을 높이기 위한 대화의 장을 설계, 준비할 수 있다.
    멤버끼리의 피어·피드백을 실시하는 장소 만들기를 정기적으로 실시할 수 있었고, 자신에게의 향후의 기회점(Next)도 포함한 피드백을 적극적으로 받도록 되어 있다.

1. 치프 리드 엔지니어 (900~)
  난이도가 높은 프로젝트에 있어서의 프로젝트 리드로서의 성과나, 복수 팀을 횡단한 팀 매니지먼트, 리드 엔지니어의 육성 실적이 요구된다.
  사내에서도 본이 되는 리드 엔지니어이다.
  광범위한 도메인 지식이 있다.
  규모가 표준 프로젝트보다 크거나 고객과의 조정 난이도가 높은 프로젝트 리드도 안정적으로 성공할 수 있다.
  프로젝트에서 여러 팀을 가로 지르는 팀 관리 (예: iOS 및 Android, 서버 측 및 프런트 엔드, 여러 마이크로 서비스 등)
  리드 엔지니어에게 프로젝트 리드로 육성 할 수 있다.
  멤버들에게 건전한 엉뚱한 흔들림으로 등을 밀어주는 조언과 어사인을 촉구할 수 있다.
  탄력 리더십 서적에서 볼 수 있듯이 프로젝트 상황에 따라 리더십을 발휘하는 방법을 구분할 수 있다.

1. 아키텍트 (잠정)
  리드 엔지니어의 직위 가이드라인을 충족한 후 시스템 전체의 설계나 핵심 부분의 구현도 할 수 있다.
  여러 언어, 기술 표준 선정, 애플리케이션 개발 경험이 있으며, 인프라를 포함한 전체 시스템을 설계 할 수 있다.
  대상 시스템의 비즈니스 요구 사항을 이해하고 설계 할 수 있다.
  서비스 요청에 대해 시스템화 요구 사항으로 재구성, 정의할 수 있다.
  서비스 요구를 이해한 후, 성능·부하 시험의 계획을 책정할 수 있다.
  보안 요건, 감시 및 운영 요건을 고려한 설계가 가능하다.
  인프라 비용을 계산하여 최소 및 최적의 아키텍처를 설계할 수 있다.
  속인성을 배제한 후, 운용 비용을 줄이는 설계가 가능하다.
  다양한 클라우드 서비스의 특성을 이해하고 요구 사항에 맞는 아키텍처 설계가 가능하다.
  요구 사항에 따라 단일 장애 지점을 만들지 않는 아키텍처 설계가 가능하다.
  아키텍트 지망의 리드 엔지니어에 대해 육성을 할 수 있다.
  다음 기술의 사용 경험이 있다.
    컴퓨팅(EC2)
    네트워크(VPC)
    로드 밸런싱(ALB/NLB)
    데이터베이스(RDS/Aurora)
    스토리지(S3)
    지표(ClodWatch Metrics) 및 로그(CloudWatch Logs)
    컨테이너(ECS)
    서버리스(Lambda)
    CDN(CloudFront)
    큐(SQS)
  하기 기술로부터 3개 이상 이용 경험이 있는 등 AWS의 전문적인 서비스 이해가 있다.
    데이터 분석 (Firehose, Athena)
    OLTP(Redshift)
    CI/CD( CodePipeline, CodeBuild. CodeDeploy)
    앱 모니터링(AWS X-Ray)
    보안 모니터링(Amazon GuardDuty)
    아이덴티티(Cognito)
    컨테이너 로깅(Firelens)

1. 테크리드 (잠정)
  이하 기술로부터 2~3 개 이용 경험이 있는 등 전문성이 높은 영역의 경험이 있다.
    빅 데이터 (EMR)
    ETL (Glue)
    서비스 메쉬(AWS App Mesh)
    Machine Learning계
    싱글 사인온(AWS SSO)
