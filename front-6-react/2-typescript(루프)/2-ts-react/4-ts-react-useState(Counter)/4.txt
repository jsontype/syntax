[useState로 선언한 State의 데이터타입 관리하기 - Counter 컴포넌트 편]

1. Counter 컴포넌트 만들기  
    정말 간단한 예제인 useState를 사용하는 카운터부터 만들어보자.

1. 사전준비 : 이전 파일 삭제
    Greetings.tsx 삭제


    
1. src/Counter.tsx 생성 : Generics를 사용하여 state의 데이터타입을 설정하기
    import { useState } from 'react'

    export default function Counter() {
        // useState를 사용할 때는 Generics를 사용하여 데이터타입을 설정해도 되고, 초기값으로 데이터타입이 유추되므로 안 해도 된다.
        // 단, state가 null일 수도 있고 아닐수도 있을 때는 Generics를 사용하여 데이터타입을 설정하는 게 좋다.
        // 예를 들면, 이런 느낌이다.
        // type NewsProps = { name: string; description: string }
        // const [news, setNews] = useState<NewsProps | null>(null)

        // Generics를 사용하여 state의 데이터타입을 설정하기
        const [count, setCount] = useState<number>(0)

        const onIncrease = () => setCount(count + 1)
        const onDecrease = () => setCount(count - 1)
        
        return (
            <div>
                <h1>{count}</h1>
                <div>
                    <button onClick={onIncrease}>+1</button>
                    <button onClick={onDecrease}>-1</button>
                </div>
            </div>
        )
    }



1. src/App.tsx 수정 : Counter를 렌더링
    import React from 'react'
    import Counter from './Counter'

    const App: React.FC = () => {
        return <Counter />
    }

    export default App



1. 테스트
    $ cd app1
    $ npm start
