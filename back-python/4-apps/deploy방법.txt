참조자료1 : https://wings2pc.tistory.com/entry/%EC%9B%B9-%EC%95%B1%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EC%99%B8%EB%B6%80-DB-%EC%82%AC%EC%9A%A9-%ED%95%98%EA%B8%B0pythonanywhere?category=777829
참조자료2 : https://wings2pc.tistory.com/entry/%EC%9B%B9-%EC%95%B1%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-Python-DB-%EC%97%B0%EB%8F%99-pythonanywhere-git-clone-%EC%82%AC%EC%9A%A9?category=777829
참조자료3 : https://wings2pc.tistory.com/entry/%EC%9B%B9-%EC%95%B1%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-Python-Flask-Pythonanywhere-%EB%B0%B0%ED%8F%AC-%ED%95%98%EA%B8%B0?category=777829

PyInstaller로 앱 배포하기

1. 가입
회원가입 접속 : https://www.pythonanywhere.com/pricing/
create a beginner account 클릭
대쉬보드 접속(자동) : https://www.pythonanywhere.com/user/ydhvocal/
설명읽기 : 콘솔, 파일매니저, 웹앱, 쥬피터, 탭(데이터베이스)

1. DB 생성
Database 클릭 -> mysql -> 비밀번호 입력 -> MySQL 초기화 클릭
DB명입력 : DB명 'mysql' -> PW ''
해당 DB 옆 start a console on 클릭 -> 로딩 기다림 -> $show tables; -> empty set 확인

1. 배포 설정
웹 배포 설정1 : Web 탭 -> 본인메일인증 -> 새로고침
웹 배포 설정2 : Web 탭 -> Add a new web app -> next -> flask -> python버전 선택 -> next -> /home/ydhvocal/[앱이름]/flask_app.py
웹 배포 설정3 : Run until 3 months from today -> Reload ~.pythonanywhere.com 순서대로 눌러준다.
웹 배포 설정4 : 자신의ID.pythonanywhere.com 에서 확인

1. 소스코드 작성
* 기본 소스는 app.py는 flask_app.py임
소스 최상단에 한글 인코딩문제 해결해놓기 : # -*- coding: utf-8 -*-
DB연동시 db명, user명, pw 설정 : flask_app 참조
* 소스의 맨마지막 앱실행 부분은 파이썬애니웨어에서는 필요가 없음

1. Flask 템플릿 적용 (프론트 HTML 만들기)
리팩토링
    {% include 'lib/top.html' ignore missing %}
    {% include 'lib/bottom.html' ignore missing %}
폴더 프레임워크에 맞게 구분
    /template : html만 넣는 곳
    /static : css, js, image 등 assets을 넣는 곳
템플릿 css, js 적용 : index.html 변경 (CSS등 연동시키는법)
    /static 로 경로변경
    src="{{ url_for('static', filename='assets/ ... ') }}"
    href="{{ url_for('static', filename='assets/ ... ') }}"
	CSS의 예
	<link href="lib/bootstrap/css/bootstrap.min.css" rel="stylesheet">을
	<link href="{{ url_for('static', filename='lib/bootstrap/css/bootstrap.min.css') }}" rel="stylesheet">로 변경
	JS의 예
	<script src="lib/jquery/jquery.min.js"></script>을
	<script src="{{ url_for('static', filename='lib/jquery/jquery.min.js') }}"></script>로 변경
	Image file의 예
	<img src="images/logo.png" alt="logo">을
	<img src="{{ url_for('static', filename='images/logo.png') }}" alt="logo">로 변경
Form 태그 수정
    회원가입용 폼
    로그인용 폼
    게시판용 폼

1. DB 연동
    파이썬애니웨어 DB 생성
    파이썬애니웨어 콘솔 열기
    pip install pymysql
    python
    >>> import pymysql
    DB 생성의 아이디와 패스워드로 flask_app.py안의 ★의 DB 설정부분 변경

1. Git 연동하여 파일 올리기
    그냥 올리려 하면 파일을 하나씩 밖에 못올리게 되어있으므로,
    버전관리도 할 겸, git허브에 저장소 만들고 그곳에 소스코드 푸시한 다음 이를 파이썬애니웨어 콘솔에서 풀로 당기자.
    해당 git을 파이썬애니웨어 홈페이지 -> console -> bash에서 ls -> cd mysite(사이트명) -> git init -> git remote add origin 깃주소 -> git pull origin master 하기 (/mysite/내 기존 파일 삭제후 진행)
